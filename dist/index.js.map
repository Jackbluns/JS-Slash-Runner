{"version":3,"file":"index.js","mappings":"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","sources":["webpack://JS-Slash-Runner/./src/compatibility.ts","webpack://JS-Slash-Runner/./src/component/audio.ts","webpack://JS-Slash-Runner/./src/component/character_level/index.ts","webpack://JS-Slash-Runner/./src/component/character_level/library.ts","webpack://JS-Slash-Runner/./src/component/character_level/script_iframe.ts","webpack://JS-Slash-Runner/./src/component/macro.ts","webpack://JS-Slash-Runner/./src/component/message_iframe.ts","webpack://JS-Slash-Runner/./src/component/script_repository.ts","webpack://JS-Slash-Runner/./src/iframe_client/index.ts","webpack://JS-Slash-Runner/./src/iframe_server/_impl.ts","webpack://JS-Slash-Runner/./src/iframe_server/audio.ts","webpack://JS-Slash-Runner/./src/iframe_server/character.ts","webpack://JS-Slash-Runner/./src/iframe_server/chat_message.ts","webpack://JS-Slash-Runner/./src/iframe_server/displayed_message.ts","webpack://JS-Slash-Runner/./src/iframe_server/frontend_version.ts","webpack://JS-Slash-Runner/./src/iframe_server/generate.ts","webpack://JS-Slash-Runner/./src/iframe_server/index.ts","webpack://JS-Slash-Runner/./src/iframe_server/lorebook.ts","webpack://JS-Slash-Runner/./src/iframe_server/lorebook_entry.ts","webpack://JS-Slash-Runner/./src/iframe_server/slash.ts","webpack://JS-Slash-Runner/./src/iframe_server/tavern_regex.ts","webpack://JS-Slash-Runner/./src/iframe_server/util.ts","webpack://JS-Slash-Runner/./src/iframe_server/variables.ts","webpack://JS-Slash-Runner/./src/index.ts","webpack://JS-Slash-Runner/./src/script_url.ts","webpack://JS-Slash-Runner/./src/slash_command/audio.ts","webpack://JS-Slash-Runner/./src/slash_command/event.ts","webpack://JS-Slash-Runner/./src/third_party.html","webpack://JS-Slash-Runner/./src/util/helper.ts","webpack://JS-Slash-Runner/./src/util/load_script.ts","webpack://JS-Slash-Runner/./src/util/multimap.ts","webpack://JS-Slash-Runner/external module \"../../../../../script.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/PromptManager.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/RossAscends-mods.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/authors-note.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions/regex/engine.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/group-chats.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/i18n.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/macros.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/openai.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/popup.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/power-user.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommand.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandArgument.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandCommonEnumsProvider.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandEnumValue.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandParser.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/tags.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/utils.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/world-info.js\"","webpack://JS-Slash-Runner/webpack/bootstrap","webpack://JS-Slash-Runner/webpack/runtime/define property getters","webpack://JS-Slash-Runner/webpack/runtime/hasOwnProperty shorthand","webpack://JS-Slash-Runner/webpack/runtime/make namespace object","webpack://JS-Slash-Runner/webpack/startup"],"sourcesContent":["// for compatibility with old sillytavern versions\nimport { characters, this_chid } from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { getTagsList } from '@sillytavern/scripts/tags';\nimport { equalsIgnoreCaseAndAccents } from '@sillytavern/scripts/utils';\n\n// for 1.12.6\n/**\n * Finds a character by name, with optional filtering and precedence for avatars\n * @param {object} [options={}] - The options for the search\n * @param {string?} [options.name=null] - The name to search for\n * @param {boolean} [options.allowAvatar=true] - Whether to allow searching by avatar\n * @param {boolean} [options.insensitive=true] - Whether the search should be case insensitive\n * @param {string[]?} [options.filteredByTags=null] - Tags to filter characters by\n * @param {boolean} [options.preferCurrentChar=true] - Whether to prefer the current character(s)\n * @param {boolean} [options.quiet=false] - Whether to suppress warnings\n * @returns {any?} - The found character or null if not found\n */\nexport function findChar({\n  name = null,\n  allowAvatar = true,\n  insensitive = true,\n  filteredByTags = null,\n  preferCurrentChar = true,\n  quiet = false,\n} = {}) {\n  const matches = (char: any) =>\n    !name ||\n    (allowAvatar && char.avatar === name) ||\n    (insensitive ? equalsIgnoreCaseAndAccents(char.name, name) : char.name === name);\n\n  // Filter characters by tags if provided\n  let filteredCharacters = characters;\n  if (filteredByTags) {\n    filteredCharacters = characters.filter(char => {\n      const charTags = getTagsList(char.avatar, false);\n      // @ts-ignore\n      return filteredByTags.every(tagName => charTags.some(x => x.name == tagName));\n    });\n  }\n\n  // Get the current character(s)\n  /** @type {any[]} */\n  // @ts-ignore\n  const currentChars = (selected_group as any)\n    ? // @ts-ignore\n      groups\n        // @ts-ignore\n        .find(group => group.id === selected_group)\n        // @ts-ignore\n        ?.members.map(member => filteredCharacters.find(char => char.avatar === member))\n    : // @ts-ignore\n      filteredCharacters.filter(char => characters[this_chid]?.avatar === char.avatar);\n\n  // If we have a current char and prefer it, return that if it matches\n  if (preferCurrentChar) {\n    const preferredCharSearch = currentChars.filter(matches);\n    if (preferredCharSearch.length > 1) {\n      // @ts-ignore\n      if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n      else console.warn('Multiple characters found for given conditions. Returning the first match.');\n    }\n    if (preferredCharSearch.length) {\n      return preferredCharSearch[0];\n    }\n  }\n\n  // If allowAvatar is true, search by avatar first\n  if (allowAvatar && name) {\n    const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n    if (characterByAvatar) {\n      return characterByAvatar;\n    }\n  }\n\n  // Search for matching characters by name\n  const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n  if (matchingCharacters.length > 1) {\n    // @ts-ignore\n    if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n    else console.warn('Multiple characters found for given conditions. Returning the first match.');\n  }\n\n  return matchingCharacters[0] || null;\n}\n","import { extensionFolderPath, extensionName } from '@/index';\nimport { initAudioSlashCommands } from '@/slash_command/audio';\n\nimport { chat_metadata, eventSource, event_types, saveSettingsDebounced } from '@sillytavern/script';\nimport {\n  extension_settings,\n  renderExtensionTemplateAsync,\n  saveMetadataDebounced,\n} from '@sillytavern/scripts/extensions';\nimport { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\nimport { isMobile } from '@sillytavern/scripts/RossAscends-mods';\nimport { getSortableDelay } from '@sillytavern/scripts/utils';\n\nexport let list_BGMS: string[] = [];\nexport let list_ambients: string[] = [];\nlet bgmEnded = true;\nlet ambientEnded = true;\nlet cooldownBGM = 0;\n\n// 定义默认音频设置\nexport const defaultAudioSettings = {\n  audio_setting: true,\n  bgm_enabled: true,\n  ambient_enabled: true,\n  bgm_mode: 'repeat',\n  bgm_muted: false,\n  bgm_volume: 50,\n  bgm_selected: null,\n  bgm_current_time: 0,\n  ambient_mode: 'stop',\n  ambient_muted: false,\n  ambient_volume: 50,\n  ambient_selected: null,\n  ambient_current_time: 0,\n  audio_cooldown: 0,\n};\n\n/**\n * 更新音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param isUserInput 是否由用户操作触发-将导致音频中断\n */\nexport async function updateAudio(type = 'bgm', isUserInput = false) {\n  if (!extension_settings[extensionName].audio.audio_setting) {\n    return;\n  }\n\n  const isTypeEnabled =\n    type === 'bgm'\n      ? extension_settings[extensionName].audio.bgm_enabled\n      : extension_settings[extensionName].audio.ambient_enabled;\n\n  if (!isTypeEnabled) {\n    return;\n  }\n  const audioEnded = type === 'bgm' ? bgmEnded : ambientEnded;\n  const audioSelector = `#audio_${type}`;\n\n  if (!isUserInput && $(audioSelector).attr('src') != '' && !audioEnded) {\n    return;\n  }\n\n  let audio_url = '';\n  const playlist = await getAudioUrl(type as 'bgm' | 'ambient');\n\n  if (isUserInput) {\n    audio_url =\n      type === 'bgm'\n        ? extension_settings[extensionName].audio.bgm_selected || playlist[0]\n        : extension_settings[extensionName].audio.ambient_selected || playlist[0];\n  } else {\n    const mode =\n      type === 'bgm'\n        ? extension_settings[extensionName].audio.bgm_mode\n        : extension_settings[extensionName].audio.ambient_mode;\n\n    const selected =\n      type === 'bgm'\n        ? extension_settings[extensionName].audio.bgm_selected\n        : extension_settings[extensionName].audio.ambient_selected;\n\n    audio_url = getNextFileByMode(mode, playlist, selected);\n  }\n\n  if (!audio_url) {\n    return;\n  }\n\n  const audio = $(audioSelector)[0] as HTMLAudioElement;\n\n  // 对于ambient类型，处理掉防缓存后缀\n  if (type === 'ambient') {\n    const cleanAudioSrc = audio.src.split('?')[0];\n    const cleanAudioUrl = audio_url.split('?')[0];\n    if (decodeURIComponent(cleanAudioSrc) === decodeURIComponent(cleanAudioUrl) && !audioEnded) {\n      return;\n    }\n  } else {\n    // 对于bgm类型，直接比较\n    if (decodeURIComponent(audio.src) === decodeURIComponent(audio_url) && !audioEnded) {\n      return;\n    }\n  }\n\n  // 设置audioEnded状态\n  if (type === 'bgm') {\n    bgmEnded = false;\n  } else {\n    ambientEnded = false;\n  }\n\n  if (type === 'bgm') {\n    audio.src = audio_url;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type);\n  } else {\n    // 对于ambient类型，使用缓存破坏\n    const audioUrlWithCacheBusting = getAudioUrlWithCacheBusting(audio_url);\n    audio.src = audioUrlWithCacheBusting;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type);\n  }\n\n  // 更新选中的音频\n  if (type === 'bgm') {\n    extension_settings[extensionName].audio.bgm_selected = audio_url;\n  } else {\n    extension_settings[extensionName].audio.ambient_selected = audio_url;\n  }\n\n  // 更新选择器\n  const selectElement = $(`#audio_${type}_select`);\n  if (selectElement.val() !== audio_url) {\n    selectElement.val(audio_url);\n  }\n\n  saveSettingsDebounced();\n}\n\n/**\n * 更新音频下拉选择菜单\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function updateAudioSelect(type = 'bgm') {\n  if (!extension_settings[extensionName].audio[`${type}_enabled`]) {\n    return;\n  }\n\n  const selectElement = $(`#audio_${type}_select`);\n  selectElement.empty();\n\n  if (type === 'bgm') {\n    list_BGMS = await getAudioUrl('bgm');\n  } else {\n    list_ambients = await getAudioUrl('ambient');\n  }\n\n  const audioList = type === 'bgm' ? list_BGMS : list_ambients;\n  let selectedSetting =\n    type === 'bgm'\n      ? extension_settings[extensionName].audio.bgm_selected\n      : extension_settings[extensionName].audio.ambient_selected;\n\n  if (audioList && audioList.length > 0) {\n    // 检查当前选择的音频是否在列表中，如果不在则选择第一个\n    if (!audioList.includes(selectedSetting)) {\n      console.warn(`[Audio] 当前选择的音频 ${selectedSetting} 不在列表中，自动选择列表第一个音频`);\n      selectedSetting = audioList[0];\n      if (type === 'bgm') {\n        extension_settings[extensionName].audio.bgm_selected = selectedSetting;\n      } else {\n        extension_settings[extensionName].audio.ambient_selected = selectedSetting;\n      }\n      saveSettingsDebounced();\n    }\n\n    const audioFiles = Array.isArray(audioList) ? audioList : audioList.split(',').map(file => file.trim());\n    audioFiles.forEach(file => {\n      const fileLabel = file.replace(/^.*[\\\\\\/]/, '').replace(/\\.[^/.]+$/, '');\n      selectElement.append(new Option(fileLabel, file));\n    });\n\n    selectElement.val(selectedSetting);\n  } else {\n    console.log(`[Audio] 暂无可用的 ${type.toUpperCase()} 资源`);\n  }\n}\n\n/**\n * 获取音频URL\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @returns 音频URL数组\n */\nexport async function getAudioUrl(type = 'bgm') {\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  const chatSpecificUrls = chat_metadata.variables?.[typeKey] || [];\n  return chatSpecificUrls;\n}\n\n/**\n * 添加缓存参数防止缓存\n * @param originalUrl 原始URL\n */\nexport function getAudioUrlWithCacheBusting(originalUrl: string) {\n  if (!originalUrl) return '';\n  const cacheBuster = new Date().getTime();\n  const separator = originalUrl.includes('?') ? '&' : '?';\n  return `${originalUrl}${separator}_=${cacheBuster}`;\n}\n\n/**\n * 根据播放模式获取下一个音频文件\n * @param mode 播放模式\n * @param playlist 播放列表\n * @param currentFile 当前文件\n */\nexport function getNextFileByMode(mode: string, playlist: string[], currentFile: string) {\n  if (!playlist || playlist.length === 0) {\n    return '';\n  }\n\n  switch (mode) {\n    case 'repeat':\n      return playlist[0];\n    case 'single':\n      return currentFile || playlist[0];\n    case 'random': {\n      const filteredPlaylist = playlist.filter(file => file !== currentFile);\n      if (filteredPlaylist.length === 0) {\n        return playlist[0];\n      }\n      const randomIndex = Math.floor(Math.random() * filteredPlaylist.length);\n      return filteredPlaylist[randomIndex];\n    }\n    case 'stop':\n      return '';\n    default:\n      return playlist[0];\n  }\n}\n\n/**\n * 切换音频控件状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param status 是否启用\n */\nexport function toggleAudioControls(type: 'bgm' | 'ambient', status = 'enable') {\n  const isMainEnabled = $('#audio_enabled').prop('checked');\n\n  // 只有当总开关打开且当前操作是启用控件时，才真正启用控件\n  const shouldEnable = isMainEnabled && status === 'enable';\n\n  const controlIds = [\n    `#audio_${type}_play_pause`,\n    `#audio_${type}_mute`,\n    `#audio_${type}_mode`,\n    `#audio_${type}_select`,\n    `#audio_${type}_volume_slider`,\n  ];\n\n  controlIds.forEach(id => {\n    $(id).prop('disabled', !shouldEnable);\n  });\n}\n\n/**\n * 点击音频启用按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function onAudioEnabledClick(type = 'bgm') {\n  const enabled = $(`#enable_${type}`).prop('checked');\n  extension_settings[extensionName].audio[`${type}_enabled`] = enabled;\n  saveSettingsDebounced();\n\n  if (enabled) {\n    toggleAudioControls(type as 'bgm' | 'ambient', 'enable');\n    await updateAudio(type, false);\n  } else {\n    ($(`#audio_${type}`)[0] as HTMLAudioElement).pause();\n    toggleAudioControls(type as 'bgm' | 'ambient', 'disable');\n  }\n}\n\n/**\n * 初始化音频事件监听\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initAudioEventListeners(type: 'bgm' | 'ambient') {\n  ($(`#audio_${type}`) as HTMLAudioElement).on('ended', async function () {\n    if (type === 'bgm') {\n      bgmEnded = true;\n    } else {\n      ambientEnded = true;\n    }\n    const mode = extension_settings[extensionName].audio[`${type}_mode`];\n\n    if (mode === 'stop') {\n      return;\n    }\n\n    await updateAudio(type, false);\n  });\n}\n\n/**\n * 初始化进度条\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initializeProgressBar(type: 'bgm' | 'ambient') {\n  cooldownBGM = extension_settings[extensionName].audio.audio_cooldown;\n  const $audioElement = $(`#audio_${type}`);\n  const $progressSlider = $(`#audio_${type}_progress_slider`);\n\n  $audioElement.on('timeupdate', function () {\n    if (!isNaN(this.duration)) {\n      const progressPercent = (this.currentTime / this.duration) * 100;\n      $progressSlider.val(progressPercent);\n    }\n    const cooldownBGM = extension_settings[extensionName].audio.audio_cooldown;\n    const remainingTime = this.duration - this.currentTime;\n\n    if (cooldownBGM > 0 && remainingTime <= cooldownBGM && !this.isFadingOut) {\n      const initialVolume = this.volume;\n      const fadeStep = initialVolume / (cooldownBGM * 10);\n      this.isFadingOut = true;\n\n      const fadeOutInterval = setInterval(() => {\n        if (this.volume > 0) {\n          this.volume = Math.max(0, this.volume - fadeStep);\n        } else {\n          clearInterval(fadeOutInterval);\n          this.isFadingOut = false;\n        }\n      }, 100);\n    }\n  });\n\n  $audioElement.on('play', function () {\n    const cooldownBGM = extension_settings[extensionName].audio.audio_cooldown;\n    const targetVolume = $(`#audio_${type}_volume_slider`).val() / 100;\n\n    if (cooldownBGM <= 0) {\n      this.volume = targetVolume;\n      return;\n    }\n\n    this.volume = 0;\n    const fadeStep = targetVolume / (cooldownBGM * 10);\n    let fadeInInterval = setInterval(() => {\n      if (this.volume < targetVolume) {\n        this.volume = Math.min(targetVolume, this.volume + fadeStep);\n      } else {\n        clearInterval(fadeInInterval);\n      }\n    }, 100);\n  });\n\n  $audioElement.on('loadedmetadata', function () {\n    if (!isNaN(this.duration)) {\n      $progressSlider.attr('max', 100);\n    }\n  });\n\n  $progressSlider.on('input', function () {\n    const value = $(this).val();\n    if (!isNaN($audioElement[0].duration)) {\n      $audioElement[0].currentTime = (value / 100) * $audioElement[0].duration;\n    }\n  });\n}\n\n/**\n * 音量滑块滚轮调节事件处理\n * @param e 事件对象\n */\nfunction onVolumeSliderWheelEvent(e) {\n  const slider = $(this);\n  e.preventDefault();\n  e.stopPropagation();\n\n  const delta = e.deltaY / 20;\n  const sliderVal = Number(slider.val());\n\n  let newVal = sliderVal - delta;\n  if (newVal < 0) {\n    newVal = 0;\n  } else if (newVal > 100) {\n    newVal = 100;\n  }\n\n  slider.val(newVal).trigger('input');\n}\n\n/**\n * 长按音量控制按钮出现音量调节\n * @param volumeControlId 音量控制按钮ID\n * @param iconId 音量控制按钮图标ID\n */\nfunction handleLongPress(volumeControlId, iconId) {\n  const $volumeControl = $('#' + volumeControlId);\n  const $icon = $('#' + iconId);\n  let pressTimer;\n\n  if (isMobile()) {\n    $icon.on('touchstart', function (e) {\n      pressTimer = setTimeout(() => {\n        $volumeControl.css('display', 'block');\n      }, 500);\n    });\n\n    $icon.on('touchend', function (e) {\n      clearTimeout(pressTimer);\n    });\n\n    $(document).on('click', function (event) {\n      if (\n        !$icon.is(event.target) &&\n        $icon.has(event.target).length === 0 &&\n        !$volumeControl.is(event.target) &&\n        $volumeControl.has(event.target).length === 0\n      ) {\n        $volumeControl.css('display', 'none');\n      }\n    });\n  }\n}\n\n/**\n * 刷新音频资源\n */\nexport async function refreshAudioResources() {\n  updateAudioSelect('bgm');\n  updateAudioSelect('ambient');\n}\n\n/**\n * 打开音频资源管理弹窗\n * @param typeKey 音频类型 \"bgmurl\" 或 \"ambienturl\"\n */\n\nasync function openUrlManagerPopup(typeKey: 'bgmurl' | 'ambienturl') {\n  const urlManager = $(await renderExtensionTemplateAsync(`${extensionFolderPath}`, 'urlManager'));\n  urlManager.prepend(`\n    <style>\n      #saved_audio_url.empty::after {\n        content: \"暂无音频\";\n        color: #999;\n        margin-top: 20px;\n        font-size: 12px;\n      }\n    </style>\n  `);\n  const savedAudioUrl = urlManager.find('#saved_audio_url').empty();\n  const urlTemplate = $(await renderExtensionTemplateAsync(`${extensionFolderPath}`, 'urlTemplate'));\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let urlValue: string[] = chat_metadata.variables[typeKey];\n  if (!urlValue) {\n    urlValue = [];\n\n    savedAudioUrl.addClass('empty');\n  } else {\n    try {\n      if (urlValue.length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    } catch (error) {\n      console.error(`[Audio] Failed to parse ${typeKey}:`, error);\n      return null;\n    }\n  }\n\n  const updatedUrls: Record<string, string> = {};\n  let newUrlOrder = [...urlValue];\n  let importedUrls: string[] = [];\n  function renderUrl(container: JQuery<HTMLElement>, url: string) {\n    const urlHtml = urlTemplate.clone();\n    let fileName;\n    if (url.includes('/')) {\n      const parts = url.split('/');\n      fileName = parts[parts.length - 1] || parts[parts.length - 2];\n    } else {\n      fileName = url;\n    }\n\n    const id = fileName.replace(/\\./g, '-');\n\n    urlHtml.attr('id', id);\n    urlHtml.find('.audio_url_name').text(fileName);\n\n    urlHtml.find('.audio_url_name').attr('data-url', url);\n\n    urlHtml.find('.edit_existing_url').on('click', async function () {\n      const currentUrl = urlHtml.find('.audio_url_name').attr('data-url');\n\n      if (!currentUrl) {\n        console.error('[Audio] No URL found for this element.');\n        return;\n      }\n\n      const inputUrl = await callGenericPopup('', POPUP_TYPE.INPUT, currentUrl);\n\n      if (!inputUrl) {\n        return;\n      }\n\n      const newFileName = inputUrl.split('/').pop();\n\n      const newId = newFileName.replace(/\\./g, '-');\n\n      urlHtml.attr('id', newId);\n      urlHtml.find('.audio_url_name').text(newFileName);\n      urlHtml.find('.audio_url_name').attr('data-url', inputUrl);\n\n      updatedUrls[currentUrl] = inputUrl;\n    });\n\n    urlHtml.find('.delete_url').on('click', async function () {\n      const confirmDelete = await callGenericPopup('确认要删除此链接?', POPUP_TYPE.CONFIRM);\n\n      if (!confirmDelete) {\n        return;\n      }\n\n      // 仅从DOM中移除元素\n      urlHtml.remove();\n\n      // 检查是否需要显示空状态提示\n      if (savedAudioUrl.find('.audio_url_name').length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    });\n\n    container.append(urlHtml);\n  }\n\n  urlValue.forEach(url => {\n    renderUrl(savedAudioUrl, url);\n  });\n  urlManager.find('#import_button').on('click', async function () {\n    const newUrls = await openUrlImportPopup();\n\n    if (!newUrls) {\n      console.debug(`[Audio] ${typeKey} URL导入已取消`);\n      return;\n    }\n\n    savedAudioUrl.removeClass('empty');\n\n    newUrls.forEach(url => {\n      renderUrl(savedAudioUrl, url);\n    });\n  });\n  (savedAudioUrl as any).sortable({\n    delay: getSortableDelay(),\n    handle: '.drag-handle',\n    stop: function () {},\n  });\n  const result = await callGenericPopup(urlManager, POPUP_TYPE.CONFIRM, '', {\n    okButton: `确认`,\n    cancelButton: `取消`,\n  });\n\n  if (!result) {\n    return;\n  } else {\n    // 直接读取所有data-url属性，生成新的URL列表\n    const newUrlList: string[] = [];\n    savedAudioUrl.find('.audio_url_name').each(function () {\n      const url = $(this).attr('data-url');\n      if (url) {\n        newUrlList.push(url);\n      }\n    });\n\n    // 检查当前播放的音频是否在新的列表中\n    const currentBgmUrl = extension_settings[extensionName].audio.bgm_selected;\n    const currentAmbientUrl = extension_settings[extensionName].audio.ambient_selected;\n\n    // 如果当前播放的音频不在新的列表中，停止播放\n    if (typeKey === 'bgmurl' && currentBgmUrl && !newUrlList.includes(currentBgmUrl)) {\n      const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n      bgmAudio.pause();\n      bgmEnded = true;\n    } else if (typeKey === 'ambienturl' && currentAmbientUrl && !newUrlList.includes(currentAmbientUrl)) {\n      const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n      ambientAudio.pause();\n      ambientEnded = true;\n    }\n\n    // 更新并保存新的URL列表\n    chat_metadata.variables[typeKey] = newUrlList;\n    saveMetadataDebounced();\n    if (typeKey === 'bgmurl') {\n      updateAudioSelect('bgm');\n    } else if (typeKey === 'ambienturl') {\n      updateAudioSelect('ambient');\n    }\n  }\n}\n\n/**\n * 点击音频总开关时的处理函数\n */\nasync function onEnabledClick() {\n  const isEnabled = $('#audio_enabled').prop('checked');\n  extension_settings[extensionName].audio.audio_setting = isEnabled;\n  saveSettingsDebounced();\n\n  if (isEnabled) {\n    toggleAudioControls('bgm', 'enable');\n    toggleAudioControls('ambient', 'enable');\n    const bgmUrl = await getAudioUrl('bgm');\n    const ambientUrl = await getAudioUrl('ambient');\n    if (bgmUrl.length > 0) {\n      const bgmAudioElement = $('#audio_bgm')[0] as HTMLAudioElement;\n      try {\n        await bgmAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音乐失败：没有提供有效源');\n      }\n    }\n    if (ambientUrl.length > 0) {\n      const ambientAudioElement = $('#audio_ambient')[0] as HTMLAudioElement;\n      try {\n        await ambientAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音效失败：没有提供有效源');\n      }\n    }\n  } else {\n    ($('#audio_bgm')[0] as HTMLAudioElement).pause();\n    ($('#audio_ambient')[0] as HTMLAudioElement).pause();\n    toggleAudioControls('bgm', 'disable');\n    toggleAudioControls('ambient', 'disable');\n  }\n}\n\n/**\n * 播放音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function playAudio(type: 'bgm' | 'ambient') {\n  if (\n    !extension_settings[extensionName].activate_setting ||\n    !extension_settings[extensionName].audio.audio_setting ||\n    !extension_settings[extensionName].audio[`${type}_enabled`]\n  ) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.error && audioElement.error.code === 4) {\n    console.warn(`The ${type} element has no supported sources. Trying to reload selected audio from dropdown...`);\n\n    const selectedAudio = $(`#audio_${type}_select`).val() as string;\n    if (!selectedAudio) {\n      console.error(`No audio selected for ${type}`);\n      return;\n    }\n\n    audioElement.src = selectedAudio;\n    audioElement.load();\n  }\n\n  try {\n    await audioElement.play();\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  } catch (error) {\n    console.error(`[Audio] 播放 ${type} 音频时出错:`, error);\n  }\n}\n\n/**\n * 点击各自音频模式按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioModeClick(type: 'bgm' | 'ambient') {\n  const modes = [\n    { mode: 'repeat', icon: 'fa-repeat' },\n    { mode: 'random', icon: 'fa-random' },\n    { mode: 'single', icon: 'fa-redo-alt' },\n    { mode: 'stop', icon: 'fa-cancel' },\n  ];\n\n  const currentModeIndex = modes.findIndex(m => m.mode === extension_settings[extensionName].audio[`${type}_mode`]);\n\n  const nextModeIndex = (currentModeIndex + 1) % modes.length;\n\n  extension_settings[extensionName].audio[`${type}_mode`] = modes[nextModeIndex].mode;\n\n  $(`#audio_${type}_mode_icon`).removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n\n  $(`#audio_${type}_mode_icon`).addClass(modes[nextModeIndex].icon);\n\n  saveSettingsDebounced();\n}\n\n/**\n * 音频选择变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioSelectChange(type: 'bgm' | 'ambient') {\n  extension_settings[extensionName].audio[`${type}_selected`] = $(`#audio_${type}_select`).val();\n  await updateAudio(type, true);\n  saveSettingsDebounced();\n}\n\n/**\n * 输入冷却时间的处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioCooldownInput() {\n  extension_settings[extensionName].audio.audio_cooldown = ~~($(`#audio_cooldown`).val() as string);\n  saveSettingsDebounced();\n}\n\n/**\n * 音频音量变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioVolumeChange(type: 'bgm' | 'ambient') {\n  extension_settings[extensionName].audio[`${type}_volume`] = ~~($(`#audio_${type}_volume_slider`).val() as string);\n  $(`#audio_${type}`).prop('volume', extension_settings[extensionName].audio[`${type}_volume`] * 0.01);\n  $(`#audio_${type}_volume`).text(extension_settings[extensionName].audio[`${type}_volume`]);\n  saveSettingsDebounced();\n}\n\n/**\n * 点击音频静音按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioMuteClick(type: 'bgm' | 'ambient') {\n  extension_settings[extensionName].audio[`${type}_muted`] = !extension_settings[extensionName].audio[`${type}_muted`];\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-high');\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-mute');\n  $(`#audio_${type}`).prop('muted', !$(`#audio_${type}`).prop('muted'));\n  $(`#audio_${type}_mute`).toggleClass('redOverlayGlow');\n  saveSettingsDebounced();\n}\n\n/**\n * 切换播放/暂停状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function togglePlayPause(type: 'bgm' | 'ambient') {\n  if (!extension_settings[extensionName].audio.audio_setting) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.paused) {\n    await playAudio(type);\n  } else {\n    audioElement.pause();\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  }\n}\n\n/**\n * 打开URL导入弹窗\n * @param type 音频类型\n */\nasync function openUrlImportPopup(): Promise<string[] | null> {\n  const input = await callGenericPopup('输入要导入的网络音频链接（每行一个）', POPUP_TYPE.INPUT, '');\n\n  if (!input) {\n    console.debug('[Audio] URL import cancelled');\n    return null;\n  }\n\n  const urlArray = input\n    .trim()\n    .split('\\n')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '');\n\n  return Array.from(new Set(urlArray));\n}\n\n// 聊天更改时的事件处理\neventSource.on(event_types.CHAT_CHANGED, async () => {\n  const $bgmPlayer = $('#audio_bgm')[0] as HTMLAudioElement;\n  const $ambientPlayer = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  if ($bgmPlayer && !$bgmPlayer.paused) {\n    $bgmPlayer.pause();\n  }\n\n  if ($ambientPlayer && !$ambientPlayer.paused) {\n    $ambientPlayer.pause();\n  }\n  await refreshAudioResources();\n  console.log('[Audio] 聊天已更改，音频资源刷新完成');\n});\n\n/** 初始化样式\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nfunction initAudioStyles(type: 'bgm' | 'ambient') {\n  // 隐藏默认播放器样式\n  $(`#audio_${type}`).hide();\n\n  if (extension_settings[extensionName].audio[`${type}_muted`]) {\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).addClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', true);\n  } else {\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).removeClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', false);\n  }\n\n  $(`#enable_${type}`).prop('checked', extension_settings[extensionName].audio[`${type}_enabled`]);\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement && audioElement.paused) {\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  } else if (audioElement && !audioElement.paused) {\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  }\n  updateAudioSelect(type);\n  initializeProgressBar(type);\n}\n\n/**\n * 初始化所有音频相关组件和事件监听器\n */\nexport function initAudioComponents() {\n  const audio_enabled = extension_settings[extensionName].audio.audio_setting;\n  $('#audio_enabled').prop('checked', audio_enabled).on('click', onEnabledClick);\n  if (audio_enabled) {\n    onEnabledClick();\n  }\n\n  // 初始化音乐和音效样式\n  initAudioStyles('bgm');\n  initAudioStyles('ambient');\n\n  const audioTypes = ['bgm', 'ambient'] as const;\n\n  const bindTypeEvents = (\n    type: 'bgm' | 'ambient',\n    events: Array<{\n      selector: string;\n      event: string;\n      handler: (type: 'bgm' | 'ambient') => void;\n    }>,\n  ) => {\n    events.forEach(({ selector, event, handler }) => {\n      $(`#${selector}`).on(event, () => handler(type));\n    });\n  };\n\n  audioTypes.forEach(type => {\n    $(`#enable_${type}`).on('click', () => onAudioEnabledClick(type));\n\n    bindTypeEvents(type, [\n      {\n        selector: `enable_${type}`,\n        event: 'click',\n        handler: onAudioEnabledClick,\n      },\n      {\n        selector: `audio_${type}_mode`,\n        event: 'click',\n        handler: onAudioModeClick,\n      },\n      {\n        selector: `audio_${type}_mute`,\n        event: 'click',\n        handler: onAudioMuteClick,\n      },\n      {\n        selector: `audio_${type}_volume_slider`,\n        event: 'input',\n        handler: onAudioVolumeChange,\n      },\n      {\n        selector: `audio_${type}_select`,\n        event: 'change',\n        handler: onAudioSelectChange,\n      },\n      {\n        selector: `audio_${type}_play_pause`,\n        event: 'click',\n        handler: togglePlayPause,\n      },\n    ]);\n\n    $('#audio_cooldown').on('input', onAudioCooldownInput).val(extension_settings[extensionName].audio.audio_cooldown);\n\n    // 监听音频结束事件\n    initAudioEventListeners('bgm');\n    initAudioEventListeners('ambient');\n\n    const volumeSlider = $(`#audio_${type}_volume_slider`).get(0);\n    if (volumeSlider) {\n      volumeSlider.addEventListener('wheel', onVolumeSliderWheelEvent, {\n        passive: false,\n      });\n    }\n  });\n\n  $('#audio_refresh_assets').on('click', async () => {\n    await refreshAudioResources();\n  });\n\n  handleLongPress('bgm-volume-control', 'audio_bgm_mute_icon');\n  handleLongPress('ambient-volume-control', 'audio_ambient_mute_icon');\n\n  const urlManagerMap = {\n    bgm: 'bgmurl',\n    ambient: 'ambienturl',\n  };\n\n  audioTypes.forEach(type => {\n    $(`#${type}_manager_button`).on('click', async () => {\n      await openUrlManagerPopup(urlManagerMap[type] as 'bgmurl' | 'ambienturl');\n      await refreshAudioResources();\n    });\n  });\n\n  const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n  const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  const togglePlayPauseIcon = (audioElement: HTMLAudioElement, iconSelector: string) => {\n    const icon = $(iconSelector);\n    audioElement.addEventListener('play', () => icon.removeClass('fa-play').addClass('fa-pause'));\n    audioElement.addEventListener('pause', () => icon.removeClass('fa-pause').addClass('fa-play'));\n  };\n\n  togglePlayPauseIcon(bgmAudio, '#audio_bgm_play_pause_icon');\n  togglePlayPauseIcon(ambientAudio, '#audio_ambient_play_pause_icon');\n  initAudioSlashCommands();\n}\n","import { destroy as destroyLibrary, initialize as initializeLibrary } from '@/component/character_level/library';\nimport {\n  destroy as destroyScriptIframe,\n  initialize as initializeScriptIframe,\n} from '@/component/character_level/script_iframe';\nimport { event_types, eventSource } from '@sillytavern/script';\n\nconst load_events = [event_types.CHAT_CHANGED] as const;\n\nlet app_ready = false;\nexport function initializeCharacterLevelOnExtension() {\n  const register_events = () => {\n    load_events.forEach(eventType => {\n      eventSource.makeFirst(eventType, initializeScriptIframe);\n      eventSource.makeFirst(eventType, initializeLibrary);\n    });\n  };\n\n  if (!app_ready) {\n    eventSource.once(event_types.APP_READY, () => {\n      app_ready = true;\n      initializeScriptIframe();\n      initializeLibrary();\n      register_events();\n    });\n  } else {\n    register_events();\n  }\n}\n\nexport function destroyCharacterLevelOnExtension() {\n  load_events.forEach(eventType => {\n    eventSource.removeListener(eventType, initializeScriptIframe);\n    eventSource.removeListener(eventType, initializeLibrary);\n  });\n  destroyScriptIframe();\n  destroyLibrary();\n}\n","import { loadScripts } from '@/util/load_script';\n\nexport let libraries_text: string = '';\n\nexport function initialize(): void {\n  const libraries = loadScripts('库-');\n  console.info(`[Library] 加载库: ${JSON.stringify(libraries.map(library => library.name))}`);\n\n  libraries_text = libraries.map(script => script.code).join('\\n');\n}\n\nexport function destroy(): void {\n  libraries_text = '';\n}\n","import { libraries_text } from '@/component/character_level/library';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { loadScripts, Script } from '@/util/load_script';\n\nlet script_map: Map<string, HTMLIFrameElement> = new Map();\n\nfunction makeScriptIframe(script: Script): { iframe: HTMLIFrameElement; load_promise: Promise<void> } {\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.id = `script-iframe-${script.name}`;\n\n  const srcdocContent = `\n    <html>\n    <head>\n      ${third_party}\n      <script src=\"${script_url.get('iframe_client')}\"></script>\n      ${libraries_text}\n    </head>\n    <body>\n      ${script.code}\n    </body>\n    </html>\n  `;\n\n  iframe.srcdoc = srcdocContent;\n\n  const load_promise = new Promise<void>(resolve => {\n    iframe.onload = () => {\n      console.info(`[Script](${iframe.id}) 加载完毕`);\n      resolve();\n    };\n  });\n\n  document.body.appendChild(iframe);\n\n  return { iframe, load_promise };\n}\n\nexport function destroy(): void {\n  if (script_map.size !== 0) {\n    console.log(`[Script] 清理全局脚本...`);\n    script_map.forEach((iframe, _) => {\n      iframe.remove();\n    });\n    script_map.clear();\n    console.log(`[Script] 全局脚本清理完成!`);\n  }\n}\n\nexport async function initialize(): Promise<void> {\n  try {\n    destroy();\n\n    const scripts = loadScripts('脚本-');\n    console.info(`[Script] 加载全局脚本: ${JSON.stringify(scripts.map(script => script.name))}`);\n\n    const load_promises: Promise<void>[] = [];\n\n    scripts.forEach(script => {\n      const { iframe, load_promise } = makeScriptIframe(script);\n      script_map.set(script.name, iframe);\n      load_promises.push(load_promise);\n    });\n\n    await Promise.allSettled(load_promises);\n  } catch (error) {\n    console.error('[Script] 全局脚本加载失败:', error);\n    throw error;\n  }\n}\n","import { getCharAvatarPath, getUserAvatarPath } from '@/component/message_iframe';\nimport { chat, chat_metadata, event_types, eventSource } from '@sillytavern/script';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { MacroFunction, MacrosParser } from '@sillytavern/scripts/macros';\n\nconst predefinedMacros = new Map<string, string | MacroFunction>([\n  ['userAvatarPath', getUserAvatarPath],\n  ['charAvatarPath', getCharAvatarPath],\n]);\n\n/**\n * 注册一个宏\n * @param {string} key - 宏的名称\n * @param {MacroFunction|string} value - 字符串或返回字符串的函数\n */\nexport function registerMacro(key: string, value: string | MacroFunction) {\n  MacrosParser.registerMacro(key, value);\n  console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n}\n\n/**\n * 注册所有预定义的宏\n */\nexport function registerAllMacros() {\n  for (const [key, value] of predefinedMacros.entries()) {\n    MacrosParser.registerMacro(key, value);\n    console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n  }\n}\n\n/**\n * 注销指定的宏\n * @param {string} key - 要注销的宏名称\n */\nexport function unregisterMacro(key: string) {\n  MacrosParser.unregisterMacro(key);\n  console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n}\n\n/**\n * 注销所有预定义的宏\n */\nexport function unregisterAllMacros() {\n  for (const key of predefinedMacros.keys()) {\n    MacrosParser.unregisterMacro(key);\n    console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n  }\n}\n\nfunction demacro(event_data: Parameters<ListenerType['chat_completion_prompt_ready']>[0]) {\n  const map = {\n    get_global_variable: extension_settings.variables.global,\n    get_chat_variable: (chat_metadata as { variables: Object }).variables,\n    get_message_variable:\n      chat\n        .filter(message => message.variables?.[message.swipe_id ?? 0] !== undefined)\n        .map(message => message.variables[message.swipe_id ?? 0])\n        .at(-1) ?? {},\n  };\n  event_data.chat.forEach(messages => {\n    messages.content = messages.content.replaceAll(\n      /\\{\\{(get_global_variable|get_chat_variable|get_message_variable)::(.*?)\\}\\}/g,\n      (_substring, type: keyof typeof map, path: string) => {\n        return JSON.stringify(_.get(map[type], path, null));\n      },\n    );\n  });\n}\n\nexport function initializeMacroOnExtension() {\n  eventSource.on(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n\nexport function destroyMacroOnExtension() {\n  eventSource.removeListener(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n","import { libraries_text } from '@/component/character_level/library';\nimport { extensionName, getSettingValue } from '@/index';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\n\nimport {\n  characters,\n  eventSource,\n  event_types,\n  getThumbnailUrl,\n  reloadCurrentChat,\n  saveSettingsDebounced,\n  this_chid,\n  updateMessageBlock,\n  user_avatar,\n} from '@sillytavern/script';\nimport { extension_settings, getContext } from '@sillytavern/scripts/extensions';\n\nlet tampermonkeyMessageListener: ((event: MessageEvent) => void) | null = null;\nlet renderingOptimizeEnabled = false;\n\nconst iframeResizeObservers = new Map();\n\n// 保存原始高亮方法\nconst originalHighlightElement = hljs.highlightElement;\n\nconst RENDER_MODES = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n};\n\nexport const partialRenderEvents = [\n  event_types.CHARACTER_MESSAGE_RENDERED,\n  event_types.USER_MESSAGE_RENDERED,\n  event_types.MESSAGE_UPDATED,\n  event_types.MESSAGE_SWIPED,\n];\n\nexport const defaultIframeSettings = {\n  auto_enable_character_regex: true,\n  auto_disable_incompatible_options: true,\n  tampermonkey_compatibility: false,\n  process_depth: 0,\n  rendering_optimize: false,\n};\n\n// 获取头像原图\nexport const charsPath = '/characters/';\nexport const getUserAvatarPath = () => `./User Avatars/${user_avatar}`;\nexport const getCharAvatarPath = () => {\n  const thumbnailPath = getThumbnailUrl('avatar', characters[this_chid].avatar);\n  const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n  return charsPath + targetAvatarImg;\n};\n\n/**\n * 清理后，重新渲染所有iframe\n */\nexport async function clearAndRenderAllIframes() {\n  await clearAllIframe();\n  await reloadCurrentChat();\n  await renderAllIframes();\n}\n\n/**\n * 渲染所有iframe\n */\nexport async function renderAllIframes() {\n  await renderMessagesInIframes(RENDER_MODES.FULL);\n  console.log('[Render] 渲染所有iframe');\n}\n\n/**\n * 渲染部分iframe\n * @param mesId 消息ID\n */\nexport const renderPartialIframes = (mesId: string) => {\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n    const messageIndex = parseInt(mesId, 10);\n\n    if (messageIndex < depthOffset) {\n      return;\n    }\n  }\n\n  renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n\n  console.log('[Render] 渲染' + mesId + '号消息的iframe');\n};\n\n/**\n * 使用了min-height:vh时，自动调整iframe高度\n */\nexport const viewport_adjust_script = `\n$(window).on(\"message\", function (event) {\n    if (event.originalEvent.data.request === \"updateViewportHeight\") {\n        const newHeight = event.originalEvent.data.newHeight;\n        $(\"html\").css(\"--viewport-height\", newHeight + \"px\");\n    }\n});\n`;\n\n/**\n * 油猴脚本\n */\nexport const tampermonkey_script = `\nclass AudioManager {\n  constructor() {\n    this.currentlyPlaying = null;\n  }\n  handlePlay(audio) {\n    if (this.currentlyPlaying && this.currentlyPlaying !== audio) {\n      this.currentlyPlaying.pause();\n    }\n    window.parent.postMessage({\n      type: 'audioPlay',\n      iframeId: window.frameElement.id\n    }, '*');\n\n    this.currentlyPlaying = audio;\n  }\n  stopAll() {\n    if (this.currentlyPlaying) {\n      this.currentlyPlaying.pause();\n      this.currentlyPlaying = null;\n    }\n  }\n}\nconst audioManager = new AudioManager();\n$('.qr-button').on('click', function() {\n  const buttonName = $(this).text().trim();\n  window.parent.postMessage({ type: 'buttonClick', name: buttonName }, '*');\n});\n$('.st-text').each(function() {\n  $(this).on('input', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  $(this).on('change', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  const textarea = this;\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n        window.parent.postMessage({ type: 'textInput', text: $(textarea).val() }, '*');\n      }\n    });\n  });\n  observer.observe(textarea, { attributes: true });\n});\n$('.st-send-button').on('click', function() {\n  window.parent.postMessage({ type: 'sendClick' }, '*');\n});\n$('.st-audio').on('play', function() {\n  audioManager.handlePlay(this);\n});\n$(window).on('message', function(event) {\n  if (event.originalEvent.data.type === 'stopAudio' &&\n    event.originalEvent.data.iframeId !== window.frameElement.id) {\n    audioManager.stopAll();\n  }\n});\n`;\n\n/**\n * 转换代码块中的min-height:vh\n * @param htmlContent 代码块内容\n * @returns 转换后的代码块内容\n */\nfunction processVhUnits(htmlContent: string) {\n  const hasMinVh = /min-height:\\s*[^;]*vh/.test(htmlContent);\n\n  if (!hasMinVh) {\n    return htmlContent;\n  }\n\n  const viewportHeight = window.innerHeight;\n  const processedContent = htmlContent.replace(/min-height:\\s*([^;]*vh[^;]*);/g, expression => {\n    const processedExpression = expression.replace(\n      /(\\d+)vh/g,\n      `calc(var(--viewport-height, ${viewportHeight}px) * $1 / 100)`,\n    );\n    return `${processedExpression};`;\n  });\n\n  return processedContent;\n}\n\n/**\n * 使用了min-height:vh时，更新iframe的viewport高度\n */\nfunction updateIframeViewportHeight() {\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      const viewportHeight = window.innerHeight;\n      $('iframe[data-needs-vh=\"true\"]').each(function () {\n        const iframe = this as HTMLIFrameElement;\n        if (iframe.contentWindow) {\n          iframe.contentWindow.postMessage(\n            {\n              request: 'updateViewportHeight',\n              newHeight: viewportHeight,\n            },\n            '*',\n          );\n        }\n      });\n    }\n  });\n}\n\n/**\n * 渲染消息到iframe\n * @param mode 渲染模式\n * @param specificMesId 指定消息ID\n */\nasync function renderMessagesInIframes(mode = RENDER_MODES.FULL, specificMesId: string | null = null) {\n  if (!getSettingValue('activate_setting')) {\n    return;\n  }\n\n  const context = getContext();\n  const totalMessages = context.chat.length;\n  const processDepth = parseInt($('#process_depth').val() as string, 10) || 0;\n  const depthLimit = processDepth > 0 ? processDepth : totalMessages;\n  const depthLimitedMessageIds = [...Array(totalMessages).keys()].slice(-depthLimit);\n\n  let messagesToRenderIds: number[] = [];\n  let messagesToCancelIds: number[] = [...Array(totalMessages).keys()].filter(\n    id => !depthLimitedMessageIds.includes(id),\n  );\n\n  if (mode === RENDER_MODES.FULL) {\n    messagesToRenderIds = depthLimitedMessageIds;\n  } else if (mode === RENDER_MODES.PARTIAL && specificMesId !== null) {\n    const specificIdNum = parseInt(specificMesId, 10);\n\n    if (depthLimitedMessageIds.includes(specificIdNum)) {\n      messagesToRenderIds = [specificIdNum];\n    } else {\n      return;\n    }\n  }\n\n  for (const messageId of messagesToCancelIds) {\n    const message = context.chat[messageId];\n    const $iframes = $(`[id^=\"message-iframe-${messageId}-\"]`);\n    if ($iframes.length > 0) {\n      await Promise.all(\n        $iframes.toArray().map(async iframe => {\n          destroyIframe(iframe as HTMLIFrameElement);\n        }),\n      );\n      updateMessageBlock(messageId, message);\n      addCodeToggleButtons(messageId);\n    }\n  }\n\n  const renderedMessages = [];\n  for (const messageId of messagesToRenderIds) {\n    const $messageElement = $(`.mes[mesid=\"${messageId}\"]`);\n    if (!$messageElement.length) {\n      console.debug(`未找到 mesid: ${messageId} 对应的消息元素。`);\n      continue;\n    }\n\n    const $codeElements = $messageElement.find('pre');\n    if (!$codeElements.length) {\n      continue;\n    }\n\n    let iframeCounter = 1;\n\n    $codeElements.each(function () {\n      let extractedText = extractTextFromCode(this);\n      if (!extractedText.includes('<body') || !extractedText.includes('</body>')) {\n        if (renderingOptimizeEnabled) {\n          addCodeToggleButtons(messageId);\n        }\n        return;\n      }\n      const disableLoading = /<!--\\s*disable-default-loading\\s*-->/.test(extractedText);\n      const hasMinVh = /min-height:\\s*[^;]*vh/.test(extractedText);\n      extractedText = hasMinVh ? processVhUnits(extractedText) : extractedText;\n\n      const $wrapper = $('<div>').css({\n        position: 'relative',\n        width: '100%',\n      });\n\n      const $iframe = $('<iframe>')\n        .attr({\n          id: `message-iframe-${messageId}-${iframeCounter}`,\n          srcdoc: '',\n          loading: 'lazy',\n        })\n        .css({\n          margin: '5px auto',\n          border: 'none',\n          width: '100%',\n        });\n\n      iframeCounter++;\n\n      if (hasMinVh) {\n        $iframe.attr('data-needs-vh', 'true');\n      }\n\n      let loadingTimeout: NodeJS.Timeout | null = null;\n      if (!disableLoading) {\n        const $loadingOverlay = $('<div>').addClass('iframe-loading-overlay').html(`\n            <div class=\"iframe-loading-content\">\n              <i class=\"fa-solid fa-spinner fa-spin\"></i>\n              <span class=\"loading-text\">Loading...</span>\n            </div>`);\n\n        loadingTimeout = setTimeout(() => {\n          const $loadingText = $loadingOverlay.find('.loading-text');\n          if ($loadingText.length) {\n            $loadingText.text('如加载时间过长，请检查网络');\n          }\n        }, 10000);\n\n        $wrapper.append($loadingOverlay);\n      }\n\n      $wrapper.append($iframe);\n\n      const srcdocContent = `\n        <html>\n        <head>\n          <style>\n          ${hasMinVh ? `:root{--viewport-height:${window.innerHeight}px;}` : ``}\n          html,body{margin:0;padding:0;overflow:hidden;max-width:100%!important;box-sizing:border-box}\n          .user_avatar,.user-avatar{background-image:url('${getUserAvatarPath()}')}\n          .char_avatar,.char-avatar{background-image:url('${getCharAvatarPath()}')}\n          </style>\n          ${third_party}\n          <script src=\"${script_url.get('iframe_client')}\"></script>\n          ${libraries_text}\n        </head>\n        <body>\n          ${extractedText}\n          ${hasMinVh ? `<script src=\"${script_url.get('viewport_adjust_script')}\"></script>` : ``}\n          ${\n            extension_settings[extensionName].render.tampermonkey_compatibility\n              ? `<script src=\"${script_url.get('tampermonkey_script')}\"></script>`\n              : ``\n          }\n        </body>\n        </html>\n      `;\n      $iframe.attr('srcdoc', srcdocContent);\n\n      $iframe.on('load', function () {\n        observeIframeContent(this as HTMLIFrameElement);\n\n        const $wrapper = $(this).parent();\n        if ($wrapper.length) {\n          const $loadingOverlay = $wrapper.find('.iframe-loading-overlay');\n          if ($loadingOverlay.length) {\n            $loadingOverlay.css('opacity', '0');\n            setTimeout(() => $loadingOverlay.remove(), 300);\n          }\n        }\n\n        if ($(this).attr('data-needs-vh') === 'true') {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                request: 'updateViewportHeight',\n                newHeight: window.innerHeight,\n              },\n              '*',\n            );\n          }\n        }\n\n        eventSource.emitAndWait('message_iframe_render_ended', this.id);\n\n        if (renderingOptimizeEnabled) {\n          removeCodeToggleButtonsByMesId(messageId);\n        }\n\n        if (loadingTimeout) {\n          clearTimeout(loadingTimeout);\n        }\n      });\n\n      eventSource.emitAndWait('message_iframe_render_started', $iframe.attr('id'));\n      $(this).replaceWith($wrapper);\n    });\n\n    renderedMessages.push(messageId);\n  }\n}\n\n/**\n * 观察iframe内容用于自动调整高度\n * @param iframe iframe元素\n */\nfunction observeIframeContent(iframe) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n  const docBody = $iframe[0].contentWindow.document.body;\n  const iframeId = $iframe.attr('id');\n\n  let resizeObserver = null;\n\n  adjustIframeHeight(iframe);\n\n  try {\n    if (window.ResizeObserver) {\n      resizeObserver = new ResizeObserver(() => {\n        adjustIframeHeight(iframe);\n      });\n      resizeObserver.observe(docBody);\n\n      if (iframeId) {\n        iframeResizeObservers.set(iframeId, resizeObserver);\n      }\n    }\n  } catch (e) {\n    console.error('ResizeObserver初始化错误:', e);\n  }\n\n  iframe.cleanup = () => {\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      if (iframeId) {\n        iframeResizeObservers.delete(iframeId);\n      }\n    }\n  };\n}\n\n/**\n * 销毁iframe\n * @param iframe iframe元素\n */\nfunction destroyIframe(iframe) {\n  const $iframe = $(iframe);\n\n  if (!$iframe.length) {\n    return;\n  }\n\n  const iframeId = $iframe.attr('id');\n\n  $iframe.off();\n\n  try {\n    if ($iframe[0].contentWindow) {\n      const iframeDoc = $iframe[0].contentWindow.document;\n      if (iframeDoc) {\n        $(iframeDoc).find('*').off();\n        $(iframeDoc).off();\n      }\n    }\n  } catch (e) {\n    console.debug('清理iframe内部事件时出错:', e);\n  }\n\n  try {\n    const $mediaElements = $iframe.contents().find('audio, video');\n    $mediaElements.each(function () {\n      if (this instanceof HTMLMediaElement) {\n        this.pause();\n        this.src = '';\n        this.load();\n        $(this).off();\n      }\n    });\n  } catch (e) {\n    console.debug('清理媒体元素时出错:', e);\n  }\n\n  if ($iframe[0].contentWindow && 'stop' in $iframe[0].contentWindow) {\n    $iframe[0].contentWindow.stop();\n  }\n\n  // 清空iframe内容\n  if ($iframe[0].contentWindow) {\n    try {\n      if (iframeId && typeof eventSource.removeListener === 'function') {\n        eventSource.removeListener('message_iframe_render_ended', iframeId);\n        eventSource.removeListener('message_iframe_render_started', iframeId);\n      }\n\n      $iframe.attr('src', 'about:blank');\n    } catch (e) {\n      console.debug('清空iframe内容时出错:', e);\n    }\n  }\n\n  // 断开ResizeObserver连接\n  if (iframe.cleanup && typeof iframe.cleanup === 'function') {\n    iframe.cleanup();\n  } else if (iframeId && iframeResizeObservers.has(iframeId)) {\n    const observer = iframeResizeObservers.get(iframeId);\n    observer.disconnect();\n    iframeResizeObservers.delete(iframeId);\n  }\n\n  // 从DOM中移除并清除引用\n  const $clone = $iframe.clone(false);\n  if ($iframe.parent().length) {\n    $iframe.replaceWith($clone);\n  }\n  if ($clone.parent().length) {\n    $clone.remove();\n  }\n\n  // 移除jQuery数据缓存\n  try {\n    $iframe.removeData();\n  } catch (e) {\n    console.debug('移除jQuery数据缓存时出错:', e);\n  }\n\n  // 清空iframe的属性\n  for (let prop in iframe) {\n    if (iframe.hasOwnProperty(prop)) {\n      try {\n        iframe[prop] = null;\n      } catch (e) {}\n    }\n  }\n\n  return null;\n}\n\n/**\n * 清理所有iframe\n * @returns {Promise<void>}\n */\nexport async function clearAllIframe(): Promise<void> {\n  const $iframes = $('iframe[id^=\"message-iframe\"]');\n  $iframes.each(function () {\n    destroyIframe(this);\n  });\n\n  // 清理相关的事件监听器\n  try {\n    if (typeof eventSource.removeAllListeners === 'function') {\n      eventSource.removeListener('message_iframe_render_started');\n      eventSource.removeListener('message_iframe_render_ended');\n    }\n  } catch (e) {\n    console.debug('清理事件监听器时出错:', e);\n  }\n\n  // 清理全局缓存\n  try {\n    $.cache = {};\n  } catch (e) {}\n\n  // 尝试主动触发垃圾回收\n  try {\n    let arr = [];\n    for (let i = 0; i < 10; i++) {\n      arr.push(new Array(1000000).fill(1));\n    }\n    arr = null;\n\n    if (window.gc) {\n      window.gc();\n    }\n  } catch (e) {\n    console.debug('尝试触发垃圾回收时出错:', e);\n  }\n}\n\n/**\n * 处理油猴脚本兼容模式传来的消息\n * @param event 消息事件\n */\nfunction handleTampermonkeyMessages(event: MessageEvent): void {\n  if (event.data.type === 'buttonClick') {\n    const buttonName = event.data.name;\n    $('.qr--button.menu_button').each(function () {\n      if ($(this).find('.qr--button-label').text().trim() === buttonName) {\n        $(this).trigger('click');\n        return false;\n      }\n    });\n  } else if (event.data.type === 'textInput') {\n    const $sendTextarea = jQuery('#send_textarea');\n    if ($sendTextarea.length) {\n      $sendTextarea.val(event.data.text).trigger('input').trigger('change');\n    }\n  } else if (event.data.type === 'sendClick') {\n    const $sendButton = jQuery('#send_but');\n    if ($sendButton.length) {\n      $sendButton.trigger('click');\n    }\n  }\n}\n\n/**\n * 油猴兼容模式-创建全局音频管理器\n */\nfunction createGlobalAudioManager() {\n  let currentPlayingIframeId: string | null = null;\n\n  window.addEventListener('message', function (event) {\n    if (event.data.type === 'audioPlay') {\n      const newIframeId = event.data.iframeId;\n\n      if (currentPlayingIframeId && currentPlayingIframeId !== newIframeId) {\n        $('iframe').each(function () {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                type: 'stopAudio',\n                iframeId: newIframeId,\n              },\n              '*',\n            );\n          }\n        });\n      }\n\n      currentPlayingIframeId = newIframeId;\n    }\n  });\n}\n\n/**\n * 调整iframe高度\n * @param iframe iframe元素\n */\nfunction adjustIframeHeight(iframe) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n\n  const doc = $iframe[0].contentWindow.document;\n\n  const bodyHeight = doc.body.offsetHeight;\n  const htmlHeight = doc.documentElement.offsetHeight;\n\n  const newHeight = Math.max(bodyHeight, htmlHeight);\n  const currentHeight = parseFloat($iframe.css('height')) || 0;\n\n  if (Math.abs(currentHeight - newHeight) > 5) {\n    $iframe.css('height', newHeight + 'px');\n\n    if ($iframe.attr('data-needs-vh') === 'true' && iframe.contentWindow) {\n      iframe.contentWindow.postMessage(\n        {\n          request: 'updateViewportHeight',\n          newHeight: window.innerHeight,\n        },\n        '*',\n      );\n    }\n  }\n}\n\n/**\n * 提取代码块中的文本\n * @param codeElement 代码块元素\n * @returns 提取的文本\n */\nfunction extractTextFromCode(codeElement: HTMLElement) {\n  let textContent = '';\n\n  $(codeElement)\n    .contents()\n    .each(function () {\n      if (this.nodeType === Node.TEXT_NODE) {\n        textContent += this.textContent;\n      } else if (this.nodeType === Node.ELEMENT_NODE) {\n        textContent += extractTextFromCode(this as HTMLElement);\n      }\n    });\n\n  return textContent;\n}\n\n/**\n * 删除消息后重新渲染\n * @param mesId 消息ID\n */\nexport async function renderMessageAfterDelete(mesId: string) {\n  const context = getContext();\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const totalMessages = context.chat.length;\n  const maxRemainId = parseInt(mesId, 10) - 1;\n  // 考虑到高楼层的情况，深度为0时，只渲染最后一个消息\n  if (processDepth === 0) {\n    const message = context.chat[maxRemainId];\n\n    const hasCodeBlock = $(`div[mesid=\"${mesId}\"] .mes_block .mes_text`).find('pre').length > 0;\n    const $iframe = $('[id^=\"message-iframe-' + maxRemainId + '-\"]');\n\n    if (!hasCodeBlock && $iframe.length === 0) {\n      return;\n    }\n    destroyIframe($iframe);\n    updateMessageBlock(maxRemainId.toString(), message);\n    await renderPartialIframes(maxRemainId);\n  } else {\n    const startRenderIndex = totalMessages - processDepth;\n    for (let i = startRenderIndex; i <= maxRemainId; i++) {\n      const message = context.chat[i];\n      const hasCodeBlock = $(`div[mesid=\"${i}\"] .mes_block .mes_text`).find('pre').length > 0;\n      const $iframe = $('[id^=\"message-iframe-' + i + '-\"]');\n\n      if (!hasCodeBlock && $iframe.length === 0) {\n        continue;\n      }\n      destroyIframe($iframe);\n      updateMessageBlock(i.toString(), message);\n      await renderPartialIframes(i.toString());\n    }\n  }\n}\n\n/**\n * 处理油猴兼容性设置改变\n */\nasync function onTampermonkeyCompatibilityChange() {\n  const isEnabled = Boolean($('#tampermonkey_compatibility').prop('checked'));\n  extension_settings[extensionName].render.tampermonkey_compatibility = isEnabled;\n  saveSettingsDebounced();\n\n  if (!getSettingValue('activate_setting')) {\n    return;\n  }\n\n  if (isEnabled) {\n    if (!tampermonkeyMessageListener) {\n      tampermonkeyMessageListener = handleTampermonkeyMessages;\n      window.addEventListener('message', tampermonkeyMessageListener);\n      createGlobalAudioManager();\n    }\n  } else {\n    if (tampermonkeyMessageListener) {\n      window.removeEventListener('message', tampermonkeyMessageListener);\n      tampermonkeyMessageListener = null;\n    }\n  }\n  await clearAndRenderAllIframes();\n}\n\n/**\n * 处理深度输入改变时\n */\nasync function onDepthInput() {\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n\n  if (processDepth < 0) {\n    toastr.warning('处理深度不能为负数');\n    $('#process_depth').val(extension_settings[extensionName].render.process_depth);\n    return;\n  }\n\n  extension_settings[extensionName].render.process_depth = processDepth;\n\n  await clearAndRenderAllIframes();\n\n  saveSettingsDebounced();\n}\n\nexport const handlePartialRender = (mesId: string) => {\n  console.log('[Render] PARTIAL render event triggered for message ID:', mesId);\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n    const messageIndex = parseInt(mesId, 10);\n\n    if (messageIndex < depthOffset) {\n      return;\n    }\n  }\n\n  setTimeout(() => {\n    renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n  }, 100);\n};\n\n/**\n * 注入加载样式\n */\nexport function injectLoadingStyles() {\n  if ($('#iframe-loading-styles').length) return;\n\n  const styleSheet = $('<style>', {\n    id: 'iframe-loading-styles',\n    text: `\n      .iframe-loading-overlay{\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        background:rgba(0,0,0,.7);\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        z-index:1000;\n        transition:opacity .3s ease\n      }\n      .iframe-loading-content{\n        color:#fff;\n        display:flex;\n        align-items:center;\n        gap:10px;\n        font-size:16px\n      }\n      .iframe-loading-content i{\n        font-size:20px\n      }\n      .loading-text {\n        transition: opacity 0.3s ease;\n      }`,\n  });\n\n  $('head').append(styleSheet);\n}\n\n/**\n * 注入代码块隐藏样式\n */\nexport function injectCodeBlockHideStyles() {\n  var styleId = 'hidden-code-block-styles';\n  var style = document.getElementById(styleId);\n  if (!style) {\n    style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('id', styleId);\n    document.head.appendChild(style);\n  }\n  style.innerHTML = `\n    pre {\n      display: none;\n    }\n    .code-toggle-button {\n      display: inline-block;\n      margin: 5px 0;\n      padding: 5px 10px;\n      background-color: rgba(0, 0, 0, 0.1);\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 0.9em;\n      user-select: none;\n      transition: background-color 0.3s;\n    }\n    .code-toggle-button:hover {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n  `;\n}\n\n/**\n * 移除代码块隐藏样式\n */\nfunction removeCodeBlockHideStyles() {\n  var styleId = 'hidden-code-block-styles';\n  var style = document.getElementById(styleId);\n  if (style) {\n    style.remove();\n  }\n}\n\n/**\n * 为消息添加折叠控件\n * @param $mesText 消息文本元素\n */\nfunction addToggleButtonsToMessage($mesText) {\n  if ($mesText.find('.code-toggle-button').length > 0 || $mesText.find('pre').length === 0) {\n    return;\n  }\n\n  $mesText.find('pre').each(function () {\n    const $pre = $(this);\n    const $toggleButton = $('<div class=\"code-toggle-button\">显示代码块</div>');\n    const $tooltip = $(\n      '<div style=\"display: none; font-size: 0.8em; opacity: 0.8;\">取消选中前端助手的‘前端卡渲染优化’选项以关闭此折叠功能</div>',\n    );\n\n    $toggleButton.on('click', function () {\n      const isVisible = $pre.is(':visible');\n\n      if (isVisible) {\n        $pre.hide();\n        $(this).text('显示代码块');\n        $tooltip.hide();\n      } else {\n        $pre.show();\n        $(this).text('隐藏代码块');\n        $tooltip.show();\n      }\n    });\n\n    $pre.before($toggleButton);\n    $toggleButton.after($tooltip);\n  });\n}\n\n/**\n * 给所有消息添加折叠控件\n */\nexport function addCodeToggleButtonsToAllMessages() {\n  if (!extension_settings[extensionName].render.rendering_optimize) {\n    return;\n  }\n\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n\n  $chat.find('.mes .mes_block .mes_text').each(function () {\n    const $mesText = $(this);\n    addToggleButtonsToMessage($mesText);\n  });\n}\n\n/**\n * 根据mesId为消息添加折叠控件\n * @param mesId 消息ID\n */\nfunction addCodeToggleButtons(mesId: string) {\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n  const $mesText = $chat.find(`div[mesid=\"${mesId}\"] .mes_block .mes_text`);\n  addToggleButtonsToMessage($mesText);\n}\n\n/**\n * 根据mesId移除折叠控件\n * @param mesId 消息ID\n */\nfunction removeCodeToggleButtonsByMesId(mesId: string) {\n  $(`div[mesid=\"${mesId}\"] .code-toggle-button`).each(function () {\n    $(this).off('click').remove();\n  });\n}\n\n/**\n * 移除所有折叠控件\n */\nfunction removeAllCodeToggleButtons() {\n  $('.code-toggle-button').each(function () {\n    $(this).off('click').remove();\n  });\n  // 去掉所有pre的display:none\n  $('pre').css('display', 'block');\n}\n\n/**\n * 添加前端卡渲染优化设置\n */\nexport function addRenderingOptimizeSettings() {\n  injectCodeBlockHideStyles();\n  hljs.highlightElement = function (element) {};\n  addCodeToggleButtonsToAllMessages();\n}\n\n/**\n * 移除前端卡渲染优化设置\n */\nexport function removeRenderingOptimizeSettings() {\n  hljs.highlightElement = originalHighlightElement;\n  removeCodeBlockHideStyles();\n  removeAllCodeToggleButtons();\n}\n\n/**\n * 处理重型前端卡渲染优化\n * @param userInput 是否由用户手动触发\n */\nasync function renderingOptimizationChange(userInput: boolean = true) {\n  const isEnabled = Boolean($('#rendering_optimize').prop('checked'));\n  if (userInput) {\n    extension_settings[extensionName].render.rendering_optimize = isEnabled;\n    renderingOptimizeEnabled = isEnabled;\n    saveSettingsDebounced();\n  }\n\n  if (!getSettingValue('activate_setting')) {\n    return;\n  }\n\n  if (isEnabled) {\n    addRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  } else {\n    removeRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  }\n}\n\n/**\n * 初始化iframe控制面板\n */\nexport const initIframePanel = () => {\n  // 处理重型前端卡渲染优化\n  const renderingOptimizeEnabled = getSettingValue('render.rendering_optimize');\n  $('#rendering_optimize')\n    .prop('checked', renderingOptimizeEnabled)\n    .on('click', () => renderingOptimizationChange(true));\n\n  if (renderingOptimizeEnabled) {\n    renderingOptimizationChange(false);\n  }\n\n  // 处理油猴兼容性设置\n  const tampermonkeyEnabled = extension_settings[extensionName].render.tampermonkey_compatibility;\n  $('#tampermonkey_compatibility').prop('checked', tampermonkeyEnabled).on('click', onTampermonkeyCompatibilityChange);\n\n  if (tampermonkeyEnabled) {\n    onTampermonkeyCompatibilityChange();\n  }\n\n  // 处理处理深度设置\n  $('#process_depth')\n    .val(extension_settings[extensionName].render.process_depth || defaultIframeSettings.process_depth)\n    .on('input', onDepthInput);\n\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      updateIframeViewportHeight();\n    }\n  });\n  injectLoadingStyles();\n};\n","import { extensionName } from '@/index';\n\nimport {\n  eventSource,\n  event_types,\n  saveSettingsDebounced,\n  reloadCurrentChat,\n  this_chid,\n  characters,\n} from '@sillytavern/script';\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { power_user } from '@sillytavern/scripts/power-user';\n\n/**\n * 自动为当前角色启用正则表达式规则\n */\nexport async function autoEnableCharacterRegex() {\n  if (this_chid === undefined) {\n    return;\n  }\n\n  if (selected_group) {\n    return;\n  }\n\n  const avatar = characters[this_chid].avatar;\n  if (!extension_settings.character_allowed_regex.includes(avatar)) {\n    extension_settings.character_allowed_regex.push(avatar);\n    reloadCurrentChat();\n  }\n\n  saveSettingsDebounced();\n}\n\n/**\n * 注册自动启用角色正则表达式的事件监听\n */\nexport async function registerAutoEnableCharacterRegex() {\n  eventSource.on(event_types.CHAT_CHANGED, autoEnableCharacterRegex);\n}\n\n/**\n * 取消注册自动启用角色正则表达式的事件监听\n */\nexport async function unregisterAutoEnableCharacterRegex() {\n  eventSource.removeListener(event_types.CHAT_CHANGED, autoEnableCharacterRegex);\n}\n\n/**\n * 处理自动启用角色正则表达式开关的点击事件\n */\nexport async function onAutoEnableCharacterRegexClick() {\n  const isEnabled = Boolean($('#auto_enable_character_regex').prop('checked'));\n  extension_settings[extensionName].auto_enable_character_regex = isEnabled;\n  if (isEnabled) {\n    registerAutoEnableCharacterRegex();\n  } else {\n    saveSettingsDebounced();\n  }\n}\n\n/**\n * 自动禁用不兼容的选项\n */\nexport async function autoDisableIncompatibleOptions() {\n  if (power_user.auto_fix_generated_markdown || power_user.trim_sentences || power_user.forbid_external_media) {\n    power_user.auto_fix_generated_markdown = false;\n    $('#auto_fix_generated_markdown').prop('checked', power_user.auto_fix_generated_markdown);\n\n    power_user.trim_sentences = false;\n    $('#trim_sentences_checkbox').prop('checked', power_user.trim_sentences);\n\n    power_user.forbid_external_media = false;\n    $('#forbid_external_media').prop('checked', power_user.forbid_external_media);\n  }\n  saveSettingsDebounced();\n}\n\n/**\n * 注册自动禁用不兼容选项的事件监听\n */\nexport async function registerAutoDisableIncompatibleOptions() {\n  eventSource.on(event_types.CHAT_CHANGED, autoDisableIncompatibleOptions);\n}\n\n/**\n * 取消注册自动禁用不兼容选项的事件监听\n */\nexport async function unregisterAutoDisableIncompatibleOptions() {\n  eventSource.removeListener(event_types.CHAT_CHANGED, autoDisableIncompatibleOptions);\n}\n\n/**\n * 处理自动禁用不兼容选项开关的点击事件\n */\nexport async function onAutoDisableIncompatibleOptions() {\n  const isEnabled = Boolean($('#auto_disable_incompatible_options').prop('checked'));\n  extension_settings[extensionName].auto_disable_incompatible_options = isEnabled;\n  if (isEnabled) {\n    registerAutoDisableIncompatibleOptions();\n  } else {\n    unregisterAutoDisableIncompatibleOptions();\n  }\n  saveSettingsDebounced();\n}\n\nexport async function initAutoSettings() {\n  // 处理自动启用角色正则表达式设置\n  const auto_enable_character_regex = extension_settings[extensionName].auto_enable_character_regex;\n  $('#auto_enable_character_regex')\n    .prop('checked', auto_enable_character_regex)\n    .on('click', onAutoEnableCharacterRegexClick);\n  if (auto_enable_character_regex) {\n    onAutoEnableCharacterRegexClick();\n  }\n  // 处理自动禁用不兼容选项设置\n  const auto_disable_incompatible_options = extension_settings[extensionName].auto_disable_incompatible_options;\n  $('#auto_disable_incompatible_options')\n    .prop('checked', auto_disable_incompatible_options)\n    .on('click', onAutoDisableIncompatibleOptions);\n  if (auto_disable_incompatible_options) {\n    onAutoDisableIncompatibleOptions();\n  }\n}\n","// TODO: 直接 '@/iframe_client/index?raw' 而将这些分文件模块化\nimport _impl from '@/iframe_client/_impl?raw';\nimport _multimap from '@/iframe_client/_multimap?raw';\nimport audio from '@/iframe_client/audio?raw';\nimport character from '@/iframe_client/character?raw';\nimport chat_message from '@/iframe_client/chat_message?raw';\nimport displayed_message from '@/iframe_client/displayed_message?raw';\nimport event from '@/iframe_client/event?raw';\nimport exported from '@/iframe_client/exported?raw';\nimport frontend_version from '@/iframe_client/frontend_version?raw';\nimport generate from '@/iframe_client/generate?raw';\nimport lorebook from '@/iframe_client/lorebook?raw';\nimport lorebook_entry from '@/iframe_client/lorebook_entry?raw';\nimport slash from '@/iframe_client/slash?raw';\nimport tavern_regex from '@/iframe_client/tavern_regex?raw';\nimport util from '@/iframe_client/util?raw';\nimport variables from '@/iframe_client/variables?raw';\n\nexport const iframe_client = [\n  _impl,\n  _multimap,\n  audio,\n  character,\n  chat_message,\n  displayed_message,\n  event,\n  exported,\n  frontend_version,\n  generate,\n  lorebook,\n  lorebook_entry,\n  slash,\n  tavern_regex,\n  util,\n  variables,\n].join('\\n');\n","export interface IframeMessage {\n  request: string;\n  uid: number;\n}\n\nexport function getIframeName<T extends IframeMessage>(event: MessageEvent<T>): string {\n  const window = event.source as Window;\n  return window.frameElement?.id as string;\n}\n\nexport function getLogPrefix<T extends IframeMessage>(event: MessageEvent<T>): string {\n  return `${event.data.request}(${getIframeName(event)}) `;\n}\n\ntype IframeHandlers = {\n  [request: string]: (event: MessageEvent<any>) => Promise<any | void>;\n};\n\nexport const iframe_handlers: IframeHandlers = {};\n\nexport function registerIframeHandler<T extends IframeMessage>(\n  request: string,\n  handler: (event: MessageEvent<T>) => Promise<any | void>,\n) {\n  iframe_handlers[request] = handler;\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { audioEnable, audioImport, audioMode, audioPlay, audioSelect } from '@/slash_command/audio';\n\ninterface IframeAudioMode extends IframeMessage {\n  request: '[Audio][audioMode]';\n  type: string;\n  mode: string;\n}\n\ninterface IframeAudioEnable extends IframeMessage {\n  request: '[Audio][audioEnable]';\n  type: string;\n  state?: string;\n}\n\ninterface IframeAudioPlay extends IframeMessage {\n  request: '[Audio][audioPlay]';\n  type: string;\n  play?: string;\n}\n\ninterface IframeAudioImport extends IframeMessage {\n  request: '[Audio][audioImport]';\n  type: string;\n  url: string;\n  play?: string;\n}\n\ninterface IframeAudioSelect extends IframeMessage {\n  request: '[Audio][audioSelect]';\n  type: string;\n  url: string;\n}\n\nexport function registerIframeAudioHandler() {\n  registerIframeHandler('[Audio][audioMode]', async (event: MessageEvent<IframeAudioMode>): Promise<void> => {\n    const type = event.data.type;\n    const mode = event.data.mode;\n    await audioMode({ type, mode });\n    console.info(`${getLogPrefix(event)} 切换音频模式: ${type}-${mode}`);\n  });\n\n  registerIframeHandler('[Audio][audioEnable]', async (event: MessageEvent<IframeAudioEnable>): Promise<void> => {\n    const type = event.data.type;\n    const state = event.data.state;\n    await audioEnable({ type, state });\n    console.info(`${getLogPrefix(event)} 切换音频状态: ${type}-${state}`);\n  });\n\n  registerIframeHandler('[Audio][audioPlay]', async (event: MessageEvent<IframeAudioPlay>): Promise<void> => {\n    const type = event.data.type;\n    const play = event.data.play;\n    await audioPlay({ type, play });\n    console.info(`${getLogPrefix(event)} 切换音频播放状态: ${type}-${play}`);\n  });\n\n  registerIframeHandler('[Audio][audioImport]', async (event: MessageEvent<IframeAudioImport>): Promise<void> => {\n    const type = event.data.type;\n    const url = event.data.url;\n    const play = event.data.play;\n    await audioImport({ type, play }, url);\n    console.info(`${getLogPrefix(event)} 导入音频: ${type}-${url}-${play}`);\n  });\n\n  registerIframeHandler('[Audio][audioSelect]', async (event: MessageEvent<IframeAudioSelect>): Promise<void> => {\n    const type = event.data.type;\n    const url = event.data.url;\n    await audioSelect({ type }, url);\n    console.info(`${getLogPrefix(event)} 选择音频: ${type}-${url}`);\n  });\n}\n","import { charsPath } from '@/component/message_iframe';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { characters, getPastCharacterChats, getRequestHeaders, getThumbnailUrl, this_chid } from '@sillytavern/script';\n\ntype v1CharData = (typeof characters)[number];\n\ninterface IframeGetCharData extends IframeMessage {\n  request: '[Character][getCharData]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetAvatarPath extends IframeMessage {\n  request: '[Character][getCharAvatarPath]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetChatHistoryBrief extends IframeMessage {\n  request: '[Character][getChatHistoryBrief]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetChatHistoryDetail extends IframeMessage {\n  request: '[Character][getChatHistoryDetail]';\n  data: any[];\n  isGroupChat?: boolean;\n}\n\n/**\n * 角色卡管理类\n * 用于封装角色卡数据操作和提供便捷的访问方法\n */\nexport class Character {\n  /**\n   * v1CharData类型的角色卡数据\n   * @see char-data.js 中的 v1CharData 类型定义\n   */\n  private charData: v1CharData;\n\n  constructor(characterData: v1CharData) {\n    this.charData = characterData;\n  }\n\n  /**\n   * 根据名称或头像id查找角色卡数据\n   * @param options 查找选项\n   * @returns 找到的角色卡数据，找不到为null\n   */\n  static find({ name, allowAvatar = true }: { name?: string; allowAvatar?: boolean } = {}): any {\n    if (name === undefined) {\n      const currentChar = characters[this_chid];\n      if (currentChar) {\n        name = currentChar.avatar;\n        // 确保allowAvatar为true，以便可以通过avatar准确查找角色\n        allowAvatar = true;\n      }\n    }\n\n    const matches = (char: { avatar: string; name: string }) =>\n      !name || char.name === name || (allowAvatar && char.avatar === name);\n\n    let filteredCharacters = characters;\n\n    // 如果有确定的角色头像id提供，则返回该角色\n    if (allowAvatar && name) {\n      const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n      if (characterByAvatar) {\n        return characterByAvatar;\n      }\n    }\n\n    // 查找所有匹配的角色\n    const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n    if (matchingCharacters.length > 1) {\n      console.warn(`[Character] [findCharacter] 找到多个符合条件的角色，返回导入时间最早的角色: ${name}`);\n    }\n\n    if (matchingCharacters.length === 0) {\n      throw new Error(`[Character] [findCharacter] 提供的名称或头像ID为: ${name}，未找到符合条件的角色`);\n    }\n\n    return matchingCharacters[0];\n  }\n\n  /**\n   * 根据名称查找角色卡数据在characters数组中的索引（类似this_chid）\n   * @param name 角色名称\n   * @returns 角色卡数据在characters数组中的索引，未找到返回-1\n   */\n\n  static findCharacterIndex(name: string) {\n    const matchTypes = [\n      (a: string, b: string) => a === b,\n      (a: string, b: string) => a.startsWith(b),\n      (a: string, b: string) => a.includes(b),\n    ];\n\n    const exactAvatarMatch = characters.findIndex(x => x.avatar === name);\n\n    if (exactAvatarMatch !== -1) {\n      return exactAvatarMatch;\n    }\n\n    for (const matchType of matchTypes) {\n      const index = characters.findIndex(x => matchType(x.name.toLowerCase(), name.toLowerCase()));\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * 从服务器获取每个聊天文件的聊天内容，并将其编译成字典。\n   * 该函数遍历提供的聊天元数据列表，并请求每个聊天的实际聊天内容，\n   *\n   * @param {Array} data - 包含每个聊天的元数据的数组，例如文件名。\n   * @param {boolean} isGroupChat - 一个标志，指示聊天是否为群组聊天。\n   * @returns {Promise<Object>} chat_dict - 一个字典，其中每个键是文件名，值是\n   * 从服务器获取的相应聊天内容。\n   */\n  static async getChatsFromFiles(data: any[], isGroupChat: boolean) {\n    let chat_dict: Record<string, any> = {};\n    let chat_list = Object.values(data)\n      .sort((a, b) => a['file_name'].localeCompare(b['file_name']))\n      .reverse();\n\n    let chat_promise = chat_list.map(({ file_name }) => {\n      return new Promise<void>(async (res, _rej) => {\n        try {\n          // 从文件名中提取角色名称（破折号前的部分）\n          const ch_name = isGroupChat ? '' : file_name.split(' - ')[0];\n\n          // 使用Character.find方法查找角色，获取头像\n          let characterData = null;\n          let avatar_url = '';\n\n          if (!isGroupChat && ch_name) {\n            characterData = Character.find({ name: ch_name });\n            if (characterData) {\n              avatar_url = characterData.avatar;\n            }\n          }\n\n          const endpoint = isGroupChat ? '/api/chats/group/get' : '/api/chats/get';\n          const requestBody = isGroupChat\n            ? JSON.stringify({ id: file_name })\n            : JSON.stringify({\n                ch_name: ch_name,\n                file_name: file_name.replace('.jsonl', ''),\n                avatar_url: avatar_url,\n              });\n\n          const chatResponse = await fetch(endpoint, {\n            method: 'POST',\n            headers: getRequestHeaders(),\n            body: requestBody,\n            cache: 'no-cache',\n          });\n\n          if (!chatResponse.ok) {\n            return res();\n          }\n\n          const currentChat = await chatResponse.json();\n          if (!isGroupChat) {\n            // remove the first message, which is metadata, only for individual chats\n            currentChat.shift();\n          }\n          chat_dict[file_name] = currentChat;\n        } catch (error) {\n          console.error(error);\n        }\n\n        return res();\n      });\n    });\n\n    await Promise.all(chat_promise);\n\n    return chat_dict;\n  }\n\n  /**\n   * 获取角色管理内的数据\n   * @returns 完整的角色管理内的数据对象\n   */\n  getCardData(): v1CharData {\n    return this.charData;\n  }\n\n  /**\n   * 获取角色头像ID\n   * @returns 头像ID/文件名\n   */\n  getAvatarId(): string {\n    return this.charData.avatar || '';\n  }\n\n  /**\n   * 获取正则脚本\n   * @returns 正则脚本数组\n   */\n  getRegexScripts(): Array<{\n    id: string;\n    scriptName: string;\n    findRegex: string;\n    replaceString: string;\n    trimStrings: string[];\n    placement: number[];\n    disabled: boolean;\n    markdownOnly: boolean;\n    promptOnly: boolean;\n    runOnEdit: boolean;\n    substituteRegex: number | boolean;\n    minDepth: number;\n    maxDepth: number;\n  }> {\n    return this.charData.data?.extensions?.regex_scripts || [];\n  }\n\n  /**\n   * 获取角色书\n   * @returns 角色书数据对象或null\n   */\n  getCharacterBook(): {\n    name: string;\n    entries: Array<{\n      keys: string[];\n      secondary_keys?: string[];\n      comment: string;\n      content: string;\n      constant: boolean;\n      selective: boolean;\n      insertion_order: number;\n      enabled: boolean;\n      position: string;\n      extensions: any;\n      id: number;\n    }>;\n  } | null {\n    return this.charData.data?.character_book || null;\n  }\n\n  /**\n   * 获取角色世界名称\n   * @returns 世界名称\n   */\n  getWorldName(): string {\n    return this.charData.data?.extensions?.world || '';\n  }\n}\n\nexport function registerIframeCharacterHandler() {\n  function withCharacter<T>(\n    callback: (character: Character) => T,\n    defaultValue: T | null = null,\n    name?: string,\n    allowAvatar: boolean = true,\n  ): T | null {\n    const characterData = Character.find({ name, allowAvatar });\n    const character = characterData ? new Character(characterData) : null;\n    return character ? callback(character) : defaultValue;\n  }\n  // 通用包装函数，用于处理角色相关的iframe消息\n  function createCharacterHandler<T, E extends IframeMessage & { name?: string; allowAvatar?: boolean }>(\n    eventType: string,\n    handler: (character: Character, event: MessageEvent<E>) => T,\n    defaultValue: T | null = null,\n    logMessage?: (event: MessageEvent<E>, result: T | null, displayName?: string) => string,\n  ) {\n    registerIframeHandler(eventType, async (event: MessageEvent<E>): Promise<T | null> => {\n      const { name, allowAvatar = true } = event.data;\n\n      let displayName = name;\n      if (displayName === undefined) {\n        const currentChar = characters[this_chid];\n        if (currentChar) {\n          displayName = currentChar.name;\n        }\n      }\n\n      const result = withCharacter(character => handler(character, event), defaultValue, name, allowAvatar);\n\n      // 日志打印\n      if (logMessage) {\n        const logText = logMessage(event, null, displayName);\n        if (result instanceof Promise) {\n          result\n            .then(resolvedResult => {\n              console.info(`${getLogPrefix(event)}${logText}`, resolvedResult);\n            })\n            .catch(error => {\n              throw Error(`${getLogPrefix(event)}${logText} - 发生错误: ${error}`);\n            });\n        } else {\n          console.info(`${getLogPrefix(event)}${logText}`, result);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  createCharacterHandler<v1CharData, IframeGetCharData>(\n    '[Character][getCharData]',\n    character => character.getCardData(),\n    null,\n    (_event, _result, displayName) => `获取角色卡数据, 角色: ${displayName || '未知'}`,\n  );\n\n  createCharacterHandler<string, IframeGetAvatarPath>(\n    '[Character][getCharAvatarPath]',\n    character => {\n      const thumbnailPath = getThumbnailUrl('avatar', character.getAvatarId());\n      const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n      return charsPath + targetAvatarImg;\n    },\n    null,\n    (_event, _result, displayName) => `获取角色头像路径, 角色: ${displayName || '未知'}`,\n  );\n\n  createCharacterHandler<Promise<any[]>, IframeGetChatHistoryBrief>(\n    '[Character][getChatHistoryBrief]',\n    async character => {\n      const index = Character.findCharacterIndex(character.getAvatarId());\n      const chats = await getPastCharacterChats(index);\n      return chats;\n    },\n    null,\n    (_event, _result, displayName) => {\n      return `获取角色聊天历史摘要, 角色: ${displayName || '未知'}`;\n    },\n  );\n\n  registerIframeHandler(\n    '[Character][getChatHistoryDetail]',\n    async (event: MessageEvent<IframeGetChatHistoryDetail>) => {\n      const data = event.data.data;\n      const isGroupChat = event.data.isGroupChat || false;\n\n      try {\n        const result = await Character.getChatsFromFiles(data, isGroupChat);\n        console.info(`${getLogPrefix(event)}获取聊天文件详情`, result);\n        return result;\n      } catch (error) {\n        throw Error(`${getLogPrefix(event)}获取聊天文件详情 - 发生错误: ${error}`);\n      }\n    },\n  );\n}\n","import { handlePartialRender } from '@/component/message_iframe';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  chat,\n  eventSource,\n  messageFormatting,\n  reloadCurrentChat,\n  saveChatConditional,\n  substituteParamsExtended,\n  system_message_types,\n} from '@sillytavern/script';\nimport { stringToRange } from '@sillytavern/scripts/utils';\n\ninterface IframeGetChatMessages extends IframeMessage {\n  request: '[ChatMessage][getChatMessages]';\n  range: string;\n  option: Required<GetChatMessagesOption>;\n}\n\ninterface IframeSetChatMessage extends IframeMessage {\n  request: '[ChatMessage][setChatMessage]';\n  field_values: ChatMessageToSet;\n  message_id: number;\n  option: Required<SetChatMessageOption>;\n}\n\nexport function registerIframeChatMessageHandler() {\n  registerIframeHandler(\n    '[ChatMessage][getChatMessages]',\n    async (event: MessageEvent<IframeGetChatMessages>): Promise<ChatMessage[]> => {\n      const range_demacroed = substituteParamsExtended(event.data.range);\n      const range = stringToRange(range_demacroed, 0, chat.length - 1);\n      const option = event.data.option;\n      if (!range) {\n        throw Error(`提供的消息范围 range 无效: ${range_demacroed}`);\n      }\n      if (!['all', 'system', 'assistant', 'user'].includes(option.role)) {\n        throw Error(`提供的 role 无效, 请提供 'all', 'system', 'assistant' 或 'user', 你提供的是: ${option.role}`);\n      }\n      if (!['all', 'hidden', 'unhidden'].includes(option.hide_state)) {\n        throw Error(`提供的 hide_state 无效, 请提供 'all', 'hidden' 或 'unhidden', 你提供的是: ${option.hide_state}`);\n      }\n\n      const { start, end } = range;\n\n      const getRole = (chat_message: any) => {\n        const is_narrator = chat_message.extra?.type === system_message_types.NARRATOR;\n        if (is_narrator) {\n          if (chat_message.is_user) {\n            return 'unknown';\n          }\n          return 'system';\n        }\n        if (chat_message.is_user) {\n          return 'user';\n        }\n        return 'assistant';\n      };\n\n      const process_message = async (message_id: number): Promise<ChatMessage | null> => {\n        const message = chat[message_id];\n        if (!message) {\n          console.warn(`${getLogPrefix(event)}没找到第 ${message_id} 楼的消息`);\n          return null;\n        }\n\n        const role = getRole(message);\n        if (option.role !== 'all' && role !== option.role) {\n          console.debug(`${getLogPrefix(event)}筛去了第 ${message_id} 楼的消息因为它的身份不是 ${option.role}`);\n          return null;\n        }\n\n        if (option.hide_state !== 'all' && (option.hide_state === 'hidden') !== message.is_system) {\n          console.debug(\n            `${getLogPrefix(event)}筛去了第 ${message_id} 楼的消息因为它${\n              option.hide_state === 'hidden' ? `` : `没`\n            } 被隐藏`,\n          );\n          return null;\n        }\n\n        const swipe_id = message?.swipe_id ?? 0;\n        const swipes = message?.swipes ?? [message.mes];\n        const swipes_data = message?.variables ?? [];\n        const data = swipes_data[swipe_id] ?? {};\n\n        return {\n          message_id: message_id,\n          name: message.name,\n          role: role as 'system' | 'assistant' | 'user',\n          is_hidden: message.is_system,\n          message: message.mes,\n          data: data,\n\n          swipe_id: swipe_id,\n          swipes: swipes,\n          swipes_data: swipes_data,\n\n          is_user: message.is_user,\n          is_system_or_hidden: message.is_system,\n        };\n      };\n\n      const promises: Promise<ChatMessage | null>[] = [];\n      for (let i: number = range.start; i <= range.end; ++i) {\n        promises.push(process_message(i));\n      }\n\n      const chat_messages: ChatMessage[] = (await Promise.all(promises)).filter(chat_message => chat_message !== null);\n\n      console.info(\n        `${getLogPrefix(event)}获取${\n          start == end ? `第 ${start} ` : ` ${start}-${end} `\n        }楼的消息, 选项: ${JSON.stringify(option)} `,\n      );\n      return chat_messages;\n    },\n  );\n\n  registerIframeHandler(\n    '[ChatMessage][setChatMessage]',\n    async (event: MessageEvent<IframeSetChatMessage>): Promise<void> => {\n      const field_values = event.data.field_values;\n      const message_id = event.data.message_id;\n      const option = event.data.option;\n      if (typeof option.swipe_id !== 'number' && option.swipe_id !== 'current') {\n        throw Error(`提供的 swipe_id 无效, 请提供 'current' 或序号, 你提供的是: ${option.swipe_id} `);\n      }\n      if (!['none', 'display_current', 'display_and_render_current', 'all'].includes(option.refresh)) {\n        throw Error(\n          `提供的 refresh 无效, 请提供 'none', 'display_current', 'display_and_render_current' 或 'all', 你提供的是: ${option.refresh} `,\n        );\n      }\n\n      const chat_message = chat[message_id];\n      if (!chat_message) {\n        console.warn(`${getLogPrefix(event)}未找到第 ${message_id} 楼的消息`);\n        return;\n      }\n\n      const add_swipes_if_required = (): boolean => {\n        if (option.swipe_id === 'current') {\n          return false;\n        }\n\n        // swipe_id 对应的消息页存在\n        if (option.swipe_id == 0 || (chat_message.swipes && option.swipe_id < chat_message.swipes.length)) {\n          return true;\n        }\n\n        if (!chat_message.swipes) {\n          chat_message.swipe_id = 0;\n          chat_message.swipes = [chat_message.mes];\n          chat_message.swipe_info = [{}];\n        }\n        for (let i = chat_message.swipes.length; i <= option.swipe_id; ++i) {\n          chat_message.swipes.push('');\n          chat_message.swipe_info.push({});\n        }\n        return true;\n      };\n\n      const swipe_id_previous_index: number = chat_message.swipe_id ?? 0;\n      const swipe_id_to_set_index: number = option.swipe_id == 'current' ? swipe_id_previous_index : option.swipe_id;\n      const swipe_id_to_use_index: number = option.refresh != 'none' ? swipe_id_to_set_index : swipe_id_previous_index;\n      const message: string =\n        field_values.message ??\n        (chat_message.swipes ? chat_message.swipes[swipe_id_to_set_index] : undefined) ??\n        chat_message.mes;\n\n      const update_chat_message = async () => {\n        const message_demacroed = substituteParamsExtended(message);\n\n        if (field_values.data) {\n          if (!chat_message.variables) {\n            chat_message.variables = [];\n          }\n          await eventSource.emit(\n            'variables_updated',\n            'message',\n            chat_message.variables[swipe_id_to_set_index] ?? {},\n            field_values.data,\n            {\n              message_id: message_id,\n              swipe_id: swipe_id_to_set_index,\n            },\n          );\n          chat_message.variables[swipe_id_to_set_index] = field_values.data;\n        }\n\n        if (chat_message.swipes) {\n          chat_message.swipes[swipe_id_to_set_index] = message_demacroed;\n          chat_message.swipe_id = swipe_id_to_use_index;\n        }\n\n        if (swipe_id_to_use_index === swipe_id_to_set_index) {\n          chat_message.mes = message_demacroed;\n        }\n      };\n\n      const update_partial_html = (should_update_swipe: boolean) => {\n        const mes_html = $(`div.mes[mesid = \"${message_id}\"]`);\n        if (!mes_html) {\n          return;\n        }\n\n        if (should_update_swipe) {\n          // FIXME: 只有一条消息时, swipes-counter 不会正常显示; 此外还要考虑 swipes-counter 的 \"Swipe # for All Messages\" 选项\n          mes_html\n            .find('.swipes-counter')\n            .text(`${swipe_id_to_use_index + 1}\\u200b/\\u200b${chat_message.swipes.length}`);\n        }\n        if (option.refresh != 'none') {\n          mes_html\n            .find('.mes_text')\n            .empty()\n            .append(\n              messageFormatting(message, chat_message.name, chat_message.is_system, chat_message.is_user, message_id),\n            );\n          if (option.refresh == 'display_and_render_current') {\n            handlePartialRender(`${message_id}`);\n          }\n        }\n      };\n\n      const should_update_swipe: boolean = add_swipes_if_required();\n      await update_chat_message();\n      if (option.refresh == 'all') {\n        await reloadCurrentChat();\n      } else {\n        update_partial_html(should_update_swipe);\n        // QUESTION: saveChatDebounced 还是 await saveChatConditional?\n        await saveChatConditional();\n      }\n\n      console.info(\n        `${getLogPrefix(event)}设置第 ${message_id} 楼消息, 选项: ${JSON.stringify(\n          option,\n        )}, 设置前使用的消息页: ${swipe_id_previous_index}, 设置的消息页: ${swipe_id_to_set_index}, 现在使用的消息页: ${swipe_id_to_use_index} `,\n      );\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { chat, messageFormatting } from '@sillytavern/script';\nimport { getLastMessageId } from '@sillytavern/scripts/macros';\n\ninterface IframeFormatAsDisplayedMessage extends IframeMessage {\n  request: '[DisplayedMessage][formatAsDisplayedMessage]';\n  text: string;\n  option: Required<FormatAsDisplayedMessageOption>;\n}\n\nexport function registerIframeDisplayedMessageHandler() {\n  registerIframeHandler(\n    '[DisplayedMessage][formatAsDisplayedMessage]',\n    async (event: MessageEvent<IframeFormatAsDisplayedMessage>): Promise<string> => {\n      const text = event.data.text;\n      const option = event.data.option;\n      if (typeof option.message_id !== 'number' && !['last', 'last_user', 'last_char'].includes(option.message_id)) {\n        throw Error(\n          `提供的 message_id 无效, 请提供 'last', 'last_user', 'last_char' 或楼层消息号, 你提供的是: ${option.message_id}`,\n        );\n      }\n      const last_message_id = getLastMessageId();\n      if (last_message_id === null) {\n        throw Error(`未找到任何消息楼层, 你提供的是: ${option.message_id}`);\n      }\n      switch (option.message_id) {\n        case 'last':\n          option.message_id = last_message_id;\n          break;\n        case 'last_user':\n          const last_user_message_id = getLastMessageId({ filter: (m: any) => m.is_user && !m.is_system }) as number;\n          if (last_user_message_id === null) {\n            throw Error(`未找到任何 user 消息楼层, 你提供的是: ${option.message_id}`);\n          }\n          option.message_id = last_user_message_id;\n          break;\n        case 'last_char':\n          const last_char_message_id = getLastMessageId({ filter: (m: any) => !m.is_user && !m.is_system }) as number;\n          if (last_char_message_id === null) {\n            throw Error(`未找到任何 char 消息楼层, 你提供的是: ${option.message_id}`);\n          }\n          option.message_id = last_char_message_id;\n          break;\n      }\n      if (option.message_id < 0 || option.message_id > last_message_id) {\n        throw Error(`提供的 message_id 不在 [0, ${last_message_id}] 内, 你提供的是: ${option.message_id} `);\n      }\n\n      const chat_message = chat[option.message_id];\n      const result = messageFormatting(\n        text,\n        chat_message.name,\n        chat_message.is_system,\n        chat_message.is_user,\n        option.message_id,\n      );\n\n      console.info(\n        `${getLogPrefix(event)}将字符串处理为酒馆用于显示的 html 格式, 字符串: '${text}', 选项: '${JSON.stringify(\n          option,\n        )}', 结果: '${result}'`,\n      );\n      return result;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { getRequestHeaders } from '@sillytavern/script';\nimport { t } from '@sillytavern/scripts/i18n';\n\ninterface IframeUpdateFrontendVersion extends IframeMessage {\n  request: '[FrontendVersion][updateFrontendVersion]';\n  text: string;\n}\n\nexport function registerIframeFrontendVersionHandler() {\n  registerIframeHandler(\n    '[FrontendVersion][updateFrontendVersion]',\n    async (event: MessageEvent<IframeUpdateFrontendVersion>): Promise<boolean> => {\n      const extension_name = 'JS-Slash-Runner';\n\n      const response = await fetch('/api/extensions/update', {\n        method: 'POST',\n        headers: getRequestHeaders(),\n        body: JSON.stringify({ extensionName: extension_name }),\n      });\n\n      if (!response.ok) {\n        const text = await response.text();\n        // @ts-expect-error\n        toastr.error(text || response.statusText, t`更新前端助手失败`, { timeOut: 5000 });\n        console.error(`${getLogPrefix(event)}更新前端助手失败: ${text}`);\n        return false;\n      }\n\n      const data = await response.json();\n      if (data.isUpToDate) {\n        console.info(`${getLogPrefix(event)}前端助手已是最新版本, 无需更新`);\n      } else {\n        // @ts-expect-error\n        toastr.success(t`成功更新前端助手为 ${data.shortCommitHash}`, t`请刷新页面`);\n        console.info(`${getLogPrefix(event)}成功更新前端助手为  ${data.shortCommitHash}, 请刷新页面`);\n      }\n      return true;\n    },\n  );\n}\n","import { IframeMessage, getIframeName, getLogPrefix, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  MAX_INJECTION_DEPTH,\n  activateSendButtons,\n  baseChatReplace,\n  characters,\n  chat,\n  chat_metadata,\n  cleanUpMessage,\n  countOccurrences,\n  deactivateSendButtons,\n  eventSource,\n  extension_prompt_roles,\n  extension_prompt_types,\n  getBiasStrings,\n  getCharacterCardFields,\n  getExtensionPromptRoleByName,\n  getMaxContextSize,\n  isOdd,\n  name1,\n  name2,\n  saveChatConditional,\n  saveSettingsDebounced,\n  setExtensionPrompt,\n  setGenerationProgress,\n  showSwipeButtons,\n  stopGeneration,\n  substituteParams,\n  this_chid,\n} from '@sillytavern/script';\nimport { NOTE_MODULE_NAME, metadata_keys, shouldWIAddPrompt } from '@sillytavern/scripts/authors-note';\nimport { extension_settings, getContext } from '@sillytavern/scripts/extensions';\nimport { getRegexedString, regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\nimport {\n  ChatCompletion,\n  Message,\n  MessageCollection,\n  isImageInliningSupported,\n  oai_settings,\n  prepareOpenAIMessages,\n  sendOpenAIRequest,\n  setOpenAIMessageExamples,\n  setOpenAIMessages,\n  setupChatCompletionPromptManager,\n} from '@sillytavern/scripts/openai';\nimport {\n  flushEphemeralStoppingStrings,\n  persona_description_positions,\n  power_user,\n} from '@sillytavern/scripts/power-user';\nimport { Prompt, PromptCollection } from '@sillytavern/scripts/PromptManager';\nimport { Stopwatch, getBase64Async } from '@sillytavern/scripts/utils';\nimport { getWorldInfoPrompt, wi_anchor_position, world_info_include_names } from '@sillytavern/scripts/world-info';\n\n// 在文件顶部添加 abortController 声明\nlet abortController = new AbortController();\n\ninterface IframeGenerate extends IframeMessage {\n  request: '[Generate][generate]';\n  config: GenerateConfig;\n}\n\ninterface IframeGenerateRaw extends IframeMessage {\n  request: '[Generate][generateRaw]';\n  config: GenerateRawConfig;\n}\n\nfunction fromOverrides(overrides: Overrides): detail.OverrideConfig {\n  return {\n    world_info_before: overrides.world_info_before,\n    persona_description: overrides.persona_description,\n    char_description: overrides.char_description,\n    char_personality: overrides.char_personality,\n    scenario: overrides.scenario,\n    world_info_after: overrides.world_info_after,\n    dialogue_examples: overrides.dialogue_examples,\n\n    with_depth_entries: overrides.chat_history?.with_depth_entries,\n    author_note: overrides.chat_history?.author_note,\n    chat_history: overrides.chat_history?.prompts,\n  };\n}\n\nfunction fromInjectionPrompt(inject: InjectionPrompt): detail.InjectionPrompt {\n  const position_map = {\n    before_prompt: 'BEFORE_PROMPT',\n    in_chat: 'IN_CHAT',\n    after_prompt: 'IN_PROMPT',\n    none: 'NONE',\n  } as const;\n  return {\n    role: inject.role,\n    content: inject.content,\n    position: position_map[inject.position],\n    depth: inject.depth,\n    scan: inject.should_scan,\n  };\n}\n\nfunction fromGenerateConfig(config: GenerateConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: true,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    overrides: config.overrides !== undefined ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects !== undefined ? config.injects.map(fromInjectionPrompt) : undefined,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n  };\n}\n\nfunction fromGenerateRawConfig(config: GenerateRawConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: false,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n    overrides: config.overrides ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects ? config.injects.map(fromInjectionPrompt) : undefined,\n    order: config.ordered_prompts,\n  };\n}\n\nnamespace detail {\n  export interface RolePrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  export interface InjectionPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n    position?: 'IN_PROMPT' | 'IN_CHAT' | 'BEFORE_PROMPT' | 'NONE';\n    depth?: number;\n    scan?: boolean;\n  }\n\n  export interface CustomPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  // 覆盖配置类型\n  export interface OverrideConfig {\n    world_info_before?: string; // 世界书（角色定义之前的部分）\n    persona_description?: string; // 用户描述\n    char_description?: string; // 角色描述\n    char_personality?: string; // 角色高级定义-性格\n    scenario?: string; // 场景\n    world_info_after?: string; // 世界书（角色定义之后的部分）\n    dialogue_examples?: string; // 角色高级定义-对话示例\n\n    with_depth_entries?: boolean; // 世界书深度\n    author_note?: string; // 作者注释\n    chat_history?: RolePrompt[]; // 聊天历史\n  }\n\n  // 内置提示词条目类型\n  export type BuiltinPromptEntry =\n    | 'world_info_before' // 世界书(角色定义前)\n    | 'persona_description' // 用户描述\n    | 'char_description' // 角色描述\n    | 'char_personality' // 角色性格\n    | 'scenario' // 场景\n    | 'world_info_after' // 世界书(角色定义后)\n    | 'dialogue_examples' // 对话示例\n    | 'chat_history' // 聊天历史\n    | 'user_input'; // 用户输入\n\n  // 生成参数类型\n  export interface GenerateParams {\n    user_input?: string;\n    use_preset?: boolean;\n    image?: File | string;\n    stream?: boolean;\n    overrides?: OverrideConfig;\n    max_chat_history?: number;\n    inject?: InjectionPrompt[];\n    order?: Array<BuiltinPromptEntry | CustomPrompt>;\n  }\n}\n\nconst type = 'quiet';\nconst dryRun = false;\n\nconst character_names_behavior = {\n  NONE: -1,\n  DEFAULT: 0,\n  COMPLETION: 1,\n  CONTENT: 2,\n};\n\nconst roleTypes: Record<\n  'system' | 'user' | 'assistant',\n  (typeof extension_prompt_roles)[keyof typeof extension_prompt_roles]\n> = {\n  system: extension_prompt_roles.SYSTEM,\n  user: extension_prompt_roles.USER,\n  assistant: extension_prompt_roles.ASSISTANT,\n};\nconst default_order: detail.BuiltinPromptEntry[] = [\n  'world_info_before',\n  'persona_description',\n  'char_description',\n  'char_personality',\n  'scenario',\n  'world_info_after',\n  'dialogue_examples',\n  'chat_history',\n  'user_input',\n];\n\nclass StreamingProcessor {\n  public generator: () => AsyncGenerator<{ text: string }, void, void>;\n  public stoppingStrings?: string[];\n  public result: string;\n  public isStopped: boolean;\n  public isFinished: boolean;\n  public abortController: AbortController;\n  private messageBuffer: string;\n\n  constructor() {\n    this.result = '';\n    this.messageBuffer = '';\n    this.isStopped = false;\n    this.isFinished = false;\n    this.generator = this.nullStreamingGeneration;\n    this.abortController = new AbortController();\n  }\n\n  onProgressStreaming(text: string, isFinal: boolean) {\n    // 计算增量文本\n    const newText = text.slice(this.messageBuffer.length);\n    this.messageBuffer = text;\n\n    let processedText = cleanUpMessage(newText, false, false, !isFinal, this.stoppingStrings);\n\n    const charsToBalance = ['*', '\"', '```'];\n    for (const char of charsToBalance) {\n      if (!isFinal && isOdd(countOccurrences(processedText, char))) {\n        const separator = char.length > 1 ? '\\n' : '';\n        processedText = processedText.trimEnd() + separator + char;\n      }\n    }\n\n    eventSource.emit('js_stream_token_received_fully', text);\n    eventSource.emit('js_stream_token_received_incrementally', processedText);\n\n    if (isFinal) {\n      const fullText = cleanUpMessage(text, false, false, false, this.stoppingStrings);\n      eventSource.emit('js_generation_ended', fullText);\n    }\n  }\n\n  onErrorStreaming() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n    this.isStopped = true;\n    unblockGeneration();\n    saveChatConditional();\n  }\n\n  async *nullStreamingGeneration(): AsyncGenerator<{ text: string }, void, void> {\n    throw Error('Generation function for streaming is not hooked up');\n  }\n\n  async generate() {\n    try {\n      const sw = new Stopwatch(1000 / power_user.streaming_fps);\n      const timestamps = [];\n\n      for await (const { text } of this.generator()) {\n        timestamps.push(Date.now());\n        if (this.isStopped) {\n          this.messageBuffer = '';\n          return;\n        }\n\n        this.result = text;\n        await sw.tick(() => this.onProgressStreaming(text, false));\n      }\n\n      if (!this.isStopped) {\n        this.onProgressStreaming(this.result, true);\n      } else {\n        this.messageBuffer = '';\n      }\n\n      const seconds = (timestamps[timestamps.length - 1] - timestamps[0]) / 1000;\n      console.warn(\n        `Stream stats: ${timestamps.length} tokens, ${seconds.toFixed(2)} seconds, rate: ${Number(\n          timestamps.length / seconds,\n        ).toFixed(2)} TPS`,\n      );\n    } catch (err) {\n      if (!this.isFinished) {\n        this.onErrorStreaming();\n        throw Error(`Generate method error: ${err}`);\n      }\n      this.messageBuffer = '';\n      return this.result;\n    }\n\n    this.isFinished = true;\n    return this.result;\n  }\n}\n\nasync function iframeGenerate({\n  user_input = '',\n  use_preset = true,\n  image = null,\n  overrides = undefined,\n  max_chat_history = undefined,\n  inject = [],\n  order = undefined,\n  stream = false,\n}: detail.GenerateParams = {}): Promise<string> {\n  //初始化\n  abortController = new AbortController();\n\n  // 1. 处理用户输入（正则，宏）\n  const processedUserInput = processUserInput(substituteParams(user_input), oai_settings) || '';\n\n  // 2. 准备过滤后的基础数据\n  const baseData = await prepareAndOverrideData(\n    {\n      overrides,\n      max_chat_history,\n      inject,\n      order,\n    },\n    processedUserInput,\n  );\n\n  // 3. 根据 use_preset 分流处理\n  const generate_data = use_preset\n    ? await handlePresetPath(baseData, processedUserInput, {\n        image,\n        overrides,\n        max_chat_history,\n        inject,\n        order,\n      })\n    : await handleCustomPath(\n        baseData,\n        {\n          image,\n          overrides,\n          max_chat_history,\n          inject,\n          order,\n        },\n        processedUserInput,\n      );\n  console.log('[Generate:发送提示词]', generate_data);\n  // 4. 根据 stream 参数决定生成方式\n  return await generateResponse(generate_data, stream);\n}\n\nasync function prepareAndOverrideData(\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const getOverrideContent = (identifier: string): string | detail.RolePrompt[] | undefined => {\n    if (!config.overrides) return undefined;\n    return config.overrides[identifier as keyof detail.OverrideConfig];\n  };\n\n  // 1. 处理角色卡高级定义角色备注 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config)) {\n    handleCharDepthPrompt();\n  }\n\n  // 2. 设置作者注释 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('author_note', config)) {\n    setAuthorNotePrompt(config);\n  }\n\n  // 3. 处理user角色描述 - 仅在chat_history和persona_description都未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('persona_description', config)) {\n    setPersonaDescriptionExtensionPrompt();\n  }\n\n  // 4. 获取角色卡基础字段\n  const {\n    description: rawDescription,\n    personality: rawPersonality,\n    persona: rawPersona,\n    scenario: rawScenario,\n    mesExamples: rawMesExamples,\n    system,\n    jailbreak,\n  } = getCharacterCardFields();\n\n  // 判断是否被过滤,如果被过滤返回空字符串,否则返回override的值或原始值\n  const description = isPromptFiltered('char_description', config)\n    ? ''\n    : getOverrideContent('char_description') ?? rawDescription;\n\n  const personality = isPromptFiltered('char_personality', config)\n    ? ''\n    : getOverrideContent('char_personality') ?? rawPersonality;\n\n  const persona = isPromptFiltered('persona_description', config)\n    ? ''\n    : getOverrideContent('persona_description') ?? rawPersona;\n\n  const scenario = isPromptFiltered('scenario', config) ? '' : getOverrideContent('scenario') ?? rawScenario;\n\n  const mesExamples = isPromptFiltered('dialogue_examples', config)\n    ? ''\n    : getOverrideContent('dialogue_examples') ?? rawMesExamples;\n\n  let mesExamplesArray = parseMesExamples(mesExamples);\n  let oaiMessageExamples = [];\n  oaiMessageExamples = setOpenAIMessageExamples(mesExamplesArray);\n\n  // 5. 获取偏置字符串\n  const { promptBias } = getBiasStrings(processedUserInput, type);\n\n  // 6. 处理自定义注入的提示词\n  if (config.inject) {\n    await handleInjectedPrompts(config);\n  }\n\n  // 7. 处理聊天记录\n  let oaiMessages = [];\n  if (config.overrides?.chat_history) {\n    oaiMessages = [...config.overrides.chat_history].reverse();\n  } else {\n    oaiMessages = setOpenAIMessages(await processChatHistory(chat));\n    if (config.max_chat_history !== undefined) {\n      oaiMessages = oaiMessages.slice(0, config.max_chat_history);\n    }\n  }\n\n  // 添加临时消息用于激活世界书\n  addTemporaryUserMessage(processedUserInput);\n  // 8. 处理世界信息\n  const worldInfo = await processWorldInfo(oaiMessages, config);\n\n  // 移除临时消息\n  removeTemporaryUserMessage();\n\n  // 9. 处理世界书消息示例\n  mesExamplesArray = !isPromptFiltered('dialogue_examples', config)\n    ? await processMessageExamples(mesExamplesArray, worldInfo.worldInfoExamples)\n    : [];\n\n  return {\n    characterInfo: {\n      description,\n      personality,\n      persona,\n      scenario,\n      system: system,\n      jailbreak: jailbreak,\n    },\n    chatContext: {\n      oaiMessages,\n      oaiMessageExamples,\n      promptBias,\n    },\n    worldInfo,\n  };\n}\n\n//处理角色卡中的深度提示词\nfunction handleCharDepthPrompt() {\n  const depthPromptText =\n    baseChatReplace(characters[this_chid]?.data?.extensions?.depth_prompt?.prompt?.trim(), name1, name2) || '';\n  const depthPromptDepth = characters[this_chid]?.data?.extensions?.depth_prompt?.depth ?? '4';\n  const depthPromptRole = getExtensionPromptRoleByName(\n    characters[this_chid]?.data?.extensions?.depth_prompt?.role ?? 'system',\n  );\n  setExtensionPrompt(\n    'DEPTH_PROMPT',\n    depthPromptText,\n    extension_prompt_types.IN_CHAT,\n    depthPromptDepth,\n    extension_settings.note.allowWIScan,\n    depthPromptRole,\n  );\n}\n//处理作者注释\nfunction setAuthorNotePrompt(config: detail.GenerateParams) {\n  const authorNoteOverride = config?.overrides?.author_note;\n  // @ts-ignore\n  let prompt = authorNoteOverride ?? $('#extension_floating_prompt').val();\n\n  setExtensionPrompt(\n    NOTE_MODULE_NAME,\n    prompt,\n    chat_metadata[metadata_keys.position],\n    chat_metadata[metadata_keys.depth],\n    extension_settings.note.allowWIScan,\n    chat_metadata[metadata_keys.role],\n  );\n}\n//用户角色描述提示词设置为提示词管理器之外的选项的情况\nfunction setPersonaDescriptionExtensionPrompt() {\n  const description = power_user.persona_description;\n  const INJECT_TAG = 'PERSONA_DESCRIPTION';\n  setExtensionPrompt(INJECT_TAG, '', extension_prompt_types.IN_PROMPT, 0);\n\n  if (!description || power_user.persona_description_position === persona_description_positions.NONE) {\n    return;\n  }\n\n  //当user信息在作者注释前后 - 仅在作者注释未被过滤时执行\n  const promptPositions = [persona_description_positions.BOTTOM_AN, persona_description_positions.TOP_AN];\n\n  if (promptPositions.includes(power_user.persona_description_position) && shouldWIAddPrompt) {\n    const originalAN = getContext().extensionPrompts[NOTE_MODULE_NAME].value;\n    const ANWithDesc =\n      power_user.persona_description_position === persona_description_positions.TOP_AN\n        ? `${description}\\n${originalAN}`\n        : `${originalAN}\\n${description}`;\n\n    setExtensionPrompt(\n      NOTE_MODULE_NAME,\n      ANWithDesc,\n      chat_metadata[metadata_keys.position],\n      chat_metadata[metadata_keys.depth],\n      extension_settings.note.allowWIScan,\n      chat_metadata[metadata_keys.role],\n    );\n  }\n\n  // user信息深度注入不依赖于作者注释的状态，直接应用\n  if (power_user.persona_description_position === persona_description_positions.AT_DEPTH) {\n    setExtensionPrompt(\n      INJECT_TAG,\n      description,\n      extension_prompt_types.IN_CHAT,\n      power_user.persona_description_depth,\n      true,\n      power_user.persona_description_role,\n    );\n  }\n}\nasync function handleInjectedPrompts(promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>) {\n  if (!promptConfig || !Array.isArray(promptConfig.inject)) return;\n\n  const injects = promptConfig.inject;\n\n  const positionMap = {\n    IN_PROMPT: extension_prompt_types.IN_PROMPT,\n    IN_CHAT: extension_prompt_types.IN_CHAT,\n    BEFORE_PROMPT: extension_prompt_types.BEFORE_PROMPT,\n    NONE: extension_prompt_types.NONE,\n  };\n\n  for (const inject of injects) {\n    const validatedInject = {\n      role: roleTypes[inject.role] ?? extension_prompt_roles.SYSTEM,\n      content: inject.content || '',\n      depth: Number(inject.depth) || 0,\n      scan: Boolean(inject.scan) || true,\n      position: positionMap[inject.position as keyof typeof positionMap] ?? extension_prompt_types.IN_CHAT,\n    };\n\n    // 设置用户自定义注入提示词\n    setExtensionPrompt(\n      `INJECTION-${inject.depth}-${inject.role}`,\n      validatedInject.content,\n      validatedInject.position,\n      validatedInject.depth,\n      validatedInject.scan,\n      validatedInject.role,\n    );\n  }\n}\n// 处理聊天记录\nasync function processChatHistory(chat: any[]) {\n  let coreChat = chat.filter(x => !x.is_system);\n\n  return await Promise.all(\n    coreChat.map(async (chatItem, index) => {\n      let message = chatItem.mes;\n      let regexType = chatItem.is_user ? regex_placement.USER_INPUT : regex_placement.AI_OUTPUT;\n\n      let regexedMessage = getRegexedString(message, regexType, {\n        isPrompt: true,\n        depth: coreChat.length - index - 1,\n      });\n\n      return {\n        ...chatItem,\n        mes: regexedMessage,\n        index,\n      };\n    }),\n  );\n}\n\n// 处理世界书\nasync function processWorldInfo(\n  oaiMessages: detail.RolePrompt[],\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const chatForWI = oaiMessages\n    .filter(x => x.role !== 'system')\n    .map(x => {\n      const name = x.role === 'user' ? name1 : name2;\n      return world_info_include_names ? `${name}: ${x.content}` : x.content;\n    })\n    .reverse();\n\n  const this_max_context = getMaxContextSize();\n  const { worldInfoString, worldInfoBefore, worldInfoAfter, worldInfoExamples, worldInfoDepth } =\n    await getWorldInfoPrompt(chatForWI, this_max_context, dryRun);\n\n  await clearInjectionPrompts(['customDepthWI']);\n\n  if (!isPromptFiltered('with_depth_entries', config)) {\n    processWorldInfoDepth(worldInfoDepth);\n  }\n\n  // 先检查是否被过滤，如果被过滤直接返回null\n  const finalWorldInfoBefore = isPromptFiltered('world_info_before', config)\n    ? null\n    : config.overrides?.world_info_before !== undefined\n    ? config.overrides.world_info_before\n    : worldInfoBefore;\n\n  const finalWorldInfoAfter = isPromptFiltered('world_info_after', config)\n    ? null\n    : config.overrides?.world_info_after !== undefined\n    ? config.overrides.world_info_after\n    : worldInfoAfter;\n\n  return {\n    worldInfoString,\n    worldInfoBefore: finalWorldInfoBefore,\n    worldInfoAfter: finalWorldInfoAfter,\n    worldInfoExamples,\n    worldInfoDepth: !isPromptFiltered('with_depth_entries', config) ? worldInfoDepth : null,\n  };\n}\n// 处理世界信息深度部分\nfunction processWorldInfoDepth(worldInfoDepth: any[]) {\n  if (Array.isArray(worldInfoDepth)) {\n    worldInfoDepth.forEach(entry => {\n      const joinedEntries = entry.entries.join('\\n');\n      setExtensionPrompt(\n        `customDepthWI-${entry.depth}-${entry.role}`,\n        joinedEntries,\n        extension_prompt_types.IN_CHAT,\n        entry.depth,\n        false,\n        entry.role,\n      );\n    });\n  }\n}\n// 处理世界书中示例前后\nasync function processMessageExamples(mesExamplesArray: string[], worldInfoExamples: any[]): Promise<string[]> {\n  // 处理世界信息中的示例\n  for (const example of worldInfoExamples) {\n    if (!example.content.length) continue;\n\n    const formattedExample = baseChatReplace(example.content, name1, name2);\n    const cleanedExample = parseMesExamples(formattedExample);\n\n    if (example.position === wi_anchor_position.before) {\n      mesExamplesArray.unshift(...cleanedExample);\n    } else {\n      mesExamplesArray.push(...cleanedExample);\n    }\n  }\n\n  return mesExamplesArray;\n}\n//处理对话示例格式\nfunction parseMesExamples(examplesStr: string) {\n  if (examplesStr.length === 0 || examplesStr === '<START>') {\n    return [];\n  }\n\n  if (!examplesStr.startsWith('<START>')) {\n    examplesStr = '<START>\\n' + examplesStr.trim();\n  }\n  const blockHeading = '<START>\\n';\n  const splitExamples = examplesStr\n    .split(/<START>/gi)\n    .slice(1)\n    .map(block => `${blockHeading}${block.trim()}\\n`);\n\n  return splitExamples;\n}\n//用户输入先正则处理\nfunction processUserInput(user_input: string, oai_settings: any) {\n  if (user_input === '') {\n    user_input = oai_settings.send_if_empty.trim();\n  }\n  return getRegexedString(user_input, regex_placement.USER_INPUT, {\n    isPrompt: true,\n    depth: 0,\n  });\n}\n//使用预设\nasync function handlePresetPath(\n  baseData: any,\n  processedUserInput: string,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  // prepareOpenAIMessages会从设置里读取场景因此临时覆盖\n  let originalScenario = null;\n\n  try {\n    const scenarioOverride = config?.overrides?.scenario;\n\n    if (scenarioOverride && characters && characters[this_chid]) {\n      // 保存原始场景\n      originalScenario = characters[this_chid].scenario || null;\n      characters[this_chid].scenario = scenarioOverride;\n    }\n    // 添加user消息(一次性)\n    const userMessageTemp = {\n      role: 'user',\n      content: processedUserInput,\n    };\n\n    if (config.image) {\n      userMessageTemp.image = await convertFileToBase64(config.image);\n    }\n\n    baseData.chatContext.oaiMessages.unshift(userMessageTemp);\n\n    const messageData = {\n      name2,\n      charDescription: baseData.characterInfo.description,\n      charPersonality: baseData.characterInfo.personality,\n      Scenario: baseData.characterInfo.scenario,\n      worldInfoBefore: baseData.worldInfo.worldInfoBefore,\n      worldInfoAfter: baseData.worldInfo.worldInfoAfter,\n      extensionPrompts: getContext().extensionPrompts,\n      bias: baseData.chatContext.promptBias,\n      type: 'normal',\n      quietPrompt: '',\n      quietImage: null,\n      cyclePrompt: '',\n      systemPromptOverride: baseData.characterInfo.system,\n      jailbreakPromptOverride: baseData.characterInfo.jailbreak,\n      personaDescription: baseData.characterInfo.persona,\n      messages: baseData.chatContext.oaiMessages,\n      messageExamples: baseData.chatContext.oaiMessageExamples,\n    };\n\n    const [prompt] = await prepareOpenAIMessages(messageData, dryRun);\n\n    return { prompt };\n  } finally {\n    // 恢复原始场景\n    if (originalScenario !== null && characters && characters[this_chid]) {\n      characters[this_chid].scenario = originalScenario;\n    }\n  }\n}\nasync function convertSystemPromptsToCollection(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const promptCollection = new PromptCollection();\n  const examplesCollection = new MessageCollection('dialogue_examples');\n  // 处理自定义注入\n  const customPrompts = (promptConfig.order || default_order)\n    .map((item, index) => {\n      if (typeof item === 'object' && item.role && item.content) {\n        const identifier = `custom_prompt_${index}`;\n        return {\n          identifier,\n          role: item.role as 'system' | 'user' | 'assistant',\n          content: item.content,\n        };\n      }\n      return null;\n    })\n    .filter((item): item is NonNullable<typeof item> => item !== null);\n\n  for (const prompt of customPrompts) {\n    promptCollection.add(\n      new Prompt({\n        identifier: prompt.identifier,\n        role: prompt.role,\n        content: prompt.content,\n        system_prompt: prompt.role === 'system',\n      }),\n    );\n  }\n\n  // 处理角色信息\n  const characterPrompts = [\n    {\n      id: 'char_description',\n      content: baseData.characterInfo.description,\n      role: 'system',\n    },\n    {\n      id: 'char_personality',\n      content: baseData.characterInfo.personality,\n      role: 'system',\n    },\n    {\n      id: 'scenario',\n      content: baseData.characterInfo.scenario,\n      role: 'system',\n    },\n  ];\n\n  // 添加角色相关提示词\n  characterPrompts.forEach(prompt => {\n    if (prompt.content) {\n      promptCollection.add(\n        new Prompt({\n          identifier: prompt.id,\n          role: prompt.role,\n          content: prompt.content,\n          system_prompt: true,\n        }),\n      );\n    }\n  });\n\n  //当user信息在提示词管理器中时\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.IN_PROMPT\n  ) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'persona_description',\n        role: 'system',\n        content: baseData.characterInfo.persona,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  // 处理世界信息\n  if (baseData.worldInfo.world_info_before) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'world_info_before',\n        role: 'system',\n        content: baseData.worldInfo.world_info_before,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.worldInfo.world_info_after) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'world_info_after',\n        role: 'system',\n        content: baseData.worldInfo.world_info_after,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.chatContext.oaiMessageExamples.length > 0) {\n    // 遍历所有对话示例\n    for (const dialogue of [...baseData.chatContext.oaiMessageExamples]) {\n      const dialogueIndex = baseData.chatContext.oaiMessageExamples.indexOf(dialogue);\n      const chatMessages = [];\n\n      for (let promptIndex = 0; promptIndex < dialogue.length; promptIndex++) {\n        const prompt = dialogue[promptIndex];\n        const role = 'system';\n        const content = prompt.content || '';\n        const identifier = `dialogue_examples ${dialogueIndex}-${promptIndex}`;\n\n        const chatMessage = await Message.createAsync(role, content, identifier);\n        await chatMessage.setName(prompt.name);\n        chatMessages.push(chatMessage);\n      }\n      for (const message of chatMessages) {\n        examplesCollection.add(message);\n      }\n    }\n  }\n  return {\n    systemPrompts: promptCollection,\n    dialogue_examples: examplesCollection,\n  };\n}\n//不使用预设\nasync function handleCustomPath(\n  baseData: any,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const chatCompletion = new ChatCompletion();\n  chatCompletion.setTokenBudget(oai_settings.openai_max_context, oai_settings.openai_max_tokens);\n  chatCompletion.reserveBudget(3);\n  const orderArray = config.order || default_order;\n  const positionMap: Record<string, number> = orderArray.reduce((acc: Record<string, number>, item, index) => {\n    if (typeof item === 'string') {\n      acc[item.toLowerCase()] = index;\n    } else if (typeof item === 'object') {\n      acc[`custom_prompt_${index}`] = index;\n    }\n    return acc;\n  }, {});\n\n  //转换为集合\n  const { systemPrompts, dialogue_examples } = await convertSystemPromptsToCollection(baseData, config);\n  const addToChatCompletionInOrder = async (source: any, index: number) => {\n    if (typeof source === 'object') {\n      // 处理自定义注入\n      const collection = new MessageCollection(`custom_prompt_${index}`);\n      const message = await Message.createAsync(source.role, source.content, `custom_prompt_${index}`);\n      collection.add(message);\n      chatCompletion.add(collection, index);\n    } else if (systemPrompts.has(source)) {\n      // 处理普通提示词\n      const prompt = systemPrompts.get(source);\n      const collection = new MessageCollection(source);\n      const message = await Message.fromPromptAsync(prompt);\n      collection.add(message);\n      chatCompletion.add(collection, positionMap[source]);\n    }\n  };\n\n  // 处理所有类型的提示词\n  for (const [index, item] of orderArray.entries()) {\n    if (typeof item === 'string') {\n      // 使用 isPromptFiltered 替代 promptFilter 判断\n      if (!isPromptFiltered(item, config)) {\n        await addToChatCompletionInOrder(item, index);\n      }\n    } else if (typeof item === 'object' && item.role && item.content) {\n      await addToChatCompletionInOrder(item, index);\n    }\n  }\n\n  const dialogue_examplesIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'dialogue_examples',\n  );\n\n  if (dialogue_examplesIndex !== -1 && !isPromptFiltered('dialogue_examples', config)) {\n    chatCompletion.add(dialogue_examples, dialogue_examplesIndex);\n  }\n  //给user输入预留token\n  const userInputMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n  chatCompletion.reserveBudget(userInputMessage);\n\n  await processChatHistoryAndInject(baseData, config, chatCompletion, processedUserInput);\n  chatCompletion.freeBudget(userInputMessage);\n\n  //根据当前预设决定是否合并连续系统role消息\n  if (oai_settings.squash_system_messages) {\n    await chatCompletion.squashSystemMessages();\n  }\n  const prompt = chatCompletion.getChat();\n  return { prompt };\n}\n\nasync function processChatHistoryAndInject(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  chatCompletion: ChatCompletion,\n  processedUserInput: string,\n) {\n  const orderArray = promptConfig.order || default_order;\n  const chatHistoryIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'chat_history',\n  );\n  const userInputIndex = orderArray.findIndex(item => typeof item === 'string' && item.toLowerCase() === 'user_input');\n\n  const hasUserInput = userInputIndex !== -1;\n  const hasChatHistory = chatHistoryIndex !== -1;\n  const isChatHistoryFiltered = isPromptFiltered('chat_history', promptConfig);\n\n  // 创建用户输入消息\n  const userMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n\n  // 仅在需要时添加图像\n  if (promptConfig.image && hasUserInput) {\n    await userMessage.addImage(await convertFileToBase64(promptConfig.image));\n  }\n\n  // 如果聊天记录被过滤或不在order中，只处理用户输入\n  if (isChatHistoryFiltered || !hasChatHistory) {\n    const insertIndex = hasUserInput ? userInputIndex : orderArray.length;\n    chatCompletion.add(new MessageCollection('user_input', userMessage), insertIndex);\n    return;\n  }\n\n  // 处理聊天记录\n  const chatCollection = new MessageCollection('chat_history');\n\n  // 为新聊天指示预留token\n  const newChat = oai_settings.new_chat_prompt;\n  const newChatMessage = await Message.createAsync('system', substituteParams(newChat), 'newMainChat');\n  chatCompletion.reserveBudget(newChatMessage);\n\n  // 添加新聊天提示词到集合的最前面\n  chatCollection.add(newChatMessage);\n\n  // 处理空消息替换\n  const lastChatPrompt = baseData.chatContext.oaiMessages[baseData.chatContext.oaiMessages.length - 1];\n  const emptyMessage = await Message.createAsync('user', oai_settings.send_if_empty, 'emptyUserMessageReplacement');\n\n  if (\n    lastChatPrompt &&\n    lastChatPrompt.role === 'assistant' &&\n    oai_settings.send_if_empty &&\n    chatCompletion.canAfford(emptyMessage)\n  ) {\n    chatCollection.add(emptyMessage);\n  }\n\n  // 将用户消息添加到消息数组中准备处理注入\n  if (!hasUserInput) {\n    const userPrompt = {\n      role: 'user',\n      content: processedUserInput,\n      identifier: 'user_input',\n      image: promptConfig.image ? await convertFileToBase64(promptConfig.image) : undefined,\n    };\n    baseData.chatContext.oaiMessages.unshift(userPrompt);\n  }\n\n  // 处理注入和添加消息\n  const messages = (await populationInjectionPrompts(baseData.chatContext.oaiMessages, promptConfig.inject)).reverse();\n  const imageInlining = isImageInliningSupported();\n  // 添加聊天记录\n  const chatPool = [...messages];\n  for (const chatPrompt of chatPool) {\n    const prompt = new Prompt(chatPrompt);\n    prompt.identifier = `chat_history-${messages.length - chatPool.indexOf(chatPrompt)}`;\n    prompt.content = substituteParams(prompt.content);\n\n    const chatMessage = await Message.fromPromptAsync(prompt);\n    const promptManager = setupChatCompletionPromptManager();\n    if (promptManager.serviceSettings.names_behavior === character_names_behavior.COMPLETION && prompt.name) {\n      const messageName = promptManager.isValidName(prompt.name)\n        ? prompt.name\n        : promptManager.sanitizeName(prompt.name);\n      await chatMessage.setName(messageName);\n    }\n    if (imageInlining && chatPrompt.image) {\n      await chatMessage.addImage(chatPrompt.image);\n    }\n    if (chatCompletion.canAfford(chatMessage)) {\n      chatCollection.add(chatMessage);\n    } else {\n      break;\n    }\n  }\n\n  // 释放新聊天提示词的预留token\n  chatCompletion.freeBudget(newChatMessage);\n\n  if (hasUserInput) {\n    // 按各自在order中的位置添加聊天记录和用户输入\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n    chatCompletion.add(new MessageCollection('user_input', userMessage), userInputIndex);\n  } else {\n    // 聊天记录中已包含用户输入，直接添加到chat_history位置\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n  }\n}\nasync function populationInjectionPrompts(messages: detail.RolePrompt[], customInjects: detail.InjectionPrompt[] = []) {\n  let processedMessages = [...messages];\n  let totalInsertedMessages = 0;\n  const injectionPrompts = [];\n\n  const authorsNote = getContext().extensionPrompts[NOTE_MODULE_NAME];\n  if (authorsNote && authorsNote.value) {\n    injectionPrompts.push({\n      role: getPromptRole(authorsNote.role),\n      content: authorsNote.value,\n      identifier: 'authorsNote',\n      injection_depth: authorsNote.depth,\n      injected: true,\n    });\n  }\n\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.AT_DEPTH\n  ) {\n    injectionPrompts.push({\n      role: 'system',\n      content: power_user.persona_description,\n      identifier: 'persona_description',\n      injection_depth: power_user.persona_description_depth,\n      injected: true,\n    });\n  }\n\n  // 处理自定义注入\n  if (Array.isArray(customInjects)) {\n    for (const inject of customInjects) {\n      injectionPrompts.push({\n        identifier: `INJECTION-${inject.role}-${inject.depth}`,\n        role: inject.role,\n        content: inject.content,\n        injection_depth: inject.depth || 0,\n        injected: true,\n      });\n    }\n  }\n\n  for (let i = 0; i <= MAX_INJECTION_DEPTH; i++) {\n    const depthPrompts = injectionPrompts.filter(prompt => prompt.injection_depth === i && prompt.content);\n\n    const roles = ['system', 'user', 'assistant'];\n    const roleMessages = [];\n    const separator = '\\n';\n\n    for (const role of roles) {\n      // 直接处理当前深度和角色的所有提示词\n      const rolePrompts = depthPrompts\n        .filter(prompt => prompt.role === role)\n        .map(x => x.content.trim())\n        .join(separator);\n\n      if (rolePrompts) {\n        roleMessages.push({\n          role: role,\n          content: rolePrompts,\n          injected: true,\n        });\n      }\n    }\n\n    if (roleMessages.length) {\n      const injectIdx = i + totalInsertedMessages;\n      processedMessages.splice(injectIdx, 0, ...roleMessages);\n      totalInsertedMessages += roleMessages.length;\n    }\n  }\n\n  return processedMessages;\n}\n\nfunction getPromptRole(role: number) {\n  switch (role) {\n    case extension_prompt_roles.SYSTEM:\n      return 'system';\n    case extension_prompt_roles.USER:\n      return 'user';\n    case extension_prompt_roles.ASSISTANT:\n      return 'assistant';\n    default:\n      return 'system';\n  }\n}\n\n//生成响应\nasync function generateResponse(generate_data: any, useStream = false): Promise<string> {\n  let result = '';\n  try {\n    deactivateSendButtons();\n\n    if (useStream) {\n      let originalStreamSetting = oai_settings.stream_openai;\n      if (!originalStreamSetting) {\n        oai_settings.stream_openai = true;\n        saveSettingsDebounced();\n      }\n      const streamingProcessor = new StreamingProcessor();\n      streamingProcessor.generator = await sendOpenAIRequest('normal', generate_data.prompt, abortController.signal);\n      result = (await streamingProcessor.generate()) as string;\n      // console.log(\"getMessage\", getMessage);\n      if (originalStreamSetting !== oai_settings.stream_openai) {\n        oai_settings.stream_openai = originalStreamSetting;\n        saveSettingsDebounced();\n      }\n    } else {\n      eventSource.emit('js_generation_started');\n      const response = await sendOpenAIRequest(type, generate_data.prompt, abortController.signal);\n      result = await handleResponse(response);\n    }\n  } catch (error) {\n    throw error;\n  } finally {\n    unblockGeneration();\n    await clearInjectionPrompts(['INJECTION']);\n  }\n  return result;\n}\n\n// 处理响应\nasync function handleResponse(response: any) {\n  if (!response) {\n    throw Error(`未得到响应`);\n  }\n  if (response.error) {\n    if (response?.response) {\n      // @ts-ignore\n      toastr.error(response.response, t`API Error`, {\n        preventDuplicates: true,\n      });\n    }\n    throw Error(response?.response);\n  }\n  const message: string = extractMessageFromData(response);\n  eventSource.emit('js_generation_ended', message);\n  return message;\n}\n\nfunction unblockGeneration() {\n  activateSendButtons();\n  showSwipeButtons();\n  setGenerationProgress(0);\n  flushEphemeralStoppingStrings();\n}\n\n// 清理注入\nasync function clearInjectionPrompts(prefixes: string[]) {\n  const prompts = getContext().extensionPrompts;\n  Object.keys(prompts)\n    .filter(key => prefixes.some(prefix => key.startsWith(prefix)))\n    .forEach(key => delete prompts[key]);\n\n  await saveChatConditional();\n}\nfunction extractMessageFromData(data: any) {\n  if (typeof data === 'string') {\n    return data;\n  }\n\n  return (\n    data?.choices?.[0]?.message?.content ??\n    data?.choices?.[0]?.text ??\n    data?.text ??\n    data?.message?.content?.[0]?.text ??\n    data?.message?.tool_plan ??\n    ''\n  );\n}\n\nasync function convertFileToBase64(image: File | string): Promise<string> {\n  if (image instanceof File) {\n    return await getBase64Async(image);\n  }\n  return image;\n}\n\nfunction addTemporaryUserMessage(userContent: string) {\n  setExtensionPrompt('TEMP_USER_MESSAGE', userContent, extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction removeTemporaryUserMessage() {\n  setExtensionPrompt('TEMP_USER_MESSAGE', '', extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction isPromptFiltered(promptId: string, config: { overrides?: detail.OverrideConfig }): boolean {\n  if (!config.overrides) {\n    return false;\n  }\n\n  if (promptId === 'with_depth_entries') {\n    return config.overrides.with_depth_entries === false;\n  }\n\n  // 特殊处理 chat_history\n  if (promptId === 'chat_history') {\n    const prompts = config.overrides.chat_history;\n    return prompts !== undefined && prompts.length === 0;\n  }\n\n  // 对于普通提示词，只有当它在 overrides 中存在且为空字符串时才被过滤\n  const override = config.overrides[promptId as keyof Omit<detail.OverrideConfig, 'chat_history'>];\n  return override !== undefined && override === '';\n}\n\nexport function registerIframeGenerateHandler() {\n  registerIframeHandler('[Generate][generate]', async (event: MessageEvent<IframeGenerate>): Promise<string> => {\n    const iframe_name = getIframeName(event);\n    const config = event.data.config;\n\n    console.info(`${getLogPrefix(event)}(${iframe_name}) 发送生成请求: ${config}`);\n\n    const converted_config = fromGenerateConfig(config);\n    return await iframeGenerate(converted_config);\n  });\n\n  registerIframeHandler('[Generate][generateRaw]', async (event: MessageEvent<IframeGenerateRaw>): Promise<string> => {\n    const iframe_name = getIframeName(event);\n    const config = event.data.config;\n\n    console.info(`${getLogPrefix(event)}(${iframe_name}) 发送生成请求: ${config}`);\n\n    const converted_config = fromGenerateRawConfig(config);\n    return await iframeGenerate(converted_config);\n  });\n}\n\n$(document).on('click', '#mes_stop', function () {\n  const wasStopped = stopGeneration();\n  if (wasStopped) {\n    if (abortController) {\n      abortController.abort('Clicked stop button');\n    }\n    unblockGeneration();\n  }\n});\n","import { registerIframeAudioHandler } from '@/iframe_server/audio';\nimport { registerIframeCharacterHandler } from '@/iframe_server/character';\nimport { registerIframeChatMessageHandler } from '@/iframe_server/chat_message';\nimport { registerIframeDisplayedMessageHandler } from '@/iframe_server/displayed_message';\nimport { registerIframeFrontendVersionHandler } from '@/iframe_server/frontend_version';\nimport { registerIframeGenerateHandler } from '@/iframe_server/generate';\nimport { registerIframeLorebookHandler } from '@/iframe_server/lorebook';\nimport { registerIframeLorebookEntryHandler } from '@/iframe_server/lorebook_entry';\nimport { registerIframeSlashHandler } from '@/iframe_server/slash';\nimport { registerIframeTavernRegexHandler } from '@/iframe_server/tavern_regex';\nimport { registerIframeUtilHandler } from '@/iframe_server/util';\nimport { registerIframeVariableHandler } from '@/iframe_server/variables';\n\nimport { IframeMessage, getLogPrefix, iframe_handlers } from '@/iframe_server/_impl';\nimport { t } from '@sillytavern/scripts/i18n';\n\nexport async function handleIframe(event: MessageEvent<IframeMessage>): Promise<void> {\n  if (!event.data) return;\n\n  const handler = iframe_handlers[event.data.request];\n  if (!handler) {\n    return;\n  }\n\n  let result: any = undefined;\n  try {\n    result = await handler(event);\n  } catch (err) {\n    const error = err as Error;\n    toastr.error(t`${getLogPrefix(event)}${error.name + ': ' + error.message}${error.stack ? error.stack : ''}`);\n    console.error(getLogPrefix(event), error);\n  } finally {\n    (event.source as MessageEventSource).postMessage(\n      {\n        request: event.data.request + '_callback',\n        uid: event.data.uid,\n        result: result,\n      },\n      {\n        targetOrigin: '*',\n      },\n    );\n  }\n}\n\nregisterIframeChatMessageHandler();\nregisterIframeDisplayedMessageHandler();\nregisterIframeFrontendVersionHandler();\nregisterIframeGenerateHandler();\nregisterIframeLorebookEntryHandler();\nregisterIframeLorebookHandler();\nregisterIframeSlashHandler();\nregisterIframeTavernRegexHandler();\nregisterIframeUtilHandler();\nregisterIframeVariableHandler();\nregisterIframeCharacterHandler();\nregisterIframeAudioHandler();\n","import { findChar } from '@/compatibility';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  characters,\n  getOneCharacter,\n  getRequestHeaders,\n  saveCharacterDebounced,\n  saveSettings,\n  saveSettingsDebounced,\n  this_chid,\n} from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { ensureImageFormatSupported, getCharaFilename } from '@sillytavern/scripts/utils';\nimport {\n  createNewWorldInfo,\n  deleteWorldInfo,\n  getWorldInfoSettings,\n  selected_world_info,\n  setWorldInfoButtonClass,\n  world_info,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface IframeGetLorebookSettings extends IframeMessage {\n  request: '[Lorebook][getLorebookSettings]';\n}\n\ninterface IframeSetLorebookSettings extends IframeMessage {\n  request: '[Lorebook][setLorebookSettings]';\n  settings: Partial<LorebookSettings>;\n}\n\ninterface IframeGetCharLorebooks extends IframeMessage {\n  request: '[Lorebook][getCharLorebooks]';\n  option: GetCharLorebooksOption;\n}\n\ninterface IframesetCurrentCharLorebooks extends IframeMessage {\n  request: '[Lorebook][setCurrentCharLorebooks]';\n  lorebooks: Partial<CharLorebooks>;\n}\n\ninterface IframeGetLorebooks extends IframeMessage {\n  request: '[Lorebook][getLorebooks]';\n}\n\ninterface IframeDeleteLorebook extends IframeMessage {\n  request: '[Lorebook][deleteLorebook]';\n  lorebook: string;\n}\n\ninterface IframeCreateLorebook extends IframeMessage {\n  request: '[Lorebook][createLorebook]';\n  lorebook: string;\n}\n\nasync function editCurrentCharacter(): Promise<boolean> {\n  $('#rm_info_avatar').html('');\n  const form_data = new FormData(($('#form_create') as JQuery<HTMLFormElement>).get(0));\n\n  const raw_file = form_data.get('avatar');\n  if (raw_file instanceof File) {\n    const converted_file = await ensureImageFormatSupported(raw_file);\n    form_data.set('avatar', converted_file);\n  }\n\n  const headers = getRequestHeaders();\n  // @ts-ignore\n  delete headers['Content-Type'];\n\n  // TODO: 这里的代码可以用来修改第一条消息!\n  form_data.delete('alternate_greetings');\n  const chid = $('.open_alternate_greetings').data('chid');\n  if (chid && Array.isArray(characters[chid]?.data?.alternate_greetings)) {\n    for (const value of characters[chid].data.alternate_greetings) {\n      form_data.append('alternate_greetings', value);\n    }\n  }\n\n  const response = await fetch('/api/characters/edit', {\n    method: 'POST',\n    headers: headers,\n    body: form_data,\n    cache: 'no-cache',\n  });\n\n  if (!response.ok) {\n    return false;\n  }\n\n  await getOneCharacter(form_data.get('avatar_url'));\n\n  $('#add_avatar_button').replaceWith($('#add_avatar_button').val('').clone(true));\n  $('#create_button').attr('value', 'Save');\n\n  return true;\n}\n\nfunction toLorebookSettings(world_info_settings: ReturnType<typeof getWorldInfoSettings>): LorebookSettings {\n  return {\n    selected_global_lorebooks: (world_info_settings.world_info as { globalSelect: string[] }).globalSelect,\n\n    scan_depth: world_info_settings.world_info_depth,\n    context_percentage: world_info_settings.world_info_budget,\n    budget_cap: world_info_settings.world_info_budget_cap,\n    min_activations: world_info_settings.world_info_min_activations,\n    max_depth: world_info_settings.world_info_min_activations_depth_max,\n    max_recursion_steps: world_info_settings.world_info_max_recursion_steps,\n\n    insertion_strategy: { 0: 'evenly', 1: 'character_first', 2: 'global_first' }[\n      world_info_settings.world_info_character_strategy\n    ] as 'evenly' | 'character_first' | 'global_first',\n\n    include_names: world_info_settings.world_info_include_names,\n    recursive: world_info_settings.world_info_recursive,\n    case_sensitive: world_info_settings.world_info_case_sensitive,\n    match_whole_words: world_info_settings.world_info_match_whole_words,\n    use_group_scoring: world_info_settings.world_info_use_group_scoring,\n    overflow_alert: world_info_settings.world_info_overflow_alert,\n  };\n}\n\nfunction assignPartialLorebookSettings(settings: Partial<LorebookSettings>): void {\n  const for_eachs = {\n    selected_global_lorebooks: (value: LorebookSettings['selected_global_lorebooks']) => {\n      $('#world_info').find('option[value!=\"\"]').remove();\n      world_names.forEach((item, i) =>\n        $('#world_info').append(`<option value='${i}'${value.includes(item) ? ' selected' : ''}>${item}</option>`),\n      );\n\n      selected_world_info.length = 0;\n      selected_world_info.push(...value);\n      saveSettings();\n    },\n\n    scan_depth: (value: LorebookSettings['scan_depth']) => {\n      $('#world_info_depth').val(value).trigger('input');\n    },\n    context_percentage: (value: LorebookSettings['context_percentage']) => {\n      $('#world_info_budget').val(value).trigger('input');\n    },\n    budget_cap: (value: LorebookSettings['budget_cap']) => {\n      $('#world_info_budget_cap').val(value).trigger('input');\n    },\n    min_activations: (value: LorebookSettings['min_activations']) => {\n      $('#world_info_min_activations').val(value).trigger('input');\n    },\n    max_depth: (value: LorebookSettings['max_depth']) => {\n      $('#world_info_min_activations_depth_max').val(value).trigger('input');\n    },\n    max_recursion_steps: (value: LorebookSettings['max_recursion_steps']) => {\n      $('#world_info_max_recursion_steps').val(value).trigger('input');\n    },\n\n    insertion_strategy: (value: LorebookSettings['insertion_strategy']) => {\n      const converted_value = { evenly: 0, character_first: 1, global_first: 2 }[value];\n      $(`#world_info_character_strategy option[value='${converted_value}']`).prop('selected', true);\n      $('#world_info_character_strategy').val(converted_value).trigger('change');\n    },\n\n    include_names: (value: LorebookSettings['include_names']) => {\n      $('#world_info_include_names').prop('checked', value).trigger('input');\n    },\n    recursive: (value: LorebookSettings['recursive']) => {\n      $('#world_info_recursive').prop('checked', value).trigger('input');\n    },\n    case_sensitive: (value: LorebookSettings['case_sensitive']) => {\n      $('#world_info_case_sensitive').prop('checked', value).trigger('input');\n    },\n    match_whole_words: (value: LorebookSettings['match_whole_words']) => {\n      $('#world_info_match_whole_words').prop('checked', value).trigger('input');\n    },\n    use_group_scoring: (value: LorebookSettings['use_group_scoring']) => {\n      $('#world_info_use_group_scoring').prop('checked', value).trigger('change');\n    },\n    overflow_alert: (value: LorebookSettings['overflow_alert']) => {\n      $('#world_info_overflow_alert').prop('checked', value).trigger('change');\n    },\n  };\n\n  Object.entries(settings)\n    .filter(([_, value]) => value !== undefined)\n    .forEach(([field, value]) => {\n      // @ts-ignore\n      for_eachs[field]?.(value);\n    });\n}\n\nexport function registerIframeLorebookHandler() {\n  registerIframeHandler(\n    '[Lorebook][getLorebookSettings]',\n    async (event: MessageEvent<IframeGetLorebookSettings>): Promise<LorebookSettings> => {\n      const lorebook_settings = toLorebookSettings(getWorldInfoSettings());\n\n      console.info(`${getLogPrefix(event)}获取世界书全局设置:\\n${JSON.stringify(lorebook_settings, undefined, 2)}`);\n      return lorebook_settings;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][setLorebookSettings]',\n    async (event: MessageEvent<IframeSetLorebookSettings>): Promise<void> => {\n      const settings = event.data.settings;\n      if (settings.selected_global_lorebooks) {\n        const inexisting_lorebooks = settings.selected_global_lorebooks.filter(\n          lorebook => !world_names.includes(lorebook),\n        );\n        if (inexisting_lorebooks.length > 0) {\n          throw Error(`尝试修改要全局启用的世界书, 但未找到以下世界书: ${JSON.stringify(inexisting_lorebooks)}`);\n        }\n      }\n\n      assignPartialLorebookSettings(settings);\n\n      console.info(`${getLogPrefix(event)}修改世界书全局设置:\\n${JSON.stringify(settings, undefined, 2)}`);\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][getCharLorebooks]',\n    async (event: MessageEvent<IframeGetCharLorebooks>): Promise<CharLorebooks> => {\n      const option = event.data.option;\n\n      // @ts-ignore\n      if (selected_group && !option.name) {\n        throw Error(`不要在群组中调用这个功能`);\n      }\n      const filename = option.name ?? characters[this_chid]?.avatar ?? null;\n      // @ts-ignore\n      const character = findChar({ name: filename });\n      if (!character) {\n        throw Error(`未找到名为 '${filename}' 的角色卡`);\n      }\n\n      let books: CharLorebooks = { primary: null, additional: [] };\n\n      if (character.data?.extensions?.world) {\n        books.primary = character.data?.extensions?.world;\n      }\n\n      // @ts-ignore\n      const extraCharLore = world_info.charLore?.find(e => e.name === filename);\n      if (extraCharLore && Array.isArray(extraCharLore.extraBooks)) {\n        books.additional = extraCharLore.extraBooks;\n      }\n\n      console.info(\n        `${getLogPrefix(event)}获取角色卡绑定的世界书, 选项: ${JSON.stringify(option)}, 获取结果: ${JSON.stringify(\n          books,\n        )}`,\n      );\n      return books;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][setCurrentCharLorebooks]',\n    async (event: MessageEvent<IframesetCurrentCharLorebooks>): Promise<void> => {\n      const lorebooks = event.data.lorebooks;\n\n      // @ts-ignore\n      if (selected_group && !option.name) {\n        throw Error(`不要在群组中调用这个功能`);\n      }\n      const filename = getCharaFilename(this_chid);\n      if (!filename) {\n        throw Error(`未打开任何角色卡`);\n      }\n\n      const inexisting_lorebooks: string[] = [\n        ...(lorebooks.primary && !world_names.includes(lorebooks.primary) ? [lorebooks.primary] : []),\n        ...(lorebooks.additional ? lorebooks.additional.filter(lorebook => !world_names.includes(lorebook)) : []),\n      ];\n      if (inexisting_lorebooks.length > 0) {\n        throw Error(`尝试修改 '${filename}' 绑定的世界书, 但未找到以下世界书: ${inexisting_lorebooks}`);\n      }\n\n      if (lorebooks.primary !== undefined) {\n        const previous_primary = String($('#character_world').val());\n        $('#character_world').val(lorebooks.primary ? lorebooks.primary : '');\n\n        $('.character_world_info_selector')\n          .find('option:selected')\n          .val(lorebooks.primary ? world_names.indexOf(lorebooks.primary) : '');\n\n        if (previous_primary && !lorebooks.primary) {\n          const data = JSON.parse(String($('#character_json_data').val()));\n          if (data?.data?.character_book) {\n            data.data.character_book = undefined;\n          }\n          $('#character_json_data').val(JSON.stringify(data));\n        }\n\n        if (!(await editCurrentCharacter())) {\n          throw Error(`尝试为 '${filename}' 绑定主要世界书, 但在访问酒馆后端时出错`);\n        }\n\n        // @ts-ignore\n        setWorldInfoButtonClass(undefined, !!lorebooks.primary);\n      }\n\n      if (lorebooks.additional !== undefined) {\n        interface CharLoreEntry {\n          name: string;\n          extraBooks: string[];\n        }\n        let char_lore = (world_info as { charLore: CharLoreEntry[] }).charLore ?? [];\n\n        const existing_char_index = char_lore.findIndex(entry => entry.name === filename);\n        if (existing_char_index === -1) {\n          char_lore.push({ name: filename, extraBooks: lorebooks.additional });\n        } else if (lorebooks.additional.length === 0) {\n          char_lore.splice(existing_char_index, 1);\n        } else {\n          char_lore[existing_char_index].extraBooks = lorebooks.additional;\n        }\n\n        Object.assign(world_info, { charLore: char_lore });\n      }\n\n      saveCharacterDebounced();\n      saveSettingsDebounced();\n\n      console.info(\n        `${getLogPrefix(event)}修改角色卡绑定的世界书, 要修改的部分: ${JSON.stringify(lorebooks)}${\n          lorebooks.primary === undefined ? ', 主要世界书保持不变' : ''\n        }${lorebooks.additional === undefined ? ', 附加世界书保持不变' : ''}`,\n      );\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][getLorebooks]',\n    async (event: MessageEvent<IframeGetLorebooks>): Promise<string[]> => {\n      console.info(`${getLogPrefix(event)}获取世界书列表: ${JSON.stringify(world_names)}`);\n      return world_names;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][deleteLorebook]',\n    async (event: MessageEvent<IframeDeleteLorebook>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n\n      const success = await deleteWorldInfo(lorebook);\n\n      console.info(`${getLogPrefix(event)}移除世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n      return success;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][createLorebook]',\n    async (event: MessageEvent<IframeCreateLorebook>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n\n      const success = await createNewWorldInfo(lorebook, { interactive: false });\n\n      console.info(`${getLogPrefix(event)}新建世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n      return success;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { debounce } from '@sillytavern/scripts/utils';\nimport {\n  createWorldInfoEntry,\n  deleteWIOriginalDataValue,\n  loadWorldInfo,\n  originalWIDataKeyMap,\n  saveWorldInfo,\n  setWIOriginalDataValue,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface IframeGetLorebookEntries extends IframeMessage {\n  request: '[LorebookEntry][getLorebookEntries]';\n  lorebook: string;\n  option: Required<GetLorebookEntriesOption>;\n}\n\ninterface IframeSetLorebookEntries extends IframeMessage {\n  request: '[LorebookEntry][setLorebookEntries]';\n  lorebook: string;\n  entries: (Pick<LorebookEntry, 'uid'> & Partial<Omit<LorebookEntry, 'uid'>>)[];\n}\n\ninterface IframeCreateLorebookEntry extends IframeMessage {\n  request: '[LorebookEntry][createLorebookEntry]';\n  lorebook: string;\n  field_values: Partial<Omit<LorebookEntry, 'uid'>>;\n}\n\ninterface IframeDeleteLorebookEntry extends IframeMessage {\n  request: '[LorebookEntry][deleteLorebookEntry]';\n  lorebook: string;\n  lorebook_uid: number;\n}\n\nfunction toLorebookEntry(entry: any): LorebookEntry {\n  return {\n    uid: entry.uid,\n    display_index: entry.displayIndex,\n    comment: entry.comment,\n    enabled: !entry.disable,\n    type: entry.constant ? 'constant' : entry.vectorized ? 'vectorized' : 'selective',\n    position:\n      // @ts-ignore\n      {\n        0: 'before_character_definition',\n        1: 'after_character_definition',\n        5: 'before_example_messages',\n        6: 'after_example_messages',\n        2: 'before_author_note',\n        3: 'after_author_note',\n      }[entry.position] ??\n      (entry.role === 0 ? 'at_depth_as_system' : entry.role === 1 ? 'at_depth_as_user' : 'at_depth_as_assistant'),\n    depth: entry.position === 4 ? entry.depth : null,\n    order: entry.order,\n    probability: entry.probability,\n\n    key: entry.key,\n    logic: {\n      0: 'and_any',\n      1: 'and_all',\n      2: 'not_any',\n      3: 'not_all',\n    }[entry.selectiveLogic as number] as 'and_any' | 'and_all' | 'not_any' | 'not_all',\n    filter: entry.keysecondary,\n\n    scan_depth: entry.scanDepth ?? 'same_as_global',\n    case_sensitive: entry.caseSensitive ?? 'same_as_global',\n    match_whole_words: entry.matchWholeWords ?? 'same_as_global',\n    use_group_scoring: entry.useGroupScoring ?? 'same_as_global',\n    automation_id: entry.automationId || null,\n\n    exclude_recursion: entry.excludeRecursion,\n    prevent_recursion: entry.preventRecursion,\n    delay_until_recursion: entry.delayUntilRecursion,\n\n    content: entry.content,\n\n    group: entry.group,\n    group_prioritized: entry.groupOverride,\n    group_weight: entry.groupWeight,\n    sticky: entry.sticky || null,\n    cooldown: entry.cooldown || null,\n    delay: entry.delay || null,\n  };\n}\n\nfunction fromPartialLorebookEntry(entry: Partial<LorebookEntry>): any {\n  const transformers = {\n    uid: (value: LorebookEntry['uid']) => ({ uid: value }),\n    display_index: (value: LorebookEntry['display_index']) => ({ displayIndex: value }),\n\n    comment: (value: LorebookEntry['comment']) => ({ comment: value }),\n    enabled: (value: LorebookEntry['enabled']) => ({ disable: !value }),\n    type: (value: LorebookEntry['type']) => ({\n      constant: value === 'constant',\n      vectorized: value === 'vectorized',\n    }),\n    position: (value: LorebookEntry['position']) => ({\n      position: {\n        before_character_definition: 0,\n        after_character_definition: 1,\n        before_example_messages: 5,\n        after_example_messages: 6,\n        before_author_note: 2,\n        after_author_note: 3,\n        at_depth_as_system: 4,\n        at_depth_as_user: 4,\n        at_depth_as_assistant: 4,\n      }[value],\n      role:\n        // @ts-ignore\n        {\n          at_depth_as_system: 0,\n          at_depth_as_user: 1,\n          at_depth_as_assistant: 2,\n        }[value] ?? null,\n    }),\n    depth: (value: LorebookEntry['depth']) => ({ depth: value === null ? 4 : value }),\n    order: (value: LorebookEntry['order']) => ({ order: value }),\n    probability: (value: LorebookEntry['probability']) => ({ probability: value }),\n\n    key: (value: LorebookEntry['key']) => ({ key: value }),\n    logic: (value: LorebookEntry['logic']) => ({\n      selectiveLogic: {\n        and_any: 0,\n        and_all: 1,\n        not_any: 2,\n        not_all: 3,\n      }[value],\n    }),\n    filter: (value: LorebookEntry['filter']) => ({ keysecondary: value }),\n\n    scan_depth: (value: LorebookEntry['scan_depth']) => ({ scanDepth: value === 'same_as_global' ? null : value }),\n    case_sensitive: (value: LorebookEntry['case_sensitive']) => ({\n      caseSensitive: value === 'same_as_global' ? null : value,\n    }),\n    match_whole_words: (value: LorebookEntry['match_whole_words']) => ({\n      matchWholeWords: value === 'same_as_global' ? null : value,\n    }),\n    use_group_scoring: (value: LorebookEntry['use_group_scoring']) => ({\n      useGroupScoring: value === 'same_as_global' ? null : value,\n    }),\n    automation_id: (value: LorebookEntry['automation_id']) => ({ automationId: value === null ? '' : value }),\n\n    exclude_recursion: (value: LorebookEntry['exclude_recursion']) => ({ excludeRecursion: value }),\n    prevent_recursion: (value: LorebookEntry['prevent_recursion']) => ({ preventRecursion: value }),\n    delay_until_recursion: (value: LorebookEntry['delay_until_recursion']) => ({ delayUntilRecursion: value }),\n\n    content: (value: LorebookEntry['content']) => ({ content: value }),\n\n    group: (value: LorebookEntry['group']) => ({ group: value }),\n    group_prioritized: (value: LorebookEntry['group_prioritized']) => ({ groupOverride: value }),\n    group_weight: (value: LorebookEntry['group_weight']) => ({ groupWeight: value }),\n    sticky: (value: LorebookEntry['sticky']) => ({ sticky: value === null ? 0 : value }),\n    cooldown: (value: LorebookEntry['cooldown']) => ({ cooldown: value === null ? 0 : value }),\n    delay: (value: LorebookEntry['delay']) => ({ delay: value === null ? 0 : value }),\n  };\n\n  return Object.entries(entry)\n    .filter(([_, value]) => value !== undefined)\n    .reduce(\n      (result, [field, value]) => ({\n        ...result,\n        // @ts-ignore\n        ...transformers[field]?.(value),\n      }),\n      {},\n    );\n}\n\nfunction assignFieldValuesToWiEntry(data: any, wi_entry: any, field_values: any) {\n  Object.entries(field_values).forEach(([field, value]) => {\n    wi_entry[field] = value;\n    // @ts-ignore\n    const original_wi_mapped_key = originalWIDataKeyMap[field];\n    if (original_wi_mapped_key) {\n      // @ts-ignore\n      setWIOriginalDataValue(data, wi_entry.uid, original_wi_mapped_key, value);\n    }\n  });\n}\n\nfunction reloadEditor(file: string): void {\n  const currentIndex = Number($('#world_editor_select').val());\n  const selectedIndex = world_names.indexOf(file);\n  if (selectedIndex !== -1 && currentIndex === selectedIndex) {\n    $('#world_editor_select').val(selectedIndex).trigger('change');\n  }\n}\n\nconst reloadEditorDebounced = debounce(reloadEditor);\n\nexport function registerIframeLorebookEntryHandler() {\n  registerIframeHandler(\n    '[LorebookEntry][getLorebookEntries]',\n    async (event: MessageEvent<IframeGetLorebookEntries>): Promise<LorebookEntry[]> => {\n      const lorebook = event.data.lorebook;\n      const option = event.data.option;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n\n      // @ts-ignore\n      let entries: LorebookEntry[] = Object.values((await loadWorldInfo(lorebook)).entries).map(toLorebookEntry);\n      if (option.filter !== 'none') {\n        entries = entries.filter(entry =>\n          Object.entries(option.filter).every(([field, expected_value]) => {\n            // @ts-ignore\n            const entry_value = entry[field];\n            if (Array.isArray(entry_value)) {\n              return (expected_value as string[]).every(value => entry_value.includes(value));\n            }\n            if (typeof entry_value === 'string') {\n              return entry_value.includes(expected_value as string);\n            }\n            return entry_value === expected_value;\n          }),\n        );\n      }\n\n      console.info(`${getLogPrefix(event)}获取世界书 '${lorebook}' 中的条目, 选项: ${JSON.stringify(option)}`);\n      return entries;\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][setLorebookEntries]',\n    async (event: MessageEvent<IframeSetLorebookEntries>): Promise<void> => {\n      const lorebook = event.data.lorebook;\n      const entries = event.data.entries;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n      const data = await loadWorldInfo(lorebook);\n\n      const process_entry = async (entry: (typeof entries)[0]): Promise<void> => {\n        // @ts-ignore\n        const wi_entry = data.entries[entry.uid];\n        if (!wi_entry) {\n          throw Error(`未能在世界书 '${lorebook}' 中找到 uid=${entry.uid} 的条目`);\n        }\n        assignFieldValuesToWiEntry(data, wi_entry, fromPartialLorebookEntry(entry));\n      };\n\n      await Promise.all(entries.map(process_entry));\n      await saveWorldInfo(lorebook, data);\n      reloadEditorDebounced(lorebook);\n\n      console.info(\n        `${getLogPrefix(event)}修改世界书 '${lorebook}' 中以下条目的以下字段:\\n${JSON.stringify(\n          entries,\n          undefined,\n          2,\n        )}`,\n      );\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][createLorebookEntry]',\n    async (event: MessageEvent<IframeCreateLorebookEntry>): Promise<number> => {\n      const lorebook = event.data.lorebook;\n      const field_values = event.data.field_values;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n      const data = await loadWorldInfo(lorebook);\n      const wi_entry = createWorldInfoEntry(lorebook, data) as any;\n      const partial_lorebook_entry = fromPartialLorebookEntry(field_values);\n      if (partial_lorebook_entry.uid) {\n        delete partial_lorebook_entry.uid;\n      }\n      assignFieldValuesToWiEntry(data, wi_entry, partial_lorebook_entry);\n\n      await saveWorldInfo(lorebook, data);\n      reloadEditorDebounced(lorebook);\n\n      console.info(\n        `${getLogPrefix(event)}在世界书 '${lorebook}' 中新建 uid='${wi_entry.uid}' 条目, 并设置内容:\\n${JSON.stringify(\n          field_values,\n          undefined,\n          2,\n        )}`,\n      );\n      return wi_entry.uid;\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][deleteLorebookEntry]',\n    async (event: MessageEvent<IframeDeleteLorebookEntry>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n      const lorebook_uid = event.data.lorebook_uid;\n\n      const data = await loadWorldInfo(lorebook);\n      // QUESTION: 好像没办法从 data 检测世界书是否存在?\n      let deleted = false;\n      // @ts-ignore 18046\n      if (data.entries[lorebook_uid]) {\n        // @ts-ignore 18046\n        delete data.entries[lorebook_uid];\n        deleted = true;\n      }\n      if (deleted) {\n        // @ts-ignore 2345\n        deleteWIOriginalDataValue(data, lorebook_uid);\n        await saveWorldInfo(lorebook, data);\n        reloadEditorDebounced(lorebook);\n      }\n\n      console.info(\n        `${getLogPrefix(event)}删除世界书 '${lorebook}' 中的 uid='${lorebook_uid}' 条目${deleted ? '成功' : '失败'}`,\n      );\n      return deleted;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\n\ninterface IframeSlash extends IframeMessage {\n  request: '[Slash][triggerSlash]' | '[Slash][triggerSlashWithResult]';\n  command: string;\n}\n\nexport function registerIframeSlashHandler() {\n  registerIframeHandler('[Slash][triggerSlash]', async (event: MessageEvent<IframeSlash>): Promise<void> => {\n    const command = event.data.command;\n\n    const result = await executeSlashCommandsWithOptions(command);\n    if (result.isError) {\n      throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n    }\n\n    console.info(`${getLogPrefix(event)}运行 Slash 命令: ${command}`);\n  });\n\n  registerIframeHandler(\n    '[Slash][triggerSlashWithResult]',\n    async (event: MessageEvent<IframeSlash>): Promise<string | undefined> => {\n      const command = event.data.command;\n\n      const result = await executeSlashCommandsWithOptions(command);\n      if (result.isError) {\n        throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n      }\n\n      console.info(`${getLogPrefix(event)}运行 Slash 命令 '${command}', 结果: ${result.pipe}`);\n      return result.pipe;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { partition } from '@/util/helper';\n\nimport { characters, reloadCurrentChat, saveChatConditional, saveSettings, this_chid } from '@sillytavern/script';\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\nimport { extension_settings, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\n\ninterface IframeIsCharacterTavernRegexEnabled extends IframeMessage {\n  request: '[TavernRegex][isCharacterTavernRegexesEnabled]';\n}\n\ninterface IframeGetTavernRegexes extends IframeMessage {\n  request: '[TavernRegex][getTavernRegexes]';\n  option: Required<GetTavernRegexesOption>;\n}\n\ninterface IframeReplaceTavernRegexes extends IframeMessage {\n  request: '[TavernRegex][replaceTavernRegexes]';\n  regexes: TavernRegex[];\n  option: Required<ReplaceTavernRegexesOption>;\n}\n\nexport function isCharacterTavernRegexEnabled(): boolean {\n  // @ts-ignore 2345\n  return extension_settings?.character_allowed_regex?.includes(characters?.[this_chid]?.avatar);\n}\n\nexport function getGlobalRegexes(): RegexScriptData[] {\n  return extension_settings.regex ?? [];\n}\n\nexport function getCharacterRegexes(): RegexScriptData[] {\n  return characters[this_chid]?.data?.extensions?.regex_scripts ?? [];\n}\n\nfunction toTavernRegex(regex_script_data: RegexScriptData, scope: 'global' | 'character'): TavernRegex {\n  return {\n    id: regex_script_data.id,\n    script_name: regex_script_data.scriptName,\n    enabled: !regex_script_data.disabled,\n    run_on_edit: regex_script_data.runOnEdit,\n    scope: scope,\n\n    find_regex: regex_script_data.findRegex,\n    replace_string: regex_script_data.replaceString,\n\n    source: {\n      user_input: regex_script_data.placement.includes(regex_placement.USER_INPUT),\n      ai_output: regex_script_data.placement.includes(regex_placement.AI_OUTPUT),\n      slash_command: regex_script_data.placement.includes(regex_placement.SLASH_COMMAND),\n      world_info: regex_script_data.placement.includes(regex_placement.WORLD_INFO),\n    },\n\n    destination: {\n      display: regex_script_data.markdownOnly,\n      prompt: regex_script_data.promptOnly,\n    },\n\n    min_depth: typeof regex_script_data.minDepth === 'number' ? regex_script_data.minDepth : null,\n    max_depth: typeof regex_script_data.maxDepth === 'number' ? regex_script_data.maxDepth : null,\n  };\n}\n\nfunction fromTavernRegex(tavern_regex: TavernRegex): RegexScriptData {\n  return {\n    id: tavern_regex.id,\n    scriptName: tavern_regex.script_name,\n    disabled: !tavern_regex.enabled,\n    runOnEdit: tavern_regex.run_on_edit,\n\n    findRegex: tavern_regex.find_regex,\n    replaceString: tavern_regex.replace_string,\n    trimStrings: [], // TODO: handle this?\n\n    placement: [\n      ...(tavern_regex.source.user_input ? [regex_placement.USER_INPUT] : []),\n      ...(tavern_regex.source.ai_output ? [regex_placement.AI_OUTPUT] : []),\n      ...(tavern_regex.source.slash_command ? [regex_placement.SLASH_COMMAND] : []),\n      ...(tavern_regex.source.world_info ? [regex_placement.WORLD_INFO] : []),\n    ],\n\n    substituteRegex: 0, // TODO: handle this?\n\n    // @ts-ignore\n    minDepth: tavern_regex.min_depth,\n    // @ts-ignore\n    maxDepth: tavern_regex.max_depth,\n\n    markdownOnly: tavern_regex.destination.display,\n    promptOnly: tavern_regex.destination.prompt,\n  };\n}\n\nexport function registerIframeTavernRegexHandler() {\n  registerIframeHandler(\n    '[TavernRegex][isCharacterTavernRegexesEnabled]',\n    async (event: MessageEvent<IframeIsCharacterTavernRegexEnabled>): Promise<boolean> => {\n      const result = isCharacterTavernRegexEnabled();\n\n      console.info(`${getLogPrefix(event)}查询到局部正则${result ? '被启用' : '被禁用'}`);\n      return result;\n    },\n  );\n\n  registerIframeHandler(\n    '[TavernRegex][getTavernRegexes]',\n    async (event: MessageEvent<IframeGetTavernRegexes>): Promise<TavernRegex[]> => {\n      const option = event.data.option;\n\n      if (!['all', 'enabled', 'disabled'].includes(option.enable_state)) {\n        throw Error(\n          `提供的 enable_state 无效, 请提供 'all', 'enabled' 或 'disabled', 你提供的是: ${option.enable_state}`,\n        );\n      }\n      if (!['all', 'global', 'character'].includes(option.scope)) {\n        throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${option.scope}`);\n      }\n\n      let regexes: TavernRegex[] = [];\n      if (option.scope === 'all' || option.scope === 'global') {\n        regexes = [...regexes, ...getGlobalRegexes().map(regex => toTavernRegex(regex, 'global'))];\n      }\n      if (option.scope === 'all' || option.scope === 'character') {\n        regexes = [...regexes, ...getCharacterRegexes().map(regex => toTavernRegex(regex, 'character'))];\n      }\n      if (option.enable_state !== 'all') {\n        regexes = regexes.filter(regex => regex.enabled === (option.enable_state === 'enabled'));\n      }\n\n      console.info(`${getLogPrefix(event)}获取酒馆正则数据, 选项: ${JSON.stringify(option)}`);\n      return regexes;\n    },\n  );\n\n  registerIframeHandler(\n    '[TavernRegex][replaceTavernRegexes]',\n    async (event: MessageEvent<IframeReplaceTavernRegexes>): Promise<void> => {\n      const regexes = event.data.regexes;\n      const option = event.data.option;\n      if (!['all', 'global', 'character'].includes(option.scope)) {\n        throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${option.scope}`);\n      }\n\n      // FIXME: `trimStrings` and `substituteRegex` are not considered\n      const emptied_regexes = regexes.filter(regex => regex.script_name == '');\n      if (emptied_regexes.length > 0) {\n        throw Error(`不能将酒馆正则的名称设置为空字符串:\\n${JSON.stringify(emptied_regexes.map(regex => regex.id))}`);\n      }\n      const [global_regexes, character_regexes] = partition(regexes, regex => regex.scope === 'global').map(regexes =>\n        regexes.map(fromTavernRegex),\n      );\n\n      const character = characters[this_chid];\n      if (option.scope === 'all' || option.scope === 'global') {\n        extension_settings.regex = global_regexes;\n      }\n      if (option.scope === 'all' || option.scope === 'character') {\n        if (character) {\n          characters[this_chid].data.extensions.regex_scripts = character_regexes;\n          await writeExtensionField(this_chid, 'regex_scripts', character_regexes);\n        }\n      }\n      await saveSettings();\n      if (character) {\n        await saveChatConditional();\n      }\n      await reloadCurrentChat();\n\n      console.info(`${getLogPrefix(event)}替换酒馆正则\\\n${\n  option.scope === 'all' || option.scope === 'global'\n    ? `, 全局正则:\\n${JSON.stringify(global_regexes, undefined, 2)}`\n    : ``\n}\\\n${\n  option.scope === 'all' || option.scope === 'character'\n    ? `, 局部正则:\\n${JSON.stringify(character_regexes, undefined, 2)}`\n    : ``\n}`);\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { substituteParamsExtended } from '@sillytavern/script';\n\ninterface IframeSubstitudeMacros extends IframeMessage {\n  request: '[Utils][substitudeMacros]';\n  text: string;\n}\n\nexport function registerIframeUtilHandler() {\n  registerIframeHandler(\n    '[Utils][substitudeMacros]',\n    async (event: MessageEvent<IframeSubstitudeMacros>): Promise<string> => {\n      const text = event.data.text;\n\n      const text_demacroed = substituteParamsExtended(text);\n\n      console.info(`${getLogPrefix(event)}替换字符串中的宏, 字符串: '${text}', 结果: '${text_demacroed}'`);\n      return text_demacroed;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { chat_metadata, event_types, eventSource, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, getContext, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\n\ninterface IframeGetVariables extends IframeMessage {\n  request: '[Variables][getVariables]';\n  option: Required<VariableOption>;\n}\n\ninterface IframeReplaceVariables extends IframeMessage {\n  request: '[Variables][replaceVariables]';\n  option: Required<VariableOption>;\n  variables: Record<string, any>;\n}\n\n// for compatibility\ninterface IframeSetVariables extends IframeMessage {\n  request: '[Variables][setVariables]';\n  message_id: number;\n  variables: Record<string, any>;\n}\n\nfunction getVariablesByType(type: 'chat' | 'global'): Record<string, any> {\n  switch (type) {\n    case 'chat':\n      const metadata = chat_metadata as {\n        variables: Record<string, any> | undefined;\n      };\n      if (!metadata.variables) {\n        metadata.variables = {};\n      }\n      return metadata.variables;\n    case 'global':\n      return extension_settings.variables.global;\n  }\n}\n\nlet latest_set_variables_message_id: number | null = null;\n\nexport function registerIframeVariableHandler() {\n  registerIframeHandler(\n    '[Variables][getVariables]',\n    async (event: MessageEvent<IframeGetVariables>): Promise<Record<string, any>> => {\n      const option = event.data.option;\n\n      const result = getVariablesByType(option.type);\n\n      console.info(\n        `${getLogPrefix(event)}获取${option.type == 'chat' ? `聊天` : `全局`}变量表:\\n${JSON.stringify(\n          result,\n          undefined,\n          2,\n        )}`,\n      );\n      return result;\n    },\n  );\n\n  registerIframeHandler(\n    '[Variables][replaceVariables]',\n    async (event: MessageEvent<IframeReplaceVariables>): Promise<void> => {\n      const variables = event.data.variables;\n      const option = event.data.option;\n\n      switch (option.type) {\n        case 'chat':\n          await eventSource.emit(\n            'variables_updated',\n            option.type,\n            (chat_metadata as { variables: Object }).variables,\n            variables,\n          );\n          (chat_metadata as { variables: Object }).variables = variables;\n          saveMetadataDebounced();\n          break;\n        case 'global':\n          await eventSource.emit('variables_updated', option.type, extension_settings.variables.global, variables);\n          extension_settings.variables.global = variables;\n          saveSettingsDebounced();\n          break;\n      }\n\n      console.info(\n        `${getLogPrefix(event)}将${option.type == 'chat' ? `聊天` : `全局`}变量表替换为:\\n${JSON.stringify(\n          variables,\n          undefined,\n          2,\n        )}`,\n      );\n    },\n  );\n\n  registerIframeHandler('[Variables][setVariables]', async (event: MessageEvent<IframeSetVariables>): Promise<void> => {\n    const variables = event.data.variables;\n    const message_id = event.data.message_id;\n\n    if (isNaN(message_id)) {\n      return;\n    }\n    const chat_length = getContext().chat.length;\n    const latest_message_id = chat_length - 1;\n\n    if (message_id !== latest_message_id) {\n      console.info(\n        `因为 ${message_id} 楼不是最新楼层 ${latest_message_id} 楼, 取消设置聊天变量. 原本要设置的变量:\\n${JSON.stringify(\n          variables,\n          undefined,\n          2,\n        )} `,\n      );\n      return;\n    }\n    latest_set_variables_message_id = message_id;\n    if (\n      // @ts-ignore\n      !chat_metadata.variables ||\n      // @ts-ignore\n      typeof chat_metadata.variables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables = {};\n    }\n    if (\n      // @ts-ignore\n      !chat_metadata.variables.tempVariables ||\n      // @ts-ignore\n      typeof chat_metadata.variables.tempVariables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables.tempVariables = {};\n    }\n    if (variables.hasOwnProperty('tempVariables')) {\n      // @ts-ignore\n      delete variables.tempVariables;\n    }\n    // @ts-ignore\n    const tempVariables = chat_metadata.variables.tempVariables;\n    // @ts-ignore\n    const currentVariables = chat_metadata.variables;\n    Object.keys(variables).forEach(key => {\n      // @ts-ignore\n      const newValue = variables[key];\n      const currentValue = currentVariables[key];\n      if (newValue !== currentValue) {\n        tempVariables[key] = newValue;\n      }\n    });\n    // @ts-ignore\n    chat_metadata.variables.tempVariables = tempVariables;\n    saveMetadataDebounced();\n\n    console.info(`${getLogPrefix(event)}设置聊天变量, 要设置的变量:\\n${JSON.stringify(variables, undefined, 2)} `);\n  });\n}\n\nexport function clearTempVariables() {\n  if (\n    chat_metadata.variables &&\n    chat_metadata.variables.tempVariables &&\n    Object.keys(chat_metadata.variables.tempVariables).length > 0\n  ) {\n    console.log('[Var]Clearing tempVariables.');\n    chat_metadata.variables.tempVariables = {};\n    saveMetadataDebounced();\n  }\n}\n\nexport function shouldUpdateVariables(eventMesId: number) {\n  if (\n    !chat_metadata.variables ||\n    !chat_metadata.variables.tempVariables ||\n    Object.keys(chat_metadata.variables.tempVariables).length === 0\n  ) {\n    return;\n  }\n  if (eventMesId === latest_set_variables_message_id) {\n    console.log('[Var]MesId matches the latest setVariables, skipping ST variable update.');\n    return;\n  } else if (latest_set_variables_message_id !== null && eventMesId > latest_set_variables_message_id) {\n    console.log('[Var]Event mesId is newer than setVariables mesId, updating ST variables.');\n    const newVariables = { ...chat_metadata.variables.tempVariables };\n    updateVariables(newVariables);\n\n    chat_metadata.variables.tempVariables = {};\n    console.log('[Var]TempVariables cleared.');\n  } else {\n    console.log('[Var]Event mesId is older than setVariables mesId, ignoring.');\n  }\n}\n\nfunction updateVariables(newVariables: Record<string, any>) {\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const currentVariables = chat_metadata.variables;\n\n  for (let key in newVariables) {\n    if (newVariables.hasOwnProperty(key)) {\n      currentVariables[key] = newVariables[key];\n    }\n  }\n\n  chat_metadata.variables = currentVariables;\n\n  saveMetadataDebounced();\n}\n\nexport const checkVariablesEvents = [event_types.CHARACTER_MESSAGE_RENDERED, event_types.USER_MESSAGE_RENDERED];\n","import { defaultAudioSettings, initAudioComponents } from '@/component/audio';\nimport {\n  destroyCharacterLevelOnExtension,\n  initializeCharacterLevelOnExtension,\n} from '@/component/character_level/index';\nimport {\n  destroyMacroOnExtension,\n  initializeMacroOnExtension,\n  registerAllMacros,\n  unregisterAllMacros,\n} from '@/component/macro';\nimport {\n  addCodeToggleButtonsToAllMessages,\n  addRenderingOptimizeSettings,\n  defaultIframeSettings,\n  initIframePanel,\n  partialRenderEvents,\n  removeRenderingOptimizeSettings,\n  renderAllIframes,\n  renderMessageAfterDelete,\n  renderPartialIframes,\n  tampermonkey_script,\n  viewport_adjust_script,\n} from '@/component/message_iframe';\nimport { initAutoSettings } from '@/component/script_repository';\nimport { iframe_client } from '@/iframe_client/index';\nimport { handleIframe } from '@/iframe_server/index';\nimport { checkVariablesEvents, clearTempVariables, shouldUpdateVariables } from '@/iframe_server/variables';\nimport { script_url } from '@/script_url';\nimport { initSlashEventEmit } from '@/slash_command/event';\nimport third_party from '@/third_party.html';\n\nimport { eventSource, event_types, reloadCurrentChat, saveSettingsDebounced, this_chid } from '@sillytavern/script';\nimport { extension_settings, renderExtensionTemplateAsync } from '@sillytavern/scripts/extensions';\nimport { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\nimport { SlashCommandNamedArgument } from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nexport const extensionName = 'JS-Slash-Runner';\nexport const extensionFolderPath = `third-party/${extensionName}`;\n\nlet isScriptLibraryOpen = false;\n\nconst defaultSettings = {\n  activate_setting: true,\n  render: {\n    ...defaultIframeSettings,\n  },\n  audio: {\n    ...defaultAudioSettings,\n  },\n};\n\nconst handleChatChanged = () => {\n  renderAllIframes();\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handlePartialRender = (mesId: string) => {\n  renderPartialIframes(mesId);\n};\n\nconst handleMessageDeleted = (mesId: string) => {\n  clearTempVariables();\n  renderMessageAfterDelete(mesId);\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handleVariableUpdated = (mesId: string) => {\n  shouldUpdateVariables(mesId);\n};\n\nasync function onExtensionToggle(userAction: boolean = true) {\n  const isEnabled = Boolean($('#activate_setting').prop('checked'));\n  if (userAction) {\n    extension_settings[extensionName].activate_setting = isEnabled;\n  }\n  if (isEnabled) {\n    script_url.set('iframe_client', iframe_client);\n    script_url.set('viewport_adjust_script', viewport_adjust_script);\n    script_url.set('tampermonkey_script', tampermonkey_script);\n\n    registerAllMacros();\n    initializeMacroOnExtension();\n    initializeCharacterLevelOnExtension();\n\n    // 重新注入前端卡优化的样式和设置\n    if (userAction && getSettingValue('render.rendering_optimize')) {\n      addRenderingOptimizeSettings();\n    }\n\n    window.addEventListener('message', handleIframe);\n\n    eventSource.on(event_types.CHAT_CHANGED, handleChatChanged);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.on(eventType, (mesId: string) => handlePartialRender(mesId));\n    });\n\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.on(eventType, (mesId: string) => handleVariableUpdated(mesId));\n    });\n    eventSource.on(event_types.MESSAGE_DELETED, (mesId: string) => handleMessageDeleted(mesId));\n\n    if (userAction) {\n      await renderAllIframes();\n    }\n  } else {\n    script_url.delete('iframe_client');\n    script_url.delete('viewport_adjust_script');\n    script_url.delete('tampermonkey_script');\n\n    unregisterAllMacros();\n    destroyMacroOnExtension();\n    destroyCharacterLevelOnExtension();\n\n    if (getSettingValue('render.rendering_optimize')) {\n      removeRenderingOptimizeSettings();\n    }\n\n    window.removeEventListener('message', handleIframe);\n\n    eventSource.removeListener(event_types.CHAT_CHANGED, handleChatChanged);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, (mesId: string) => handlePartialRender(mesId));\n    });\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, (mesId: string) => handleVariableUpdated(mesId));\n    });\n    eventSource.removeListener(event_types.MESSAGE_DELETED, (mesId: string) => handleMessageDeleted(mesId));\n    if (userAction && this_chid !== undefined) {\n      await reloadCurrentChat();\n    }\n  }\n  $('#js_slash_runner_text').text(getSettingValue('activate_setting') ? '关闭前端渲染' : '开启前端渲染');\n  saveSettingsDebounced();\n}\n\nfunction formatSlashCommands(): string {\n  const cmdList = Object.keys(SlashCommandParser.commands)\n    .filter(key => SlashCommandParser.commands[key].name === key) // exclude aliases\n    .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n    .map(key => SlashCommandParser.commands[key]);\n  const transform_arg = (arg: SlashCommandNamedArgument) => {\n    const transformers = {\n      name: (value: SlashCommandNamedArgument['name']) => ({ name: value }),\n      // description: (value: SlashCommandNamedArgument['description']) => ({ description: value }),\n      isRequired: (value: SlashCommandNamedArgument['isRequired']) => ({\n        is_required: value,\n      }),\n      defaultValue: (value: SlashCommandNamedArgument['defaultValue']) =>\n        value !== null ? { default_value: value } : {},\n      acceptsMultiple: (value: SlashCommandNamedArgument['acceptsMultiple']) => ({ accepts_multiple: value }),\n      enumList: (value: SlashCommandNamedArgument['enumList']) =>\n        value.length > 0 ? { enum_list: value.map(e => e.value) } : {},\n      typeList: (value: SlashCommandNamedArgument['typeList']) => (value.length > 0 ? { type_list: value } : {}),\n    };\n\n    return Object.entries(arg)\n      .filter(([_, value]) => value !== undefined)\n      .reduce(\n        (result, [key, value]) => ({\n          ...result,\n          // @ts-ignore\n          ...transformers[key]?.(value),\n        }),\n        {},\n      );\n  };\n  const transform_help_string = (help_string: string) => {\n    const content = $('<span>').html(help_string);\n    return content\n      .text()\n      .split('\\n')\n      .map(line => line.trim())\n      .filter(line => line !== '')\n      .join(' ');\n  };\n\n  return cmdList\n    .map(cmd => ({\n      name: cmd.name,\n      named_args: cmd.namedArgumentList.map(transform_arg) ?? [],\n      unnamed_args: cmd.unnamedArgumentList.map(transform_arg) ?? [],\n      return_type: cmd.returns ?? 'void',\n      help_string: transform_help_string(cmd.helpString) ?? 'NO DETAILS',\n    }))\n    .map(\n      cmd =>\n        `/${cmd.name}${cmd.named_args.length > 0 ? ` ` : ``}${cmd.named_args\n          .map(\n            arg =>\n              `[${arg.accepts_multiple ? `...` : ``}${arg.name}=${\n                arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n              }]${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n          )\n          .join(' ')}${cmd.unnamed_args.length > 0 ? ` ` : ``}${cmd.unnamed_args\n          .map(\n            arg =>\n              `(${arg.accepts_multiple ? `...` : ``}${\n                arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n              })${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n          )\n          .join(' ')} // ${cmd.help_string}`,\n    )\n    .join('\\n');\n}\n\n/**\n * 获取设置变量的值\n * @returns 设置变量的值\n */\nexport function getSettingValue(key: string) {\n  const keys = key.split('.');\n  let value = extension_settings[extensionName];\n\n  for (const k of keys) {\n    if (value === undefined || value === null) {\n      return undefined;\n    }\n    value = value[k];\n  }\n\n  return value;\n}\n\nfunction addQuickButton() {\n  const buttonHtml = $(`\n  <div id=\"js_slash_runner_container\" class=\"list-group-item flex-container flexGap5 interactable\">\n      <div class=\"fa-solid fa-puzzle-piece extensionsMenuExtensionButton\" /></div>\n      <span id=\"js_slash_runner_text\">${getSettingValue('activate_setting') ? '关闭前端渲染' : '开启前端渲染'}</span>\n  </div>`);\n  buttonHtml.css('display', 'flex');\n  $('#extensionsMenu').append(buttonHtml);\n  $('#js_slash_runner_container').on('click', function () {\n    const currentChecked = $('#activate_setting').prop('checked');\n    $('#activate_setting').prop('checked', !currentChecked);\n    onExtensionToggle(true);\n  });\n}\n/**\n * 初始化扩展面板\n */\njQuery(async () => {\n  const getContainer = () => $(document.getElementById('extensions_settings'));\n  const windowHtml = await renderExtensionTemplateAsync(`${extensionFolderPath}`, 'settings');\n  getContainer().append(windowHtml);\n\n  extension_settings[extensionName] = extension_settings[extensionName] || {};\n\n  if (\n    !extension_settings[extensionName] ||\n    !extension_settings[extensionName].render ||\n    !extension_settings[extensionName].audio\n  ) {\n    Object.assign(extension_settings[extensionName], defaultSettings);\n    saveSettingsDebounced();\n  }\n\n  $('#activate_setting').prop('checked', getSettingValue('activate_setting'));\n  $('#activate_setting').on('click', () => onExtensionToggle(true));\n  if (getSettingValue('activate_setting')) {\n    onExtensionToggle(false);\n  }\n\n  addQuickButton();\n\n  $('#scriptLibraryButton')\n    .off('click')\n    .on('click', function () {\n      isScriptLibraryOpen = !isScriptLibraryOpen;\n      $('#scriptLibraryPopup').slideToggle(200, 'swing');\n    });\n\n  $(document).on('mousedown touchstart', function (e) {\n    const clickTarget = $(e.target);\n\n    if (\n      isScriptLibraryOpen &&\n      clickTarget.closest('#scriptLibraryButton').length === 0 &&\n      clickTarget.closest('#scriptLibraryPopup').length === 0\n    ) {\n      $('#scriptLibraryPopup').slideUp(200, 'swing');\n      isScriptLibraryOpen = false;\n    }\n  });\n  $('#copy_third_party_installation').on('pointerup', function () {\n    navigator.clipboard.writeText(\n      'npm install --save-dev @types/file-saver @types/jquery @types/jqueryui @types/lodash @types/yamljs',\n    );\n    executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  });\n  $('#copy_third_party_tag').on('pointerup', function () {\n    navigator.clipboard.writeText(third_party);\n    executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  });\n\n  $('#download_slash_commands').on('click', function () {\n    const url = URL.createObjectURL(new Blob([formatSlashCommands()], { type: 'text/plain' }));\n    $(this).attr('href', url);\n    $(this).attr('download', 'slash_command.txt');\n    setTimeout(() => URL.revokeObjectURL(url), 0);\n  });\n  initAutoSettings();\n  initAudioComponents();\n  initSlashEventEmit();\n  initIframePanel();\n});\n","import { extract } from '@/util/helper';\n\nfunction createObjectURLFromScript(code: string): string {\n  return URL.createObjectURL(new Blob([code], { type: 'application/javascript' }));\n}\n\nclass ScriptUrl {\n  private map: Map<string, string> = new Map();\n\n  public get(name: string): string | undefined {\n    return this.map.get(name);\n  }\n  public set(name: string, code: string): void {\n    this.map.set(name, createObjectURLFromScript(code));\n  }\n  public delete(name: string): string | undefined {\n    const url = extract(this.map, name);\n    if (!url) {\n      return url;\n    }\n    URL.revokeObjectURL(url);\n    return url;\n  }\n}\n\nexport let script_url = new ScriptUrl();\n","import {\n  list_BGMS,\n  list_ambients,\n  onAudioEnabledClick,\n  playAudio,\n  updateAudio,\n  updateAudioSelect,\n} from '@/component/audio';\nimport { extensionName } from '@/index';\n\nimport { chat_metadata, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport {\n  ARGUMENT_TYPE,\n  SlashCommandArgument,\n  SlashCommandNamedArgument,\n} from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { commonEnumProviders, enumIcons } from '@sillytavern/scripts/slash-commands/SlashCommandCommonEnumsProvider';\nimport { SlashCommandEnumValue, enumTypes } from '@sillytavern/scripts/slash-commands/SlashCommandEnumValue';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\ninterface AudioElement extends HTMLElement {\n  pause(): void;\n}\n\n/**\n * 切换音频播放模式\n */\nexport async function audioMode(args: { type: string; mode: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const mode = args.mode.toLowerCase();\n\n  if (!['bgm', 'ambient'].includes(type) || !['repeat', 'random', 'single', 'stop'].includes(mode)) {\n    console.warn('WARN: Invalid arguments for /audiomode command');\n  }\n\n  if (type === 'bgm') {\n    extension_settings[extensionName].audio.bgm_mode = mode;\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_bgm_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_bgm_mode_icon').addClass(iconMap[mode]);\n  } else if (type === 'ambient') {\n    extension_settings[extensionName].audio.ambient_mode = mode;\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_ambient_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_ambient_mode_icon').addClass(iconMap[mode]);\n  }\n\n  saveSettingsDebounced();\n}\n\n/**\n * 切换播放器开关状态\n */\nexport async function audioEnable(args: { type: string; state?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const state = (args.state || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioenable command');\n  }\n\n  if (type === 'bgm') {\n    if (state === 'true') {\n      $('#enable_bgm').prop('checked', true);\n      await onAudioEnabledClick('bgm');\n    } else if (state === 'false') {\n      $('#enable_bgm').prop('checked', false);\n      await onAudioEnabledClick('bgm');\n    }\n  } else if (type === 'ambient') {\n    if (state === 'true') {\n      $('#enable_ambient').prop('checked', true);\n      await onAudioEnabledClick('ambient');\n    } else if (state === 'false') {\n      $('#enable_ambient').prop('checked', false);\n      await onAudioEnabledClick('ambient');\n    }\n  }\n}\n\n/**\n * 切换播放/暂停状态\n */\nexport async function audioPlay(args: { type: string; play?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioplaypause command');\n  }\n\n  if (type === 'bgm') {\n    if (play === 'true') {\n      await playAudio('bgm');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_bgm')[0] as AudioElement;\n      audioElement.pause();\n    }\n  } else if (type === 'ambient') {\n    if (play === 'true') {\n      await playAudio('ambient');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_ambient')[0] as AudioElement;\n      audioElement.pause();\n    }\n  }\n}\n\n/**\n * 导入音频链接\n */\nexport async function audioImport(args: { type: string; play?: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type || !url) {\n    console.warn('WARN: Missing arguments for /audioimport command');\n  }\n\n  const urlArray = url\n    .split(',')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '')\n    .filter((url: string, index: number, self: string[]) => self.indexOf(url) === index);\n  if (urlArray.length === 0) {\n    console.warn('WARN: Invalid or empty URLs provided.');\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n  const mergedUrls = [...new Set([...urlArray, ...existingUrls])];\n\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n  }\n\n  if (play === 'true' && urlArray[0]) {\n    const selectedUrl = urlArray[0];\n    if (type === 'bgm') {\n      extension_settings[extensionName].audio.bgm_selected = selectedUrl;\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      extension_settings[extensionName].audio.ambient_selected = selectedUrl;\n      await updateAudio('ambient', true);\n    }\n  }\n}\n\n/**\n * 选择并播放音频\n */\nexport async function audioSelect(args: { type: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n\n  if (!url) {\n    console.warn('WARN: Missing URL for /audioselect command');\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let playlist = type === 'bgm' ? list_BGMS : list_ambients;\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n\n  if (playlist && playlist.includes(url)) {\n    if (type === 'bgm') {\n      extension_settings[extensionName].audio.bgm_selected = url;\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      extension_settings[extensionName].audio.ambient_selected = url;\n      await updateAudio('ambient', true);\n    }\n  }\n\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n\n  const mergedUrls = [...new Set([url, ...existingUrls])];\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n    extension_settings[extensionName].audio.bgm_selected = url;\n    await updateAudio('bgm', true);\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n    extension_settings[extensionName].audio.ambient_selected = url;\n    await updateAudio('ambient', true);\n  }\n}\n\n/**\n * 初始化音频相关的 slash command\n */\nexport function initAudioSlashCommands() {\n  // 注册 audioselect 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioselect',\n      callback: audioSelect,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择播放器类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            选择并播放音频。如果音频链接不存在，则先导入再播放。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioselect type=bgm https://example.com/song.mp3</code></pre>\n                    选择并播放指定的音乐。\n                </li>\n                <li>\n                    <pre><code>/audioselect type=ambient https://example.com/sound.mp3</code></pre>\n                    选择并播放指定的音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioimport 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioimport',\n      callback: audioImport,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择导入类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'play',\n          description: '导入后是否立即播放第一个链接',\n          typeList: [ARGUMENT_TYPE.BOOLEAN],\n          defaultValue: 'true',\n          isRequired: false,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            导入音频或音乐链接，并决定是否立即播放，默认为自动播放。可批量导入链接，使用英文逗号分隔。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioimport type=bgm https://example.com/song1.mp3,https://example.com/song2.mp3</code></pre>\n                    导入 BGM 音乐并立即播放第一个链接。\n                </li>\n                <li>\n                    <pre><code>/audioimport type=ambient play=false url=https://example.com/sound1.mp3,https://example.com/sound2.mp3 </code></pre>\n                    导入音效链接 (不自动播放)。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioplay 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioplay',\n      callback: audioPlay,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'play',\n          '播放或暂停',\n          [ARGUMENT_TYPE.STRING],\n          true,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的播放与暂停。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioplay type=bgm</code></pre>\n                    播放当前音乐。\n                </li>\n                <li>\n                    <pre><code>/audioplay type=ambient play=false</code></pre>\n                    暂停当前音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioenable 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioenable',\n      callback: audioEnable,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'state',\n          '打开或关闭播放器',\n          [ARGUMENT_TYPE.STRING],\n          false,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的开启与关闭。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioenable type=bgm state=true</code></pre>\n                    打开音乐播放器。\n                </li>\n                <li>\n                    <pre><code>/audioenable type=ambient state=false</code></pre>\n                    关闭音效播放器。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n\n  // 注册 audiomode 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audiomode',\n      callback: audioMode,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'mode',\n          description: '选择播放模式',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('repeat', null, enumTypes.enum, enumIcons.loop),\n            new SlashCommandEnumValue('random', null, enumTypes.enum, enumIcons.shuffle),\n            new SlashCommandEnumValue('single', null, enumTypes.enum, enumIcons.redo),\n            new SlashCommandEnumValue('stop', null, enumTypes.enum, enumIcons.stop),\n          ],\n          isRequired: true,\n        }),\n      ],\n      helpString: `\n        <div>\n            设置音频播放模式。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=repeat</code></pre>\n                    设置音乐为循环播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=random</code></pre>\n                    设置音效为随机播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=single</code></pre>\n                    设置音乐为单曲循环模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=stop</code></pre>\n                    设置音效为停止播放模式。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n}\n","import { eventSource } from '@sillytavern/script';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport { ARGUMENT_TYPE, SlashCommandNamedArgument } from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nexport async function slashEventEmit(named_args: any): Promise<any> {\n  const event: string = named_args.event;\n  const data: string[] = named_args.data ?? [];\n\n  eventSource.emit(event, ...data);\n\n  console.info(`[Event][/event-emit] 发送 '${event}' 事件, 携带数据: ${JSON.stringify(data)}`);\n\n  return event;\n}\n\nexport function initSlashEventEmit() {\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'event-emit',\n      callback: slashEventEmit,\n      returns: '发送的事件名称',\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'event',\n          description: '事件名称',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'data',\n          description: '要传输的数据',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: false,\n          acceptsMultiple: true,\n        }),\n      ],\n      unnamedArgumentList: [],\n      helpString: `\n    <div>\n        发送 \\`event\\` 事件, 同时可以发送一些数据.\n        所有正在监听该消息频道的 listener 函数都会自动运行, 并能用函数参数接收发送来的数据.\n        由于酒馆 STScript 输入方式的局限性, 所有数据将会以字符串 string 类型接收; 如果需要 number 等类型, 请自行转换.\n    </div>\n    <div>\n        <strong>Example:</strong>\n        <ul>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"读档\"</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"存档\" data={{getvar::数据}} data=8 data=你好 {{user}}</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"随便什么名称\" data=\"这是一个 数据\" data={{user}}</code></pre>\n            </li>\n        </ul>\n    </div>\n  `,\n    }),\n  );\n}\n","// Module\nvar code = `<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\"\n    integrity=\"sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==\"\n    crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/themes/base/jquery-ui.min.css\"\n    integrity=\"sha512-TFee0335YRJoyiqz8hA8KV3P0tXa5CpRBSoM0Wnkn7JoJx1kaq1yXL/rb8YFpWXkMOjRcv5txv+C6UluttluCQ==\"\n    crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js\"\n    integrity=\"sha512-Qlv6VSKh1gDKGoJbnyA5RMXYcvnpIqhO++MhIM2fStMcGT9i2T//tSwYFlcyoRRDcDZ+TYHpH8azBBCyhpSeqw==\"\n    crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}>\n${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\"\n    integrity=\"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\"\n    crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}>\n${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js\"\n    integrity=\"sha512-MSOo1aY+3pXCOCdGAYoBZ6YGI0aragoQsg1mKKBHXCYPIWxamwOE7Drh+N5CPgGI5SA9IEKJiPjdfqWFWmZtRA==\"\n    crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}>\n${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js\"\n    integrity=\"sha512-WFN04846sdKMIP5LKNphMaWzU7YpMyCU245etK3g/2ARYbPK9Ub18eG+ljU96qKRCWh+quCY7yefSmlkQw1ANQ==\"\n    crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}>\n${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/yamljs/0.3.0/yaml.min.js\"\n    integrity=\"sha512-f/K0Q5lZ1SrdNdjc2BO2I5kTx8E5Uw1EU3PhSUB9fYPohap5rPWEmQRCjtpDxNmQB4/+MMI/Cf+nvh1VSiwrTA==\"\n    crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}>\n`;\n// Exports\nexport default code;","import { SetMultimap } from '@/util/multimap';\n\nexport function partition<T>(array: T[], predicate: (item: T) => boolean): [T[], T[]] {\n  return array.reduce(\n    ([pass, fail], item) => {\n      if (predicate(item)) {\n        pass.push(item);\n      } else {\n        fail.push(item);\n      }\n      return [pass, fail];\n    },\n    [[], []] as [T[], T[]],\n  );\n}\n\nexport function set_or_add<K1, K2, V>(map: Map<K1, SetMultimap<K2, V>>, k1: K1, k2: K2, v: V): boolean {\n  if (map.has(k1)) {\n    // @ts-ignore 2532\n    map.get(k1).put(k2, v);\n    return false;\n  }\n\n  map.set(k1, new SetMultimap([[k2, v]]));\n  return true;\n}\n\nexport function try_set<K, V>(map: Map<K, V>, key: K, value: V): boolean {\n  if (map.has(key)) {\n    return false;\n  }\n  map.set(key, value);\n  return true;\n}\n\nexport function get_or_set<K, V>(map: Map<K, V>, key: K, defaulter: () => V): V {\n  const existing_value = map.get(key);\n  if (existing_value) {\n    return existing_value;\n  }\n  const default_value = defaulter();\n  map.set(key, default_value);\n  return default_value;\n}\n\nexport function extract<K, V>(map: Map<K, V>, key: K): V | undefined {\n  const value = map.get(key);\n  if (!value) {\n    return undefined;\n  }\n  map.delete(key);\n  return value;\n}\n\nexport function with_fallback<T extends Object>(data: Partial<T>, fallback: T): T {\n  const result = { ...fallback };\n  for (const key in data) {\n    if (data[key] !== undefined) {\n      result[key] = data[key];\n    }\n  }\n  return result;\n}\n","import { getCharacterRegexes, getGlobalRegexes, isCharacterTavernRegexEnabled } from '@/iframe_server/tavern_regex';\n\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\n\nexport interface Script {\n  name: string;\n  code: string;\n}\n\nexport function loadScripts(prefix: string): Script[] {\n  const filterScriptFromRegex = (script: RegexScriptData) =>\n    script.scriptName.replace(/^【.*】/, '').startsWith(prefix);\n  const isEnabled = (script: RegexScriptData) => !script.disabled;\n  const toName = (script: RegexScriptData) => script.scriptName.replace(/^【.*】/, '').replace(prefix, '');\n\n  let scripts: RegexScriptData[] = [];\n\n  const enabled_global_regexes = getGlobalRegexes().filter(filterScriptFromRegex).filter(isEnabled);\n  scripts.push(...enabled_global_regexes);\n\n  const enabled_character_regexes = getCharacterRegexes()\n    .filter(filterScriptFromRegex)\n    .filter(isEnabled)\n    .filter(script => (isCharacterTavernRegexEnabled() ? true : script.runOnEdit));\n  scripts.push(...enabled_character_regexes);\n\n  const to_script = (script: RegexScriptData) => ({ name: toName(script), code: script.replaceString });\n  return scripts.map(to_script);\n}\n\nexport function is_equal_scripts(lhs: Script[], rhs: Script[]): boolean {\n  if (lhs === rhs) {\n    return true;\n  }\n  if (lhs == null || rhs == null) {\n    return false;\n  }\n  if (lhs.length !== rhs.length) {\n    return false;\n  }\n\n  for (let i = 0; i < lhs.length; i++) {\n    if (lhs[i].name !== rhs[i].name && lhs[i].code !== rhs[i].code) {\n      return false;\n    }\n  }\n  return true;\n}\n","abstract class Multimap<K, V, I extends Iterable<V>> implements Iterable<[K, V]> {\n  private size_ = 0;\n  private map: Map<K, I> = new Map();\n  private operator: CollectionOperator<V, I>;\n\n  constructor(operator: CollectionOperator<V, I>, iterable?: Iterable<[K, V]>) {\n    this.operator = operator;\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.put(key, value);\n      }\n    }\n    return this;\n  }\n\n  abstract get [Symbol.toStringTag](): string;\n\n  get size(): number {\n    return this.size_;\n  }\n\n  get(key: K): I {\n    const values = this.map.get(key);\n    if (values) {\n      return this.operator.clone(values);\n    } else {\n      return this.operator.create();\n    }\n  }\n\n  put(key: K, value: V): boolean {\n    let values = this.map.get(key);\n    if (!values) {\n      values = this.operator.create();\n    }\n    if (!this.operator.add(value, values)) {\n      return false;\n    }\n    this.map.set(key, values);\n    this.size_++;\n    return true;\n  }\n\n  putAll(key: K, values: I): boolean;\n  putAll(multimap: Multimap<K, V, I>): boolean;\n  putAll(arg1: K | Multimap<K, V, I>, arg2?: I): boolean {\n    let pushed = 0;\n    if (arg2) {\n      const key = arg1 as K;\n      const values = arg2;\n      for (const value of values) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else if (arg1 instanceof Multimap) {\n      for (const [key, value] of arg1.entries()) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else {\n      throw new TypeError('unexpected arguments');\n    }\n    return pushed > 0;\n  }\n\n  has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  hasEntry(key: K, value: V): boolean {\n    return this.operator.has(value, this.get(key));\n  }\n\n  delete(key: K): boolean {\n    this.size_ -= this.operator.size(this.get(key));\n    return this.map.delete(key);\n  }\n\n  deleteEntry(key: K, value: V): boolean {\n    const current = this.get(key);\n    if (!this.operator.delete(value, current)) {\n      return false;\n    }\n    this.map.set(key, current);\n    this.size_--;\n    return true;\n  }\n\n  clear(): void {\n    this.map.clear();\n    this.size_ = 0;\n  }\n\n  keys(): IterableIterator<K> {\n    return this.map.keys();\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<[K, V]> {\n      for (const [key, values] of self.map.entries()) {\n        for (const value of values) {\n          yield [key, value];\n        }\n      }\n    }\n    return gen();\n  }\n\n  values(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<V> {\n      for (const [, value] of self.entries()) {\n        yield value;\n      }\n    }\n    return gen();\n  }\n\n  forEach<T>(callback: (this: T | this, value: V, key: K, map: this) => void, thisArg?: T): void {\n    for (const [key, value] of this.entries()) {\n      callback.call(thisArg === undefined ? this : thisArg, value, key, this);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  asMap(): Map<K, I> {\n    const ret = new Map<K, I>();\n    for (const key of this.keys()) {\n      ret.set(key, this.operator.clone(this.get(key)));\n    }\n    return ret;\n  }\n}\n\ninterface CollectionOperator<V, I> {\n  create(): I;\n  clone(collection: I): I;\n  add(value: V, collection: I): boolean;\n  size(collection: I): number;\n  delete(value: V, collection: I): boolean;\n  has(value: V, collection: I): boolean;\n}\n\nexport class ArrayMultimap<K, V> extends Multimap<K, V, V[]> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new ArrayOperator(), iterable);\n  }\n\n  get [Symbol.toStringTag](): string {\n    return 'ArrayMultimap';\n  }\n}\n\nclass ArrayOperator<V> implements CollectionOperator<V, V[]> {\n  create(): V[] {\n    return [];\n  }\n\n  clone(collection: V[]): V[] {\n    return collection.slice();\n  }\n\n  add(value: V, collection: V[]): boolean {\n    collection.push(value);\n    return true;\n  }\n\n  size(collection: V[]): number {\n    return collection.length;\n  }\n\n  delete(value: V, collection: V[]): boolean {\n    const index = collection.indexOf(value);\n    if (index > -1) {\n      collection.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n  has(value: V, collection: V[]): boolean {\n    return collection.includes(value);\n  }\n}\n\nexport class SetMultimap<K, V> extends Multimap<K, V, Set<V>> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new SetOperator(), iterable);\n  }\n  get [Symbol.toStringTag](): string {\n    return 'SetMultimap';\n  }\n}\n\nclass SetOperator<V> implements CollectionOperator<V, Set<V>> {\n  create(): Set<V> {\n    return new Set();\n  }\n  clone(collection: Set<V>): Set<V> {\n    return new Set(collection);\n  }\n  add(value: V, collection: Set<V>): boolean {\n    const prev = collection.size;\n    collection.add(value);\n    return prev !== collection.size;\n  }\n  size(collection: Set<V>): number {\n    return collection.size;\n  }\n  delete(value: V, collection: Set<V>): boolean {\n    return collection.delete(value);\n  }\n  has(value: V, collection: Set<V>): boolean {\n    return collection.has(value);\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__script_js_588e7203__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__;","module.exports = __WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n"],"names":["findChar","name","allowAvatar","insensitive","filteredByTags","preferCurrentChar","quiet","matches","char","avatar","equalsIgnoreCaseAndAccents","filteredCharacters","characters","filter","charTags","getTagsList","every","tagName","some","x","currentChars","selected_group","groups","find","group","id","members","map","member","this_chid","preferredCharSearch","length","console","warn","toastr","warning","characterByAvatar","matchingCharacters","list_BGMS","list_ambients","bgmEnded","ambientEnded","cooldownBGM","defaultAudioSettings","audio_setting","bgm_enabled","ambient_enabled","bgm_mode","bgm_muted","bgm_volume","bgm_selected","bgm_current_time","ambient_mode","ambient_muted","ambient_volume","ambient_selected","ambient_current_time","audio_cooldown","async","updateAudio","type","isUserInput","extension_settings","extensionName","audio","audioEnded","audioSelector","$","attr","audio_url","playlist","getAudioUrl","getNextFileByMode","cleanAudioSrc","src","split","cleanAudioUrl","decodeURIComponent","load","Promise","resolve","canPlayHandler","removeEventListener","readyState","HTMLMediaElement","HAVE_ENOUGH_DATA","addEventListener","playAudio","audioUrlWithCacheBusting","getAudioUrlWithCacheBusting","selectElement","val","saveSettingsDebounced","updateAudioSelect","empty","audioList","selectedSetting","includes","Array","isArray","file","trim","forEach","fileLabel","replace","append","Option","log","toUpperCase","typeKey","chat_metadata","variables","originalUrl","cacheBuster","Date","getTime","separator","mode","currentFile","filteredPlaylist","Math","floor","random","toggleAudioControls","status","shouldEnable","prop","onAudioEnabledClick","enabled","pause","initAudioEventListeners","on","initializeProgressBar","$audioElement","$progressSlider","isNaN","this","duration","progressPercent","currentTime","remainingTime","isFadingOut","fadeStep","volume","fadeOutInterval","setInterval","max","clearInterval","targetVolume","fadeInInterval","min","value","onVolumeSliderWheelEvent","e","slider","preventDefault","stopPropagation","delta","deltaY","newVal","Number","trigger","handleLongPress","volumeControlId","iconId","$volumeControl","$icon","pressTimer","isMobile","setTimeout","css","clearTimeout","document","event","is","target","has","refreshAudioResources","openUrlManagerPopup","urlManager","renderExtensionTemplateAsync","extensionFolderPath","prepend","savedAudioUrl","urlTemplate","urlValue","addClass","error","updatedUrls","renderUrl","container","url","urlHtml","clone","fileName","parts","text","currentUrl","inputUrl","callGenericPopup","POPUP_TYPE","INPUT","newFileName","pop","newId","CONFIRM","remove","newUrls","input","debug","urlArray","from","Set","openUrlImportPopup","removeClass","sortable","delay","getSortableDelay","handle","stop","okButton","cancelButton","newUrlList","each","push","currentBgmUrl","currentAmbientUrl","saveMetadataDebounced","onEnabledClick","isEnabled","bgmUrl","ambientUrl","bgmAudioElement","play","Error","ambientAudioElement","activate_setting","audioElement","playPauseIcon","code","selectedAudio","onAudioModeClick","modes","icon","nextModeIndex","findIndex","m","onAudioSelectChange","onAudioCooldownInput","onAudioVolumeChange","onAudioMuteClick","toggleClass","togglePlayPause","paused","initAudioStyles","hide","initAudioComponents","audio_enabled","audioTypes","events","selector","handler","bindTypeEvents","volumeSlider","get","passive","urlManagerMap","bgm","ambient","bgmAudio","ambientAudio","togglePlayPauseIcon","iconSelector","initAudioSlashCommands","eventSource","event_types","CHAT_CHANGED","$bgmPlayer","$ambientPlayer","load_events","app_ready","initializeCharacterLevelOnExtension","register_events","eventType","makeFirst","initialize","once","APP_READY","destroyCharacterLevelOnExtension","removeListener","destroy","libraries_text","libraries","loadScripts","info","JSON","stringify","library","script","join","script_map","Map","size","iframe","_","clear","scripts","load_promises","load_promise","createElement","style","display","srcdocContent","script_url","srcdoc","onload","body","appendChild","makeScriptIframe","set","allSettled","predefinedMacros","getUserAvatarPath","getCharAvatarPath","registerMacro","key","MacrosParser","registerAllMacros","entries","unregisterMacro","unregisterAllMacros","keys","demacro","event_data","get_global_variable","global","get_chat_variable","get_message_variable","chat","message","undefined","swipe_id","at","messages","content","replaceAll","_substring","path","initializeMacroOnExtension","CHAT_COMPLETION_PROMPT_READY","destroyMacroOnExtension","tampermonkeyMessageListener","renderingOptimizeEnabled","iframeResizeObservers","originalHighlightElement","hljs","highlightElement","RENDER_MODES","FULL","PARTIAL","partialRenderEvents","CHARACTER_MESSAGE_RENDERED","USER_MESSAGE_RENDERED","MESSAGE_UPDATED","MESSAGE_SWIPED","defaultIframeSettings","auto_enable_character_regex","auto_disable_incompatible_options","tampermonkey_compatibility","process_depth","rendering_optimize","charsPath","user_avatar","thumbnailPath","getThumbnailUrl","targetAvatarImg","substring","lastIndexOf","clearAndRenderAllIframes","clearAllIframe","reloadCurrentChat","renderAllIframes","renderMessagesInIframes","renderPartialIframes","mesId","processDepth","parseInt","totalMessages","getContext","depthOffset","viewport_adjust_script","tampermonkey_script","processVhUnits","htmlContent","test","viewportHeight","window","innerHeight","expression","specificMesId","getSettingValue","context","depthLimit","depthLimitedMessageIds","slice","messagesToRenderIds","messagesToCancelIds","specificIdNum","messageId","$iframes","all","toArray","destroyIframe","updateMessageBlock","addCodeToggleButtons","renderedMessages","$messageElement","$codeElements","iframeCounter","extractedText","extractTextFromCode","disableLoading","hasMinVh","$wrapper","position","width","$iframe","loading","margin","border","loadingTimeout","$loadingOverlay","html","$loadingText","render","observeIframeContent","parent","contentWindow","postMessage","request","newHeight","emitAndWait","off","replaceWith","docBody","iframeId","resizeObserver","adjustIframeHeight","ResizeObserver","observe","cleanup","disconnect","delete","iframeDoc","contents","$clone","removeData","hasOwnProperty","removeAllListeners","cache","arr","i","fill","gc","handleTampermonkeyMessages","data","buttonName","$sendTextarea","jQuery","$sendButton","doc","bodyHeight","offsetHeight","htmlHeight","documentElement","currentHeight","parseFloat","abs","codeElement","textContent","nodeType","Node","TEXT_NODE","ELEMENT_NODE","renderMessageAfterDelete","maxRemainId","hasCodeBlock","toString","onTampermonkeyCompatibilityChange","Boolean","currentPlayingIframeId","newIframeId","createGlobalAudioManager","onDepthInput","handlePartialRender","injectLoadingStyles","styleSheet","injectCodeBlockHideStyles","styleId","getElementById","setAttribute","head","innerHTML","addToggleButtonsToMessage","$mesText","$pre","$toggleButton","$tooltip","show","before","after","addCodeToggleButtonsToAllMessages","$chat","addRenderingOptimizeSettings","element","removeRenderingOptimizeSettings","renderingOptimizationChange","userInput","initIframePanel","tampermonkeyEnabled","autoEnableCharacterRegex","character_allowed_regex","registerAutoEnableCharacterRegex","unregisterAutoEnableCharacterRegex","onAutoEnableCharacterRegexClick","autoDisableIncompatibleOptions","power_user","auto_fix_generated_markdown","trim_sentences","forbid_external_media","registerAutoDisableIncompatibleOptions","unregisterAutoDisableIncompatibleOptions","onAutoDisableIncompatibleOptions","initAutoSettings","iframe_client","getIframeName","source","frameElement","getLogPrefix","iframe_handlers","registerIframeHandler","registerIframeAudioHandler","audioMode","state","audioEnable","audioPlay","audioImport","audioSelect","Character","charData","constructor","characterData","currentChar","findCharacterIndex","matchTypes","a","b","startsWith","exactAvatarMatch","matchType","index","toLowerCase","getChatsFromFiles","isGroupChat","chat_dict","chat_promise","Object","values","sort","localeCompare","reverse","file_name","res","_rej","ch_name","avatar_url","endpoint","requestBody","chatResponse","fetch","method","headers","getRequestHeaders","ok","currentChat","json","shift","getCardData","getAvatarId","getRegexScripts","extensions","regex_scripts","getCharacterBook","character_book","getWorldName","world","registerIframeCharacterHandler","createCharacterHandler","defaultValue","logMessage","displayName","result","callback","character","withCharacter","logText","then","resolvedResult","catch","_event","_result","getPastCharacterChats","registerIframeChatMessageHandler","range_demacroed","substituteParamsExtended","range","stringToRange","option","role","hide_state","start","end","process_message","message_id","chat_message","extra","system_message_types","NARRATOR","is_user","is_system","swipes","mes","swipes_data","is_hidden","is_system_or_hidden","promises","chat_messages","field_values","refresh","swipe_id_previous_index","swipe_id_to_set_index","swipe_id_to_use_index","should_update_swipe","swipe_info","add_swipes_if_required","message_demacroed","emit","update_chat_message","mes_html","messageFormatting","update_partial_html","saveChatConditional","registerIframeDisplayedMessageHandler","last_message_id","getLastMessageId","last_user_message_id","last_char_message_id","registerIframeFrontendVersionHandler","response","statusText","t","timeOut","isUpToDate","success","shortCommitHash","abortController","AbortController","fromOverrides","overrides","world_info_before","persona_description","char_description","char_personality","scenario","world_info_after","dialogue_examples","with_depth_entries","chat_history","author_note","prompts","fromInjectionPrompt","inject","before_prompt","in_chat","after_prompt","none","depth","scan","should_scan","dryRun","character_names_behavior","NONE","DEFAULT","COMPLETION","CONTENT","roleTypes","system","extension_prompt_roles","SYSTEM","user","USER","assistant","ASSISTANT","default_order","StreamingProcessor","generator","stoppingStrings","isStopped","isFinished","messageBuffer","nullStreamingGeneration","onProgressStreaming","isFinal","newText","processedText","cleanUpMessage","charsToBalance","isOdd","countOccurrences","trimEnd","fullText","onErrorStreaming","abort","unblockGeneration","generate","sw","Stopwatch","streaming_fps","timestamps","now","tick","seconds","toFixed","err","iframeGenerate","user_input","use_preset","image","max_chat_history","order","stream","processedUserInput","oai_settings","send_if_empty","getRegexedString","regex_placement","USER_INPUT","isPrompt","processUserInput","substituteParams","baseData","config","getOverrideContent","identifier","isPromptFiltered","depthPromptText","baseChatReplace","depth_prompt","prompt","name1","name2","depthPromptDepth","depthPromptRole","getExtensionPromptRoleByName","setExtensionPrompt","extension_prompt_types","IN_CHAT","note","allowWIScan","handleCharDepthPrompt","authorNoteOverride","NOTE_MODULE_NAME","metadata_keys","setAuthorNotePrompt","description","INJECT_TAG","IN_PROMPT","persona_description_position","persona_description_positions","BOTTOM_AN","TOP_AN","shouldWIAddPrompt","originalAN","extensionPrompts","ANWithDesc","AT_DEPTH","persona_description_depth","persona_description_role","setPersonaDescriptionExtensionPrompt","rawDescription","personality","rawPersonality","persona","rawPersona","rawScenario","mesExamples","rawMesExamples","jailbreak","getCharacterCardFields","mesExamplesArray","parseMesExamples","oaiMessageExamples","setOpenAIMessageExamples","promptBias","getBiasStrings","promptConfig","injects","positionMap","BEFORE_PROMPT","validatedInject","handleInjectedPrompts","oaiMessages","setOpenAIMessages","coreChat","chatItem","regexType","AI_OUTPUT","regexedMessage","processChatHistory","userContent","worldInfo","chatForWI","world_info_include_names","this_max_context","getMaxContextSize","worldInfoString","worldInfoBefore","worldInfoAfter","worldInfoExamples","worldInfoDepth","getWorldInfoPrompt","clearInjectionPrompts","entry","joinedEntries","processWorldInfoDepth","finalWorldInfoBefore","finalWorldInfoAfter","processWorldInfo","removeTemporaryUserMessage","example","cleanedExample","wi_anchor_position","unshift","processMessageExamples","characterInfo","chatContext","prepareAndOverrideData","generate_data","originalScenario","scenarioOverride","userMessageTemp","convertFileToBase64","messageData","charDescription","charPersonality","Scenario","bias","quietPrompt","quietImage","cyclePrompt","systemPromptOverride","jailbreakPromptOverride","personaDescription","messageExamples","prepareOpenAIMessages","handlePresetPath","chatCompletion","ChatCompletion","setTokenBudget","openai_max_context","openai_max_tokens","reserveBudget","orderArray","reduce","acc","item","systemPrompts","promptCollection","PromptCollection","examplesCollection","MessageCollection","customPrompts","add","Prompt","system_prompt","characterPrompts","dialogue","dialogueIndex","indexOf","chatMessages","promptIndex","chatMessage","Message","createAsync","setName","convertSystemPromptsToCollection","addToChatCompletionInOrder","collection","fromPromptAsync","dialogue_examplesIndex","userInputMessage","chatHistoryIndex","userInputIndex","hasUserInput","hasChatHistory","isChatHistoryFiltered","userMessage","addImage","insertIndex","chatCollection","newChat","new_chat_prompt","newChatMessage","lastChatPrompt","emptyMessage","canAfford","userPrompt","customInjects","processedMessages","totalInsertedMessages","injectionPrompts","authorsNote","getPromptRole","injection_depth","injected","MAX_INJECTION_DEPTH","depthPrompts","roles","roleMessages","rolePrompts","injectIdx","splice","populationInjectionPrompts","imageInlining","isImageInliningSupported","chatPool","chatPrompt","promptManager","setupChatCompletionPromptManager","serviceSettings","names_behavior","messageName","isValidName","sanitizeName","freeBudget","processChatHistoryAndInject","squash_system_messages","squashSystemMessages","getChat","handleCustomPath","useStream","deactivateSendButtons","originalStreamSetting","stream_openai","streamingProcessor","sendOpenAIRequest","signal","preventDuplicates","choices","tool_plan","extractMessageFromData","handleResponse","generateResponse","examplesStr","block","activateSendButtons","showSwipeButtons","setGenerationProgress","flushEphemeralStoppingStrings","prefixes","prefix","File","getBase64Async","promptId","override","registerIframeGenerateHandler","iframe_name","converted_config","should_stream","fromGenerateConfig","ordered_prompts","fromGenerateRawConfig","stopGeneration","handleIframe","stack","uid","targetOrigin","registerIframeLorebookEntryHandler","registerIframeLorebookHandler","registerIframeSlashHandler","registerIframeTavernRegexHandler","registerIframeUtilHandler","registerIframeVariableHandler","lorebook_settings","selected_global_lorebooks","world_info_settings","getWorldInfoSettings","world_info","globalSelect","scan_depth","world_info_depth","context_percentage","world_info_budget","budget_cap","world_info_budget_cap","min_activations","world_info_min_activations","max_depth","world_info_min_activations_depth_max","max_recursion_steps","world_info_max_recursion_steps","insertion_strategy","world_info_character_strategy","include_names","recursive","world_info_recursive","case_sensitive","world_info_case_sensitive","match_whole_words","world_info_match_whole_words","use_group_scoring","world_info_use_group_scoring","overflow_alert","world_info_overflow_alert","settings","inexisting_lorebooks","lorebook","world_names","for_eachs","selected_world_info","saveSettings","converted_value","evenly","character_first","global_first","field","assignPartialLorebookSettings","filename","books","primary","additional","extraCharLore","charLore","extraBooks","lorebooks","getCharaFilename","previous_primary","String","parse","form_data","FormData","raw_file","converted_file","ensureImageFormatSupported","chid","alternate_greetings","getOneCharacter","editCurrentCharacter","setWorldInfoButtonClass","char_lore","existing_char_index","assign","saveCharacterDebounced","deleteWorldInfo","createNewWorldInfo","interactive","toLorebookEntry","display_index","displayIndex","comment","disable","constant","vectorized","probability","logic","selectiveLogic","keysecondary","scanDepth","caseSensitive","matchWholeWords","useGroupScoring","automation_id","automationId","exclude_recursion","excludeRecursion","prevent_recursion","preventRecursion","delay_until_recursion","delayUntilRecursion","group_prioritized","groupOverride","group_weight","groupWeight","sticky","cooldown","fromPartialLorebookEntry","transformers","before_character_definition","after_character_definition","before_example_messages","after_example_messages","before_author_note","after_author_note","at_depth_as_system","at_depth_as_user","at_depth_as_assistant","and_any","and_all","not_any","not_all","assignFieldValuesToWiEntry","wi_entry","original_wi_mapped_key","originalWIDataKeyMap","setWIOriginalDataValue","reloadEditorDebounced","debounce","currentIndex","selectedIndex","loadWorldInfo","expected_value","entry_value","saveWorldInfo","createWorldInfoEntry","partial_lorebook_entry","lorebook_uid","deleted","deleteWIOriginalDataValue","command","executeSlashCommandsWithOptions","isError","errorMessage","pipe","isCharacterTavernRegexEnabled","getGlobalRegexes","regex","getCharacterRegexes","toTavernRegex","regex_script_data","scope","script_name","scriptName","disabled","run_on_edit","runOnEdit","find_regex","findRegex","replace_string","replaceString","placement","ai_output","slash_command","SLASH_COMMAND","WORLD_INFO","destination","markdownOnly","promptOnly","min_depth","minDepth","maxDepth","fromTavernRegex","tavern_regex","trimStrings","substituteRegex","enable_state","regexes","emptied_regexes","global_regexes","character_regexes","partition","writeExtensionField","text_demacroed","latest_set_variables_message_id","metadata","getVariablesByType","latest_message_id","tempVariables","currentVariables","newValue","clearTempVariables","shouldUpdateVariables","eventMesId","newVariables","updateVariables","checkVariablesEvents","isScriptLibraryOpen","defaultSettings","handleChatChanged","handleMessageDeleted","handleVariableUpdated","onExtensionToggle","userAction","MESSAGE_DELETED","formatSlashCommands","cmdList","SlashCommandParser","commands","transform_arg","arg","isRequired","is_required","default_value","acceptsMultiple","accepts_multiple","enumList","enum_list","typeList","type_list","cmd","named_args","namedArgumentList","unnamed_args","unnamedArgumentList","return_type","returns","help_string","helpString","line","k","windowHtml","buttonHtml","currentChecked","addQuickButton","slideToggle","clickTarget","closest","slideUp","navigator","clipboard","writeText","URL","createObjectURL","Blob","revokeObjectURL","initSlashEventEmit","createObjectURLFromScript","extract","args","iconMap","repeat","single","self","existingUrls","mergedUrls","selectedUrl","addCommandObject","SlashCommand","fromProps","SlashCommandNamedArgument","ARGUMENT_TYPE","STRING","SlashCommandEnumValue","enumTypes","enum","enumIcons","SlashCommandArgument","BOOLEAN","commonEnumProviders","boolean","loop","shuffle","redo","slashEventEmit","array","predicate","pass","fail","set_or_add","k1","k2","v","put","SetMultimap","try_set","get_or_set","defaulter","existing_value","with_fallback","fallback","filterScriptFromRegex","toName","enabled_global_regexes","enabled_character_regexes","is_equal_scripts","lhs","rhs","Multimap","size_","operator","iterable","create","putAll","arg1","arg2","pushed","TypeError","hasEntry","deleteEntry","current","gen","thisArg","call","Symbol","iterator","asMap","ret","ArrayMultimap","super","ArrayOperator","toStringTag","SetOperator","prev","module","exports","__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__","__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__","__WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__","__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__","__WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__","__WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__","__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__","__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__","__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__","__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__","__WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__","__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__","__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","o","defineProperty","enumerable","obj","prototype","r","__webpack_exports__"],"sourceRoot":""}