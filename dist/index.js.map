{"version":3,"file":"index.js","mappings":"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","sources":["webpack://JS-Slash-Runner/webpack/bootstrap","webpack://JS-Slash-Runner/webpack/runtime/define property getters","webpack://JS-Slash-Runner/webpack/runtime/hasOwnProperty shorthand","webpack://JS-Slash-Runner/external module \"../../../../../script.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommand.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandArgument.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandCommonEnumsProvider.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandEnumValue.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandParser.js\"","webpack://JS-Slash-Runner/./src/slash_command/audio.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/popup.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/RossAscends-mods.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/utils.js\"","webpack://JS-Slash-Runner/./src/component/audio.ts","webpack://JS-Slash-Runner/./src/iframe_server/_impl.ts","webpack://JS-Slash-Runner/./src/util/multimap.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions/regex/engine.js\"","webpack://JS-Slash-Runner/./src/iframe_server/tavern_regex.ts","webpack://JS-Slash-Runner/./src/util/load_script.ts","webpack://JS-Slash-Runner/./src/component/character_level/library.ts","webpack://JS-Slash-Runner/./src/script_url.ts","webpack://JS-Slash-Runner/./src/util/helper.ts","webpack://JS-Slash-Runner/./src/third_party.html","webpack://JS-Slash-Runner/./src/component/character_level/script_iframe.ts","webpack://JS-Slash-Runner/./src/component/character_level/index.ts","webpack://JS-Slash-Runner/./src/component/message_iframe.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/macros.js\"","webpack://JS-Slash-Runner/./src/component/macro.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/group-chats.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/power-user.js\"","webpack://JS-Slash-Runner/./src/component/script_repository.ts","webpack://JS-Slash-Runner/./src/iframe_client/index.ts","webpack://JS-Slash-Runner/./src/iframe_server/character.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/i18n.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/authors-note.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/openai.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/PromptManager.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/world-info.js\"","webpack://JS-Slash-Runner/./src/iframe_server/generate.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/tags.js\"","webpack://JS-Slash-Runner/./src/iframe_server/lorebook_entry.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands.js\"","webpack://JS-Slash-Runner/./src/iframe_server/variables.ts","webpack://JS-Slash-Runner/./src/iframe_server/index.ts","webpack://JS-Slash-Runner/./src/slash_command/event.ts","webpack://JS-Slash-Runner/./src/iframe_server/chat_message.ts","webpack://JS-Slash-Runner/./src/iframe_server/displayed_message.ts","webpack://JS-Slash-Runner/./src/iframe_server/frontend_version.ts","webpack://JS-Slash-Runner/./src/iframe_server/lorebook.ts","webpack://JS-Slash-Runner/./src/compatibility.ts","webpack://JS-Slash-Runner/./src/iframe_server/slash.ts","webpack://JS-Slash-Runner/./src/iframe_server/util.ts","webpack://JS-Slash-Runner/./src/iframe_server/audio.ts","webpack://JS-Slash-Runner/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"MAX_INJECTION_DEPTH\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.MAX_INJECTION_DEPTH), [\"activateSendButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.activateSendButtons), [\"baseChatReplace\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.baseChatReplace), [\"characters\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.characters), [\"chat\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.chat), [\"chat_metadata\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.chat_metadata), [\"cleanUpMessage\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.cleanUpMessage), [\"countOccurrences\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.countOccurrences), [\"deactivateSendButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.deactivateSendButtons), [\"eventSource\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.eventSource), [\"event_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.event_types), [\"extension_prompt_roles\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.extension_prompt_roles), [\"extension_prompt_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.extension_prompt_types), [\"getBiasStrings\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getBiasStrings), [\"getCharacterCardFields\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getCharacterCardFields), [\"getExtensionPromptRoleByName\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getExtensionPromptRoleByName), [\"getMaxContextSize\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getMaxContextSize), [\"getOneCharacter\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getOneCharacter), [\"getPastCharacterChats\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getPastCharacterChats), [\"getRequestHeaders\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getRequestHeaders), [\"getThumbnailUrl\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getThumbnailUrl), [\"isOdd\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.isOdd), [\"messageFormatting\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.messageFormatting), [\"name1\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.name1), [\"name2\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.name2), [\"reloadCurrentChat\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.reloadCurrentChat), [\"saveCharacterDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveCharacterDebounced), [\"saveChatConditional\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveChatConditional), [\"saveSettings\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveSettings), [\"saveSettingsDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveSettingsDebounced), [\"setExtensionPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.setExtensionPrompt), [\"setGenerationProgress\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.setGenerationProgress), [\"showSwipeButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.showSwipeButtons), [\"stopGeneration\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.stopGeneration), [\"substituteParams\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.substituteParams), [\"substituteParamsExtended\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.substituteParamsExtended), [\"system_message_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.system_message_types), [\"this_chid\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.this_chid), [\"updateMessageBlock\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.updateMessageBlock), [\"user_avatar\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.user_avatar) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"extension_settings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.extension_settings), [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.getContext), [\"renderExtensionTemplateAsync\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.renderExtensionTemplateAsync), [\"saveMetadataDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.saveMetadataDebounced), [\"writeExtensionField\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.writeExtensionField) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"SlashCommand\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__.SlashCommand) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"ARGUMENT_TYPE\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.ARGUMENT_TYPE), [\"SlashCommandArgument\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.SlashCommandArgument), [\"SlashCommandNamedArgument\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.SlashCommandNamedArgument) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"commonEnumProviders\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__.commonEnumProviders), [\"enumIcons\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__.enumIcons) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"SlashCommandEnumValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__.SlashCommandEnumValue), [\"enumTypes\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__.enumTypes) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"SlashCommandParser\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__.SlashCommandParser) });","import {\n  list_BGMS,\n  list_ambients,\n  onAudioEnabledClick,\n  playAudio,\n  updateAudio,\n  updateAudioSelect,\n} from '@/component/audio';\nimport { extensionName } from '@/index';\n\nimport { chat_metadata, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport {\n  ARGUMENT_TYPE,\n  SlashCommandArgument,\n  SlashCommandNamedArgument,\n} from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { commonEnumProviders, enumIcons } from '@sillytavern/scripts/slash-commands/SlashCommandCommonEnumsProvider';\nimport { SlashCommandEnumValue, enumTypes } from '@sillytavern/scripts/slash-commands/SlashCommandEnumValue';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\ninterface AudioElement extends HTMLElement {\n  pause(): void;\n}\n\n/**\n * 切换音频播放模式\n */\nexport async function audioMode(args: { type: string; mode: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const mode = args.mode.toLowerCase();\n\n  if (!['bgm', 'ambient'].includes(type) || !['repeat', 'random', 'single', 'stop'].includes(mode)) {\n    console.warn('WARN: Invalid arguments for /audiomode command');\n  }\n\n  if (type === 'bgm') {\n    extension_settings[extensionName].audio.bgm_mode = mode;\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_bgm_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_bgm_mode_icon').addClass(iconMap[mode]);\n  } else if (type === 'ambient') {\n    extension_settings[extensionName].audio.ambient_mode = mode;\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_ambient_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_ambient_mode_icon').addClass(iconMap[mode]);\n  }\n\n  saveSettingsDebounced();\n}\n\n/**\n * 切换播放器开关状态\n */\nexport async function audioEnable(args: { type: string; state?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const state = (args.state || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioenable command');\n  }\n\n  if (type === 'bgm') {\n    if (state === 'true') {\n      $('#enable_bgm').prop('checked', true);\n      await onAudioEnabledClick('bgm');\n    } else if (state === 'false') {\n      $('#enable_bgm').prop('checked', false);\n      await onAudioEnabledClick('bgm');\n    }\n  } else if (type === 'ambient') {\n    if (state === 'true') {\n      $('#enable_ambient').prop('checked', true);\n      await onAudioEnabledClick('ambient');\n    } else if (state === 'false') {\n      $('#enable_ambient').prop('checked', false);\n      await onAudioEnabledClick('ambient');\n    }\n  }\n}\n\n/**\n * 切换播放/暂停状态\n */\nexport async function audioPlay(args: { type: string; play?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioplaypause command');\n  }\n\n  if (type === 'bgm') {\n    if (play === 'true') {\n      await playAudio('bgm');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_bgm')[0] as AudioElement;\n      audioElement.pause();\n    }\n  } else if (type === 'ambient') {\n    if (play === 'true') {\n      await playAudio('ambient');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_ambient')[0] as AudioElement;\n      audioElement.pause();\n    }\n  }\n}\n\n/**\n * 导入音频链接\n */\nexport async function audioImport(args: { type: string; play?: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type || !url) {\n    console.warn('WARN: Missing arguments for /audioimport command');\n  }\n\n  const urlArray = url\n    .split(',')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '')\n    .filter((url: string, index: number, self: string[]) => self.indexOf(url) === index);\n  if (urlArray.length === 0) {\n    console.warn('WARN: Invalid or empty URLs provided.');\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n  const mergedUrls = [...new Set([...urlArray, ...existingUrls])];\n\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n  }\n\n  if (play === 'true' && urlArray[0]) {\n    const selectedUrl = urlArray[0];\n    if (type === 'bgm') {\n      extension_settings[extensionName].audio.bgm_selected = selectedUrl;\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      extension_settings[extensionName].audio.ambient_selected = selectedUrl;\n      await updateAudio('ambient', true);\n    }\n  }\n}\n\n/**\n * 选择并播放音频\n */\nexport async function audioSelect(args: { type: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n\n  if (!url) {\n    console.warn('WARN: Missing URL for /audioselect command');\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let playlist = type === 'bgm' ? list_BGMS : list_ambients;\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n\n  if (playlist && playlist.includes(url)) {\n    if (type === 'bgm') {\n      extension_settings[extensionName].audio.bgm_selected = url;\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      extension_settings[extensionName].audio.ambient_selected = url;\n      await updateAudio('ambient', true);\n    }\n  }\n\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n\n  const mergedUrls = [...new Set([url, ...existingUrls])];\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n    extension_settings[extensionName].audio.bgm_selected = url;\n    await updateAudio('bgm', true);\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n    extension_settings[extensionName].audio.ambient_selected = url;\n    await updateAudio('ambient', true);\n  }\n}\n\n/**\n * 初始化音频相关的 slash command\n */\nexport function initAudioSlashCommands() {\n  // 注册 audioselect 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioselect',\n      callback: audioSelect,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择播放器类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            选择并播放音频。如果音频链接不存在，则先导入再播放。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioselect type=bgm https://example.com/song.mp3</code></pre>\n                    选择并播放指定的音乐。\n                </li>\n                <li>\n                    <pre><code>/audioselect type=ambient https://example.com/sound.mp3</code></pre>\n                    选择并播放指定的音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioimport 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioimport',\n      callback: audioImport,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择导入类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'play',\n          description: '导入后是否立即播放第一个链接',\n          typeList: [ARGUMENT_TYPE.BOOLEAN],\n          defaultValue: 'true',\n          isRequired: false,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            导入音频或音乐链接，并决定是否立即播放，默认为自动播放。可批量导入链接，使用英文逗号分隔。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioimport type=bgm https://example.com/song1.mp3,https://example.com/song2.mp3</code></pre>\n                    导入 BGM 音乐并立即播放第一个链接。\n                </li>\n                <li>\n                    <pre><code>/audioimport type=ambient play=false url=https://example.com/sound1.mp3,https://example.com/sound2.mp3 </code></pre>\n                    导入音效链接 (不自动播放)。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioplay 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioplay',\n      callback: audioPlay,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'play',\n          '播放或暂停',\n          [ARGUMENT_TYPE.STRING],\n          true,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的播放与暂停。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioplay type=bgm</code></pre>\n                    播放当前音乐。\n                </li>\n                <li>\n                    <pre><code>/audioplay type=ambient play=false</code></pre>\n                    暂停当前音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioenable 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioenable',\n      callback: audioEnable,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'state',\n          '打开或关闭播放器',\n          [ARGUMENT_TYPE.STRING],\n          false,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的开启与关闭。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioenable type=bgm state=true</code></pre>\n                    打开音乐播放器。\n                </li>\n                <li>\n                    <pre><code>/audioenable type=ambient state=false</code></pre>\n                    关闭音效播放器。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n\n  // 注册 audiomode 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audiomode',\n      callback: audioMode,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'mode',\n          description: '选择播放模式',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('repeat', null, enumTypes.enum, enumIcons.loop),\n            new SlashCommandEnumValue('random', null, enumTypes.enum, enumIcons.shuffle),\n            new SlashCommandEnumValue('single', null, enumTypes.enum, enumIcons.redo),\n            new SlashCommandEnumValue('stop', null, enumTypes.enum, enumIcons.stop),\n          ],\n          isRequired: true,\n        }),\n      ],\n      helpString: `\n        <div>\n            设置音频播放模式。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=repeat</code></pre>\n                    设置音乐为循环播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=random</code></pre>\n                    设置音效为随机播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=single</code></pre>\n                    设置音乐为单曲循环模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=stop</code></pre>\n                    设置音效为停止播放模式。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"POPUP_TYPE\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__.POPUP_TYPE), [\"callGenericPopup\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__.callGenericPopup) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"isMobile\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__.isMobile) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"Stopwatch\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.Stopwatch), [\"debounce\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.debounce), [\"ensureImageFormatSupported\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.ensureImageFormatSupported), [\"equalsIgnoreCaseAndAccents\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.equalsIgnoreCaseAndAccents), [\"getBase64Async\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getBase64Async), [\"getCharaFilename\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getCharaFilename), [\"getSortableDelay\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getSortableDelay), [\"stringToRange\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.stringToRange) });","import { extensionFolderPath, extensionName } from '@/index';\nimport { initAudioSlashCommands } from '@/slash_command/audio';\n\nimport { chat_metadata, eventSource, event_types, saveSettingsDebounced } from '@sillytavern/script';\nimport {\n  extension_settings,\n  renderExtensionTemplateAsync,\n  saveMetadataDebounced,\n} from '@sillytavern/scripts/extensions';\nimport { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\nimport { isMobile } from '@sillytavern/scripts/RossAscends-mods';\nimport { getSortableDelay } from '@sillytavern/scripts/utils';\n\nexport let list_BGMS: string[] = [];\nexport let list_ambients: string[] = [];\nlet bgmEnded = true;\nlet ambientEnded = true;\nlet cooldownBGM = 0;\n\n// 定义默认音频设置\nexport const defaultAudioSettings = {\n  audio_setting: true,\n  bgm_enabled: true,\n  ambient_enabled: true,\n  bgm_mode: 'repeat',\n  bgm_muted: false,\n  bgm_volume: 50,\n  bgm_selected: null,\n  bgm_current_time: 0,\n  ambient_mode: 'stop',\n  ambient_muted: false,\n  ambient_volume: 50,\n  ambient_selected: null,\n  ambient_current_time: 0,\n  audio_cooldown: 0,\n};\n\n/**\n * 更新音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param isUserInput 是否由用户操作触发-将导致音频中断\n */\nexport async function updateAudio(type = 'bgm', isUserInput = false) {\n  if (!extension_settings[extensionName].audio.audio_setting) {\n    return;\n  }\n\n  const isTypeEnabled =\n    type === 'bgm'\n      ? extension_settings[extensionName].audio.bgm_enabled\n      : extension_settings[extensionName].audio.ambient_enabled;\n\n  if (!isTypeEnabled) {\n    return;\n  }\n  const audioEnded = type === 'bgm' ? bgmEnded : ambientEnded;\n  const audioSelector = `#audio_${type}`;\n\n  if (!isUserInput && $(audioSelector).attr('src') != '' && !audioEnded) {\n    return;\n  }\n\n  let audio_url = '';\n  const playlist = await getAudioUrl(type as 'bgm' | 'ambient');\n\n  if (isUserInput) {\n    audio_url =\n      type === 'bgm'\n        ? extension_settings[extensionName].audio.bgm_selected || playlist[0]\n        : extension_settings[extensionName].audio.ambient_selected || playlist[0];\n  } else {\n    const mode =\n      type === 'bgm'\n        ? extension_settings[extensionName].audio.bgm_mode\n        : extension_settings[extensionName].audio.ambient_mode;\n\n    const selected =\n      type === 'bgm'\n        ? extension_settings[extensionName].audio.bgm_selected\n        : extension_settings[extensionName].audio.ambient_selected;\n\n    audio_url = getNextFileByMode(mode, playlist, selected);\n  }\n\n  if (!audio_url) {\n    return;\n  }\n\n  const audio = $(audioSelector)[0] as HTMLAudioElement;\n\n  // 对于ambient类型，处理掉防缓存后缀\n  if (type === 'ambient') {\n    const cleanAudioSrc = audio.src.split('?')[0];\n    const cleanAudioUrl = audio_url.split('?')[0];\n    if (decodeURIComponent(cleanAudioSrc) === decodeURIComponent(cleanAudioUrl) && !audioEnded) {\n      return;\n    }\n  } else {\n    // 对于bgm类型，直接比较\n    if (decodeURIComponent(audio.src) === decodeURIComponent(audio_url) && !audioEnded) {\n      return;\n    }\n  }\n\n  // 设置audioEnded状态\n  if (type === 'bgm') {\n    bgmEnded = false;\n  } else {\n    ambientEnded = false;\n  }\n\n  if (type === 'bgm') {\n    audio.src = audio_url;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type);\n  } else {\n    // 对于ambient类型，使用缓存破坏\n    const audioUrlWithCacheBusting = getAudioUrlWithCacheBusting(audio_url);\n    audio.src = audioUrlWithCacheBusting;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type);\n  }\n\n  // 更新选中的音频\n  if (type === 'bgm') {\n    extension_settings[extensionName].audio.bgm_selected = audio_url;\n  } else {\n    extension_settings[extensionName].audio.ambient_selected = audio_url;\n  }\n\n  // 更新选择器\n  const selectElement = $(`#audio_${type}_select`);\n  if (selectElement.val() !== audio_url) {\n    selectElement.val(audio_url);\n  }\n\n  saveSettingsDebounced();\n}\n\n/**\n * 更新音频下拉选择菜单\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function updateAudioSelect(type = 'bgm') {\n  if (!extension_settings[extensionName].audio[`${type}_enabled`]) {\n    return;\n  }\n\n  const selectElement = $(`#audio_${type}_select`);\n  selectElement.empty();\n\n  if (type === 'bgm') {\n    list_BGMS = await getAudioUrl('bgm');\n  } else {\n    list_ambients = await getAudioUrl('ambient');\n  }\n\n  const audioList = type === 'bgm' ? list_BGMS : list_ambients;\n  let selectedSetting =\n    type === 'bgm'\n      ? extension_settings[extensionName].audio.bgm_selected\n      : extension_settings[extensionName].audio.ambient_selected;\n\n  if (audioList && audioList.length > 0) {\n    // 检查当前选择的音频是否在列表中，如果不在则选择第一个\n    if (!audioList.includes(selectedSetting)) {\n      console.warn(`[Audio] 当前选择的音频 ${selectedSetting} 不在列表中，自动选择列表第一个音频`);\n      selectedSetting = audioList[0];\n      if (type === 'bgm') {\n        extension_settings[extensionName].audio.bgm_selected = selectedSetting;\n      } else {\n        extension_settings[extensionName].audio.ambient_selected = selectedSetting;\n      }\n      saveSettingsDebounced();\n    }\n\n    const audioFiles = Array.isArray(audioList) ? audioList : audioList.split(',').map(file => file.trim());\n    audioFiles.forEach(file => {\n      const fileLabel = file.replace(/^.*[\\\\\\/]/, '').replace(/\\.[^/.]+$/, '');\n      selectElement.append(new Option(fileLabel, file));\n    });\n\n    selectElement.val(selectedSetting);\n  } else {\n    console.log(`[Audio] 暂无可用的 ${type.toUpperCase()} 资源`);\n  }\n}\n\n/**\n * 获取音频URL\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @returns 音频URL数组\n */\nexport async function getAudioUrl(type = 'bgm') {\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  const chatSpecificUrls = chat_metadata.variables?.[typeKey] || [];\n  return chatSpecificUrls;\n}\n\n/**\n * 添加缓存参数防止缓存\n * @param originalUrl 原始URL\n */\nexport function getAudioUrlWithCacheBusting(originalUrl: string) {\n  if (!originalUrl) return '';\n  const cacheBuster = new Date().getTime();\n  const separator = originalUrl.includes('?') ? '&' : '?';\n  return `${originalUrl}${separator}_=${cacheBuster}`;\n}\n\n/**\n * 根据播放模式获取下一个音频文件\n * @param mode 播放模式\n * @param playlist 播放列表\n * @param currentFile 当前文件\n */\nexport function getNextFileByMode(mode: string, playlist: string[], currentFile: string) {\n  if (!playlist || playlist.length === 0) {\n    return '';\n  }\n\n  switch (mode) {\n    case 'repeat':\n      return playlist[0];\n    case 'single':\n      return currentFile || playlist[0];\n    case 'random': {\n      const filteredPlaylist = playlist.filter(file => file !== currentFile);\n      if (filteredPlaylist.length === 0) {\n        return playlist[0];\n      }\n      const randomIndex = Math.floor(Math.random() * filteredPlaylist.length);\n      return filteredPlaylist[randomIndex];\n    }\n    case 'stop':\n      return '';\n    default:\n      return playlist[0];\n  }\n}\n\n/**\n * 切换音频控件状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param status 是否启用\n */\nexport function toggleAudioControls(type: 'bgm' | 'ambient', status = 'enable') {\n  const isMainEnabled = $('#audio_enabled').prop('checked');\n\n  // 只有当总开关打开且当前操作是启用控件时，才真正启用控件\n  const shouldEnable = isMainEnabled && status === 'enable';\n\n  const controlIds = [\n    `#audio_${type}_play_pause`,\n    `#audio_${type}_mute`,\n    `#audio_${type}_mode`,\n    `#audio_${type}_select`,\n    `#audio_${type}_volume_slider`,\n  ];\n\n  controlIds.forEach(id => {\n    $(id).prop('disabled', !shouldEnable);\n  });\n}\n\n/**\n * 点击音频启用按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function onAudioEnabledClick(type = 'bgm') {\n  const enabled = $(`#enable_${type}`).prop('checked');\n  extension_settings[extensionName].audio[`${type}_enabled`] = enabled;\n  saveSettingsDebounced();\n\n  if (enabled) {\n    toggleAudioControls(type as 'bgm' | 'ambient', 'enable');\n    await updateAudio(type, false);\n  } else {\n    ($(`#audio_${type}`)[0] as HTMLAudioElement).pause();\n    toggleAudioControls(type as 'bgm' | 'ambient', 'disable');\n  }\n}\n\n/**\n * 初始化音频事件监听\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initAudioEventListeners(type: 'bgm' | 'ambient') {\n  ($(`#audio_${type}`) as HTMLAudioElement).on('ended', async function () {\n    if (type === 'bgm') {\n      bgmEnded = true;\n    } else {\n      ambientEnded = true;\n    }\n    const mode = extension_settings[extensionName].audio[`${type}_mode`];\n\n    if (mode === 'stop') {\n      return;\n    }\n\n    await updateAudio(type, false);\n  });\n}\n\n/**\n * 初始化进度条\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initializeProgressBar(type: 'bgm' | 'ambient') {\n  cooldownBGM = extension_settings[extensionName].audio.audio_cooldown;\n  const $audioElement = $(`#audio_${type}`);\n  const $progressSlider = $(`#audio_${type}_progress_slider`);\n\n  $audioElement.on('timeupdate', function () {\n    if (!isNaN(this.duration)) {\n      const progressPercent = (this.currentTime / this.duration) * 100;\n      $progressSlider.val(progressPercent);\n    }\n    const cooldownBGM = extension_settings[extensionName].audio.audio_cooldown;\n    const remainingTime = this.duration - this.currentTime;\n\n    if (cooldownBGM > 0 && remainingTime <= cooldownBGM && !this.isFadingOut) {\n      const initialVolume = this.volume;\n      const fadeStep = initialVolume / (cooldownBGM * 10);\n      this.isFadingOut = true;\n\n      const fadeOutInterval = setInterval(() => {\n        if (this.volume > 0) {\n          this.volume = Math.max(0, this.volume - fadeStep);\n        } else {\n          clearInterval(fadeOutInterval);\n          this.isFadingOut = false;\n        }\n      }, 100);\n    }\n  });\n\n  $audioElement.on('play', function () {\n    const cooldownBGM = extension_settings[extensionName].audio.audio_cooldown;\n    const targetVolume = $(`#audio_${type}_volume_slider`).val() / 100;\n\n    if (cooldownBGM <= 0) {\n      this.volume = targetVolume;\n      return;\n    }\n\n    this.volume = 0;\n    const fadeStep = targetVolume / (cooldownBGM * 10);\n    let fadeInInterval = setInterval(() => {\n      if (this.volume < targetVolume) {\n        this.volume = Math.min(targetVolume, this.volume + fadeStep);\n      } else {\n        clearInterval(fadeInInterval);\n      }\n    }, 100);\n  });\n\n  $audioElement.on('loadedmetadata', function () {\n    if (!isNaN(this.duration)) {\n      $progressSlider.attr('max', 100);\n    }\n  });\n\n  $progressSlider.on('input', function () {\n    const value = $(this).val();\n    if (!isNaN($audioElement[0].duration)) {\n      $audioElement[0].currentTime = (value / 100) * $audioElement[0].duration;\n    }\n  });\n}\n\n/**\n * 音量滑块滚轮调节事件处理\n * @param e 事件对象\n */\nfunction onVolumeSliderWheelEvent(e) {\n  const slider = $(this);\n  e.preventDefault();\n  e.stopPropagation();\n\n  const delta = e.deltaY / 20;\n  const sliderVal = Number(slider.val());\n\n  let newVal = sliderVal - delta;\n  if (newVal < 0) {\n    newVal = 0;\n  } else if (newVal > 100) {\n    newVal = 100;\n  }\n\n  slider.val(newVal).trigger('input');\n}\n\n/**\n * 长按音量控制按钮出现音量调节\n * @param volumeControlId 音量控制按钮ID\n * @param iconId 音量控制按钮图标ID\n */\nfunction handleLongPress(volumeControlId, iconId) {\n  const $volumeControl = $('#' + volumeControlId);\n  const $icon = $('#' + iconId);\n  let pressTimer;\n\n  if (isMobile()) {\n    $icon.on('touchstart', function (e) {\n      pressTimer = setTimeout(() => {\n        $volumeControl.css('display', 'block');\n      }, 500);\n    });\n\n    $icon.on('touchend', function (e) {\n      clearTimeout(pressTimer);\n    });\n\n    $(document).on('click', function (event) {\n      if (\n        !$icon.is(event.target) &&\n        $icon.has(event.target).length === 0 &&\n        !$volumeControl.is(event.target) &&\n        $volumeControl.has(event.target).length === 0\n      ) {\n        $volumeControl.css('display', 'none');\n      }\n    });\n  }\n}\n\n/**\n * 刷新音频资源\n */\nexport async function refreshAudioResources() {\n  updateAudioSelect('bgm');\n  updateAudioSelect('ambient');\n}\n\n/**\n * 打开音频资源管理弹窗\n * @param typeKey 音频类型 \"bgmurl\" 或 \"ambienturl\"\n */\n\nasync function openUrlManagerPopup(typeKey: 'bgmurl' | 'ambienturl') {\n  const urlManager = $(await renderExtensionTemplateAsync(`${extensionFolderPath}`, 'urlManager'));\n  urlManager.prepend(`\n    <style>\n      #saved_audio_url.empty::after {\n        content: \"暂无音频\";\n        color: #999;\n        margin-top: 20px;\n        font-size: 12px;\n      }\n    </style>\n  `);\n  const savedAudioUrl = urlManager.find('#saved_audio_url').empty();\n  const urlTemplate = $(await renderExtensionTemplateAsync(`${extensionFolderPath}`, 'urlTemplate'));\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let urlValue: string[] = chat_metadata.variables[typeKey];\n  if (!urlValue) {\n    urlValue = [];\n\n    savedAudioUrl.addClass('empty');\n  } else {\n    try {\n      if (urlValue.length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    } catch (error) {\n      console.error(`[Audio] Failed to parse ${typeKey}:`, error);\n      return null;\n    }\n  }\n\n  const updatedUrls: Record<string, string> = {};\n  let newUrlOrder = [...urlValue];\n  let importedUrls: string[] = [];\n  function renderUrl(container: JQuery<HTMLElement>, url: string) {\n    const urlHtml = urlTemplate.clone();\n    let fileName;\n    if (url.includes('/')) {\n      const parts = url.split('/');\n      fileName = parts[parts.length - 1] || parts[parts.length - 2];\n    } else {\n      fileName = url;\n    }\n\n    const id = fileName.replace(/\\./g, '-');\n\n    urlHtml.attr('id', id);\n    urlHtml.find('.audio_url_name').text(fileName);\n\n    urlHtml.find('.audio_url_name').attr('data-url', url);\n\n    urlHtml.find('.edit_existing_url').on('click', async function () {\n      const currentUrl = urlHtml.find('.audio_url_name').attr('data-url');\n\n      if (!currentUrl) {\n        console.error('[Audio] No URL found for this element.');\n        return;\n      }\n\n      const inputUrl = await callGenericPopup('', POPUP_TYPE.INPUT, currentUrl);\n\n      if (!inputUrl) {\n        return;\n      }\n\n      const newFileName = inputUrl.split('/').pop();\n\n      const newId = newFileName.replace(/\\./g, '-');\n\n      urlHtml.attr('id', newId);\n      urlHtml.find('.audio_url_name').text(newFileName);\n      urlHtml.find('.audio_url_name').attr('data-url', inputUrl);\n\n      updatedUrls[currentUrl] = inputUrl;\n    });\n\n    urlHtml.find('.delete_url').on('click', async function () {\n      const confirmDelete = await callGenericPopup('确认要删除此链接?', POPUP_TYPE.CONFIRM);\n\n      if (!confirmDelete) {\n        return;\n      }\n\n      // 仅从DOM中移除元素\n      urlHtml.remove();\n\n      // 检查是否需要显示空状态提示\n      if (savedAudioUrl.find('.audio_url_name').length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    });\n\n    container.append(urlHtml);\n  }\n\n  urlValue.forEach(url => {\n    renderUrl(savedAudioUrl, url);\n  });\n  urlManager.find('#import_button').on('click', async function () {\n    const newUrls = await openUrlImportPopup();\n\n    if (!newUrls) {\n      console.debug(`[Audio] ${typeKey} URL导入已取消`);\n      return;\n    }\n\n    savedAudioUrl.removeClass('empty');\n\n    newUrls.forEach(url => {\n      renderUrl(savedAudioUrl, url);\n    });\n  });\n  (savedAudioUrl as any).sortable({\n    delay: getSortableDelay(),\n    handle: '.drag-handle',\n    stop: function () {},\n  });\n  const result = await callGenericPopup(urlManager, POPUP_TYPE.CONFIRM, '', {\n    okButton: `确认`,\n    cancelButton: `取消`,\n  });\n\n  if (!result) {\n    return;\n  } else {\n    // 直接读取所有data-url属性，生成新的URL列表\n    const newUrlList: string[] = [];\n    savedAudioUrl.find('.audio_url_name').each(function () {\n      const url = $(this).attr('data-url');\n      if (url) {\n        newUrlList.push(url);\n      }\n    });\n\n    // 检查当前播放的音频是否在新的列表中\n    const currentBgmUrl = extension_settings[extensionName].audio.bgm_selected;\n    const currentAmbientUrl = extension_settings[extensionName].audio.ambient_selected;\n\n    // 如果当前播放的音频不在新的列表中，停止播放\n    if (typeKey === 'bgmurl' && currentBgmUrl && !newUrlList.includes(currentBgmUrl)) {\n      const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n      bgmAudio.pause();\n      bgmEnded = true;\n    } else if (typeKey === 'ambienturl' && currentAmbientUrl && !newUrlList.includes(currentAmbientUrl)) {\n      const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n      ambientAudio.pause();\n      ambientEnded = true;\n    }\n\n    // 更新并保存新的URL列表\n    chat_metadata.variables[typeKey] = newUrlList;\n    saveMetadataDebounced();\n    if (typeKey === 'bgmurl') {\n      updateAudioSelect('bgm');\n    } else if (typeKey === 'ambienturl') {\n      updateAudioSelect('ambient');\n    }\n  }\n}\n\n/**\n * 点击音频总开关时的处理函数\n */\nasync function onEnabledClick() {\n  const isEnabled = $('#audio_enabled').prop('checked');\n  extension_settings[extensionName].audio.audio_setting = isEnabled;\n  saveSettingsDebounced();\n\n  if (isEnabled) {\n    toggleAudioControls('bgm', 'enable');\n    toggleAudioControls('ambient', 'enable');\n    const bgmUrl = await getAudioUrl('bgm');\n    const ambientUrl = await getAudioUrl('ambient');\n    if (bgmUrl.length > 0) {\n      const bgmAudioElement = $('#audio_bgm')[0] as HTMLAudioElement;\n      try {\n        await bgmAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音乐失败：没有提供有效源');\n      }\n    }\n    if (ambientUrl.length > 0) {\n      const ambientAudioElement = $('#audio_ambient')[0] as HTMLAudioElement;\n      try {\n        await ambientAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音效失败：没有提供有效源');\n      }\n    }\n  } else {\n    ($('#audio_bgm')[0] as HTMLAudioElement).pause();\n    ($('#audio_ambient')[0] as HTMLAudioElement).pause();\n    toggleAudioControls('bgm', 'disable');\n    toggleAudioControls('ambient', 'disable');\n  }\n}\n\n/**\n * 播放音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function playAudio(type: 'bgm' | 'ambient') {\n  if (\n    !extension_settings[extensionName].activate_setting ||\n    !extension_settings[extensionName].audio.audio_setting ||\n    !extension_settings[extensionName].audio[`${type}_enabled`]\n  ) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.error && audioElement.error.code === 4) {\n    console.warn(`The ${type} element has no supported sources. Trying to reload selected audio from dropdown...`);\n\n    const selectedAudio = $(`#audio_${type}_select`).val() as string;\n    if (!selectedAudio) {\n      console.error(`No audio selected for ${type}`);\n      return;\n    }\n\n    audioElement.src = selectedAudio;\n    audioElement.load();\n  }\n\n  try {\n    await audioElement.play();\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  } catch (error) {\n    console.error(`[Audio] 播放 ${type} 音频时出错:`, error);\n  }\n}\n\n/**\n * 点击各自音频模式按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioModeClick(type: 'bgm' | 'ambient') {\n  const modes = [\n    { mode: 'repeat', icon: 'fa-repeat' },\n    { mode: 'random', icon: 'fa-random' },\n    { mode: 'single', icon: 'fa-redo-alt' },\n    { mode: 'stop', icon: 'fa-cancel' },\n  ];\n\n  const currentModeIndex = modes.findIndex(m => m.mode === extension_settings[extensionName].audio[`${type}_mode`]);\n\n  const nextModeIndex = (currentModeIndex + 1) % modes.length;\n\n  extension_settings[extensionName].audio[`${type}_mode`] = modes[nextModeIndex].mode;\n\n  $(`#audio_${type}_mode_icon`).removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n\n  $(`#audio_${type}_mode_icon`).addClass(modes[nextModeIndex].icon);\n\n  saveSettingsDebounced();\n}\n\n/**\n * 音频选择变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioSelectChange(type: 'bgm' | 'ambient') {\n  extension_settings[extensionName].audio[`${type}_selected`] = $(`#audio_${type}_select`).val();\n  await updateAudio(type, true);\n  saveSettingsDebounced();\n}\n\n/**\n * 输入冷却时间的处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioCooldownInput() {\n  extension_settings[extensionName].audio.audio_cooldown = ~~($(`#audio_cooldown`).val() as string);\n  saveSettingsDebounced();\n}\n\n/**\n * 音频音量变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioVolumeChange(type: 'bgm' | 'ambient') {\n  extension_settings[extensionName].audio[`${type}_volume`] = ~~($(`#audio_${type}_volume_slider`).val() as string);\n  $(`#audio_${type}`).prop('volume', extension_settings[extensionName].audio[`${type}_volume`] * 0.01);\n  $(`#audio_${type}_volume`).text(extension_settings[extensionName].audio[`${type}_volume`]);\n  saveSettingsDebounced();\n}\n\n/**\n * 点击音频静音按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioMuteClick(type: 'bgm' | 'ambient') {\n  extension_settings[extensionName].audio[`${type}_muted`] = !extension_settings[extensionName].audio[`${type}_muted`];\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-high');\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-mute');\n  $(`#audio_${type}`).prop('muted', !$(`#audio_${type}`).prop('muted'));\n  $(`#audio_${type}_mute`).toggleClass('redOverlayGlow');\n  saveSettingsDebounced();\n}\n\n/**\n * 切换播放/暂停状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function togglePlayPause(type: 'bgm' | 'ambient') {\n  if (!extension_settings[extensionName].audio.audio_setting) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.paused) {\n    await playAudio(type);\n  } else {\n    audioElement.pause();\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  }\n}\n\n/**\n * 打开URL导入弹窗\n * @param type 音频类型\n */\nasync function openUrlImportPopup(): Promise<string[] | null> {\n  const input = await callGenericPopup('输入要导入的网络音频链接（每行一个）', POPUP_TYPE.INPUT, '');\n\n  if (!input) {\n    console.debug('[Audio] URL import cancelled');\n    return null;\n  }\n\n  const urlArray = input\n    .trim()\n    .split('\\n')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '');\n\n  return Array.from(new Set(urlArray));\n}\n\n// 聊天更改时的事件处理\neventSource.on(event_types.CHAT_CHANGED, async () => {\n  const $bgmPlayer = $('#audio_bgm')[0] as HTMLAudioElement;\n  const $ambientPlayer = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  if ($bgmPlayer && !$bgmPlayer.paused) {\n    $bgmPlayer.pause();\n  }\n\n  if ($ambientPlayer && !$ambientPlayer.paused) {\n    $ambientPlayer.pause();\n  }\n  await refreshAudioResources();\n  console.log('[Audio] 聊天已更改，音频资源刷新完成');\n});\n\n/** 初始化样式\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nfunction initAudioStyles(type: 'bgm' | 'ambient') {\n  // 隐藏默认播放器样式\n  $(`#audio_${type}`).hide();\n\n  if (extension_settings[extensionName].audio[`${type}_muted`]) {\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).addClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', true);\n  } else {\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).removeClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', false);\n  }\n\n  $(`#enable_${type}`).prop('checked', extension_settings[extensionName].audio[`${type}_enabled`]);\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement && audioElement.paused) {\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  } else if (audioElement && !audioElement.paused) {\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  }\n  updateAudioSelect(type);\n  initializeProgressBar(type);\n}\n\n/**\n * 初始化所有音频相关组件和事件监听器\n */\nexport function initAudioComponents() {\n  const audio_enabled = extension_settings[extensionName].audio.audio_setting;\n  $('#audio_enabled').prop('checked', audio_enabled).on('click', onEnabledClick);\n  if (audio_enabled) {\n    onEnabledClick();\n  }\n\n  // 初始化音乐和音效样式\n  initAudioStyles('bgm');\n  initAudioStyles('ambient');\n\n  const audioTypes = ['bgm', 'ambient'] as const;\n\n  const bindTypeEvents = (\n    type: 'bgm' | 'ambient',\n    events: Array<{\n      selector: string;\n      event: string;\n      handler: (type: 'bgm' | 'ambient') => void;\n    }>,\n  ) => {\n    events.forEach(({ selector, event, handler }) => {\n      $(`#${selector}`).on(event, () => handler(type));\n    });\n  };\n\n  audioTypes.forEach(type => {\n    $(`#enable_${type}`).on('click', () => onAudioEnabledClick(type));\n\n    bindTypeEvents(type, [\n      {\n        selector: `enable_${type}`,\n        event: 'click',\n        handler: onAudioEnabledClick,\n      },\n      {\n        selector: `audio_${type}_mode`,\n        event: 'click',\n        handler: onAudioModeClick,\n      },\n      {\n        selector: `audio_${type}_mute`,\n        event: 'click',\n        handler: onAudioMuteClick,\n      },\n      {\n        selector: `audio_${type}_volume_slider`,\n        event: 'input',\n        handler: onAudioVolumeChange,\n      },\n      {\n        selector: `audio_${type}_select`,\n        event: 'change',\n        handler: onAudioSelectChange,\n      },\n      {\n        selector: `audio_${type}_play_pause`,\n        event: 'click',\n        handler: togglePlayPause,\n      },\n    ]);\n\n    $('#audio_cooldown').on('input', onAudioCooldownInput).val(extension_settings[extensionName].audio.audio_cooldown);\n\n    // 监听音频结束事件\n    initAudioEventListeners('bgm');\n    initAudioEventListeners('ambient');\n\n    const volumeSlider = $(`#audio_${type}_volume_slider`).get(0);\n    if (volumeSlider) {\n      volumeSlider.addEventListener('wheel', onVolumeSliderWheelEvent, {\n        passive: false,\n      });\n    }\n  });\n\n  $('#audio_refresh_assets').on('click', async () => {\n    await refreshAudioResources();\n  });\n\n  handleLongPress('bgm-volume-control', 'audio_bgm_mute_icon');\n  handleLongPress('ambient-volume-control', 'audio_ambient_mute_icon');\n\n  const urlManagerMap = {\n    bgm: 'bgmurl',\n    ambient: 'ambienturl',\n  };\n\n  audioTypes.forEach(type => {\n    $(`#${type}_manager_button`).on('click', async () => {\n      await openUrlManagerPopup(urlManagerMap[type] as 'bgmurl' | 'ambienturl');\n      await refreshAudioResources();\n    });\n  });\n\n  const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n  const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  const togglePlayPauseIcon = (audioElement: HTMLAudioElement, iconSelector: string) => {\n    const icon = $(iconSelector);\n    audioElement.addEventListener('play', () => icon.removeClass('fa-play').addClass('fa-pause'));\n    audioElement.addEventListener('pause', () => icon.removeClass('fa-pause').addClass('fa-play'));\n  };\n\n  togglePlayPauseIcon(bgmAudio, '#audio_bgm_play_pause_icon');\n  togglePlayPauseIcon(ambientAudio, '#audio_ambient_play_pause_icon');\n  initAudioSlashCommands();\n}\n","export interface IframeMessage {\n  request: string;\n  uid: number;\n}\n\nexport function getIframeName<T extends IframeMessage>(event: MessageEvent<T>): string {\n  const window = event.source as Window;\n  return window.frameElement?.id as string;\n}\n\nexport function getLogPrefix<T extends IframeMessage>(event: MessageEvent<T>): string {\n  return `${event.data.request}(${getIframeName(event)}) `;\n}\n\ntype IframeHandlers = {\n  [request: string]: (event: MessageEvent<any>) => Promise<any | void>;\n};\n\nexport const iframe_handlers: IframeHandlers = {};\n\nexport function registerIframeHandler<T extends IframeMessage>(\n  request: string,\n  handler: (event: MessageEvent<T>) => Promise<any | void>,\n) {\n  iframe_handlers[request] = handler;\n}\n","abstract class Multimap<K, V, I extends Iterable<V>> implements Iterable<[K, V]> {\n  private size_ = 0;\n  private map: Map<K, I> = new Map();\n  private operator: CollectionOperator<V, I>;\n\n  constructor(operator: CollectionOperator<V, I>, iterable?: Iterable<[K, V]>) {\n    this.operator = operator;\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.put(key, value);\n      }\n    }\n    return this;\n  }\n\n  abstract get [Symbol.toStringTag](): string;\n\n  get size(): number {\n    return this.size_;\n  }\n\n  get(key: K): I {\n    const values = this.map.get(key);\n    if (values) {\n      return this.operator.clone(values);\n    } else {\n      return this.operator.create();\n    }\n  }\n\n  put(key: K, value: V): boolean {\n    let values = this.map.get(key);\n    if (!values) {\n      values = this.operator.create();\n    }\n    if (!this.operator.add(value, values)) {\n      return false;\n    }\n    this.map.set(key, values);\n    this.size_++;\n    return true;\n  }\n\n  putAll(key: K, values: I): boolean;\n  putAll(multimap: Multimap<K, V, I>): boolean;\n  putAll(arg1: K | Multimap<K, V, I>, arg2?: I): boolean {\n    let pushed = 0;\n    if (arg2) {\n      const key = arg1 as K;\n      const values = arg2;\n      for (const value of values) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else if (arg1 instanceof Multimap) {\n      for (const [key, value] of arg1.entries()) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else {\n      throw new TypeError('unexpected arguments');\n    }\n    return pushed > 0;\n  }\n\n  has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  hasEntry(key: K, value: V): boolean {\n    return this.operator.has(value, this.get(key));\n  }\n\n  delete(key: K): boolean {\n    this.size_ -= this.operator.size(this.get(key));\n    return this.map.delete(key);\n  }\n\n  deleteEntry(key: K, value: V): boolean {\n    const current = this.get(key);\n    if (!this.operator.delete(value, current)) {\n      return false;\n    }\n    this.map.set(key, current);\n    this.size_--;\n    return true;\n  }\n\n  clear(): void {\n    this.map.clear();\n    this.size_ = 0;\n  }\n\n  keys(): IterableIterator<K> {\n    return this.map.keys();\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<[K, V]> {\n      for (const [key, values] of self.map.entries()) {\n        for (const value of values) {\n          yield [key, value];\n        }\n      }\n    }\n    return gen();\n  }\n\n  values(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<V> {\n      for (const [, value] of self.entries()) {\n        yield value;\n      }\n    }\n    return gen();\n  }\n\n  forEach<T>(callback: (this: T | this, value: V, key: K, map: this) => void, thisArg?: T): void {\n    for (const [key, value] of this.entries()) {\n      callback.call(thisArg === undefined ? this : thisArg, value, key, this);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  asMap(): Map<K, I> {\n    const ret = new Map<K, I>();\n    for (const key of this.keys()) {\n      ret.set(key, this.operator.clone(this.get(key)));\n    }\n    return ret;\n  }\n}\n\ninterface CollectionOperator<V, I> {\n  create(): I;\n  clone(collection: I): I;\n  add(value: V, collection: I): boolean;\n  size(collection: I): number;\n  delete(value: V, collection: I): boolean;\n  has(value: V, collection: I): boolean;\n}\n\nexport class ArrayMultimap<K, V> extends Multimap<K, V, V[]> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new ArrayOperator(), iterable);\n  }\n\n  get [Symbol.toStringTag](): string {\n    return 'ArrayMultimap';\n  }\n}\n\nclass ArrayOperator<V> implements CollectionOperator<V, V[]> {\n  create(): V[] {\n    return [];\n  }\n\n  clone(collection: V[]): V[] {\n    return collection.slice();\n  }\n\n  add(value: V, collection: V[]): boolean {\n    collection.push(value);\n    return true;\n  }\n\n  size(collection: V[]): number {\n    return collection.length;\n  }\n\n  delete(value: V, collection: V[]): boolean {\n    const index = collection.indexOf(value);\n    if (index > -1) {\n      collection.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n  has(value: V, collection: V[]): boolean {\n    return collection.includes(value);\n  }\n}\n\nexport class SetMultimap<K, V> extends Multimap<K, V, Set<V>> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new SetOperator(), iterable);\n  }\n  get [Symbol.toStringTag](): string {\n    return 'SetMultimap';\n  }\n}\n\nclass SetOperator<V> implements CollectionOperator<V, Set<V>> {\n  create(): Set<V> {\n    return new Set();\n  }\n  clone(collection: Set<V>): Set<V> {\n    return new Set(collection);\n  }\n  add(value: V, collection: Set<V>): boolean {\n    const prev = collection.size;\n    collection.add(value);\n    return prev !== collection.size;\n  }\n  size(collection: Set<V>): number {\n    return collection.size;\n  }\n  delete(value: V, collection: Set<V>): boolean {\n    return collection.delete(value);\n  }\n  has(value: V, collection: Set<V>): boolean {\n    return collection.has(value);\n  }\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getRegexedString\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__.getRegexedString), [\"regex_placement\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__.regex_placement) });","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { partition } from '@/util/helper';\n\nimport { characters, reloadCurrentChat, saveChatConditional, saveSettings, this_chid } from '@sillytavern/script';\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\nimport { extension_settings, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\n\ninterface IframeIsCharacterTavernRegexEnabled extends IframeMessage {\n  request: '[TavernRegex][isCharacterTavernRegexesEnabled]';\n}\n\ninterface IframeGetTavernRegexes extends IframeMessage {\n  request: '[TavernRegex][getTavernRegexes]';\n  option: Required<GetTavernRegexesOption>;\n}\n\ninterface IframeReplaceTavernRegexes extends IframeMessage {\n  request: '[TavernRegex][replaceTavernRegexes]';\n  regexes: TavernRegex[];\n  option: Required<ReplaceTavernRegexesOption>;\n}\n\nexport function isCharacterTavernRegexEnabled(): boolean {\n  // @ts-ignore 2345\n  return extension_settings?.character_allowed_regex?.includes(characters?.[this_chid]?.avatar);\n}\n\nexport function getGlobalRegexes(): RegexScriptData[] {\n  return extension_settings.regex ?? [];\n}\n\nexport function getCharacterRegexes(): RegexScriptData[] {\n  return characters[this_chid]?.data?.extensions?.regex_scripts ?? [];\n}\n\nfunction toTavernRegex(regex_script_data: RegexScriptData, scope: 'global' | 'character'): TavernRegex {\n  return {\n    id: regex_script_data.id,\n    script_name: regex_script_data.scriptName,\n    enabled: !regex_script_data.disabled,\n    run_on_edit: regex_script_data.runOnEdit,\n    scope: scope,\n\n    find_regex: regex_script_data.findRegex,\n    replace_string: regex_script_data.replaceString,\n\n    source: {\n      user_input: regex_script_data.placement.includes(regex_placement.USER_INPUT),\n      ai_output: regex_script_data.placement.includes(regex_placement.AI_OUTPUT),\n      slash_command: regex_script_data.placement.includes(regex_placement.SLASH_COMMAND),\n      world_info: regex_script_data.placement.includes(regex_placement.WORLD_INFO),\n    },\n\n    destination: {\n      display: regex_script_data.markdownOnly,\n      prompt: regex_script_data.promptOnly,\n    },\n\n    min_depth: typeof regex_script_data.minDepth === 'number' ? regex_script_data.minDepth : null,\n    max_depth: typeof regex_script_data.maxDepth === 'number' ? regex_script_data.maxDepth : null,\n  };\n}\n\nfunction fromTavernRegex(tavern_regex: TavernRegex): RegexScriptData {\n  return {\n    id: tavern_regex.id,\n    scriptName: tavern_regex.script_name,\n    disabled: !tavern_regex.enabled,\n    runOnEdit: tavern_regex.run_on_edit,\n\n    findRegex: tavern_regex.find_regex,\n    replaceString: tavern_regex.replace_string,\n    trimStrings: [], // TODO: handle this?\n\n    placement: [\n      ...(tavern_regex.source.user_input ? [regex_placement.USER_INPUT] : []),\n      ...(tavern_regex.source.ai_output ? [regex_placement.AI_OUTPUT] : []),\n      ...(tavern_regex.source.slash_command ? [regex_placement.SLASH_COMMAND] : []),\n      ...(tavern_regex.source.world_info ? [regex_placement.WORLD_INFO] : []),\n    ],\n\n    substituteRegex: 0, // TODO: handle this?\n\n    // @ts-ignore\n    minDepth: tavern_regex.min_depth,\n    // @ts-ignore\n    maxDepth: tavern_regex.max_depth,\n\n    markdownOnly: tavern_regex.destination.display,\n    promptOnly: tavern_regex.destination.prompt,\n  };\n}\n\nexport function registerIframeTavernRegexHandler() {\n  registerIframeHandler(\n    '[TavernRegex][isCharacterTavernRegexesEnabled]',\n    async (event: MessageEvent<IframeIsCharacterTavernRegexEnabled>): Promise<boolean> => {\n      const result = isCharacterTavernRegexEnabled();\n\n      console.info(`${getLogPrefix(event)}查询到局部正则${result ? '被启用' : '被禁用'}`);\n      return result;\n    },\n  );\n\n  registerIframeHandler(\n    '[TavernRegex][getTavernRegexes]',\n    async (event: MessageEvent<IframeGetTavernRegexes>): Promise<TavernRegex[]> => {\n      const option = event.data.option;\n\n      if (!['all', 'enabled', 'disabled'].includes(option.enable_state)) {\n        throw Error(\n          `提供的 enable_state 无效, 请提供 'all', 'enabled' 或 'disabled', 你提供的是: ${option.enable_state}`,\n        );\n      }\n      if (!['all', 'global', 'character'].includes(option.scope)) {\n        throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${option.scope}`);\n      }\n\n      let regexes: TavernRegex[] = [];\n      if (option.scope === 'all' || option.scope === 'global') {\n        regexes = [...regexes, ...getGlobalRegexes().map(regex => toTavernRegex(regex, 'global'))];\n      }\n      if (option.scope === 'all' || option.scope === 'character') {\n        regexes = [...regexes, ...getCharacterRegexes().map(regex => toTavernRegex(regex, 'character'))];\n      }\n      if (option.enable_state !== 'all') {\n        regexes = regexes.filter(regex => regex.enabled === (option.enable_state === 'enabled'));\n      }\n\n      console.info(`${getLogPrefix(event)}获取酒馆正则数据, 选项: ${JSON.stringify(option)}`);\n      return regexes;\n    },\n  );\n\n  registerIframeHandler(\n    '[TavernRegex][replaceTavernRegexes]',\n    async (event: MessageEvent<IframeReplaceTavernRegexes>): Promise<void> => {\n      const regexes = event.data.regexes;\n      const option = event.data.option;\n      if (!['all', 'global', 'character'].includes(option.scope)) {\n        throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${option.scope}`);\n      }\n\n      // FIXME: `trimStrings` and `substituteRegex` are not considered\n      const emptied_regexes = regexes.filter(regex => regex.script_name == '');\n      if (emptied_regexes.length > 0) {\n        throw Error(`不能将酒馆正则的名称设置为空字符串:\\n${JSON.stringify(emptied_regexes.map(regex => regex.id))}`);\n      }\n      const [global_regexes, character_regexes] = partition(regexes, regex => regex.scope === 'global').map(regexes =>\n        regexes.map(fromTavernRegex),\n      );\n\n      const character = characters[this_chid];\n      if (option.scope === 'all' || option.scope === 'global') {\n        extension_settings.regex = global_regexes;\n      }\n      if (option.scope === 'all' || option.scope === 'character') {\n        if (character) {\n          characters[this_chid].data.extensions.regex_scripts = character_regexes;\n          await writeExtensionField(this_chid, 'regex_scripts', character_regexes);\n        }\n      }\n      await saveSettings();\n      if (character) {\n        await saveChatConditional();\n      }\n      await reloadCurrentChat();\n\n      console.info(`${getLogPrefix(event)}替换酒馆正则\\\n${\n  option.scope === 'all' || option.scope === 'global'\n    ? `, 全局正则:\\n${JSON.stringify(global_regexes, undefined, 2)}`\n    : ``\n}\\\n${\n  option.scope === 'all' || option.scope === 'character'\n    ? `, 局部正则:\\n${JSON.stringify(character_regexes, undefined, 2)}`\n    : ``\n}`);\n    },\n  );\n}\n","import { getCharacterRegexes, getGlobalRegexes, isCharacterTavernRegexEnabled } from '@/iframe_server/tavern_regex';\n\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\n\nexport interface Script {\n  name: string;\n  code: string;\n}\n\nexport function loadScripts(prefix: string): Script[] {\n  const filterScriptFromRegex = (script: RegexScriptData) =>\n    script.scriptName.replace(/^【.*】/, '').startsWith(prefix);\n  const isEnabled = (script: RegexScriptData) => !script.disabled;\n  const toName = (script: RegexScriptData) => script.scriptName.replace(/^【.*】/, '').replace(prefix, '');\n\n  let scripts: RegexScriptData[] = [];\n\n  const enabled_global_regexes = getGlobalRegexes().filter(filterScriptFromRegex).filter(isEnabled);\n  scripts.push(...enabled_global_regexes);\n\n  const enabled_character_regexes = getCharacterRegexes()\n    .filter(filterScriptFromRegex)\n    .filter(isEnabled)\n    .filter(script => (isCharacterTavernRegexEnabled() ? true : script.runOnEdit));\n  scripts.push(...enabled_character_regexes);\n\n  const to_script = (script: RegexScriptData) => ({ name: toName(script), code: script.replaceString });\n  return scripts.map(to_script);\n}\n\nexport function is_equal_scripts(lhs: Script[], rhs: Script[]): boolean {\n  if (lhs === rhs) {\n    return true;\n  }\n  if (lhs == null || rhs == null) {\n    return false;\n  }\n  if (lhs.length !== rhs.length) {\n    return false;\n  }\n\n  for (let i = 0; i < lhs.length; i++) {\n    if (lhs[i].name !== rhs[i].name && lhs[i].code !== rhs[i].code) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { loadScripts } from '@/util/load_script';\n\nexport let libraries_text: string = '';\n\nexport function initialize(): void {\n  const libraries = loadScripts('库-');\n  console.info(`[Library] 加载库: ${JSON.stringify(libraries.map(library => library.name))}`);\n\n  libraries_text = libraries.map(script => script.code).join('\\n');\n}\n\nexport function destroy(): void {\n  libraries_text = '';\n}\n","import { extract } from '@/util/helper';\n\nfunction createObjectURLFromScript(code: string): string {\n  return URL.createObjectURL(new Blob([code], { type: 'application/javascript' }));\n}\n\nclass ScriptUrl {\n  private map: Map<string, string> = new Map();\n\n  public get(name: string): string | undefined {\n    return this.map.get(name);\n  }\n  public set(name: string, code: string): void {\n    this.map.set(name, createObjectURLFromScript(code));\n  }\n  public delete(name: string): string | undefined {\n    const url = extract(this.map, name);\n    if (!url) {\n      return url;\n    }\n    URL.revokeObjectURL(url);\n    return url;\n  }\n}\n\nexport let script_url = new ScriptUrl();\n","import { SetMultimap } from '@/util/multimap';\n\nexport function partition<T>(array: T[], predicate: (item: T) => boolean): [T[], T[]] {\n  return array.reduce(\n    ([pass, fail], item) => {\n      if (predicate(item)) {\n        pass.push(item);\n      } else {\n        fail.push(item);\n      }\n      return [pass, fail];\n    },\n    [[], []] as [T[], T[]],\n  );\n}\n\nexport function set_or_add<K1, K2, V>(map: Map<K1, SetMultimap<K2, V>>, k1: K1, k2: K2, v: V): boolean {\n  if (map.has(k1)) {\n    // @ts-ignore 2532\n    map.get(k1).put(k2, v);\n    return false;\n  }\n\n  map.set(k1, new SetMultimap([[k2, v]]));\n  return true;\n}\n\nexport function try_set<K, V>(map: Map<K, V>, key: K, value: V): boolean {\n  if (map.has(key)) {\n    return false;\n  }\n  map.set(key, value);\n  return true;\n}\n\nexport function get_or_set<K, V>(map: Map<K, V>, key: K, defaulter: () => V): V {\n  const existing_value = map.get(key);\n  if (existing_value) {\n    return existing_value;\n  }\n  const default_value = defaulter();\n  map.set(key, default_value);\n  return default_value;\n}\n\nexport function extract<K, V>(map: Map<K, V>, key: K): V | undefined {\n  const value = map.get(key);\n  if (!value) {\n    return undefined;\n  }\n  map.delete(key);\n  return value;\n}\n\nexport function with_fallback<T extends Object>(data: Partial<T>, fallback: T): T {\n  const result = { ...fallback };\n  for (const key in data) {\n    if (data[key] !== undefined) {\n      result[key] = data[key];\n    }\n  }\n  return result;\n}\n","// Module\nvar code = `<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\" integrity=\"sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/> <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/themes/base/jquery-ui.min.css\" integrity=\"sha512-TFee0335YRJoyiqz8hA8KV3P0tXa5CpRBSoM0Wnkn7JoJx1kaq1yXL/rb8YFpWXkMOjRcv5txv+C6UluttluCQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js\" integrity=\"sha512-Qlv6VSKh1gDKGoJbnyA5RMXYcvnpIqhO++MhIM2fStMcGT9i2T//tSwYFlcyoRRDcDZ+TYHpH8azBBCyhpSeqw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\" integrity=\"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js\" integrity=\"sha512-MSOo1aY+3pXCOCdGAYoBZ6YGI0aragoQsg1mKKBHXCYPIWxamwOE7Drh+N5CPgGI5SA9IEKJiPjdfqWFWmZtRA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js\" integrity=\"sha512-WFN04846sdKMIP5LKNphMaWzU7YpMyCU245etK3g/2ARYbPK9Ub18eG+ljU96qKRCWh+quCY7yefSmlkQw1ANQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/yamljs/0.3.0/yaml.min.js\" integrity=\"sha512-f/K0Q5lZ1SrdNdjc2BO2I5kTx8E5Uw1EU3PhSUB9fYPohap5rPWEmQRCjtpDxNmQB4/+MMI/Cf+nvh1VSiwrTA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> `;\n// Exports\nexport default code;","import { libraries_text } from '@/component/character_level/library';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { loadScripts, Script } from '@/util/load_script';\n\nlet script_map: Map<string, HTMLIFrameElement> = new Map();\n\nfunction makeScriptIframe(script: Script): { iframe: HTMLIFrameElement; load_promise: Promise<void> } {\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.id = `script-iframe-${script.name}`;\n\n  const srcdocContent = `\n    <html>\n    <head>\n      ${third_party}\n      <script src=\"${script_url.get('iframe_client')}\"></script>\n      ${libraries_text}\n    </head>\n    <body>\n      ${script.code}\n    </body>\n    </html>\n  `;\n\n  iframe.srcdoc = srcdocContent;\n\n  const load_promise = new Promise<void>(resolve => {\n    iframe.onload = () => {\n      console.info(`[Script](${iframe.id}) 加载完毕`);\n      resolve();\n    };\n  });\n\n  document.body.appendChild(iframe);\n\n  return { iframe, load_promise };\n}\n\nexport function destroy(): void {\n  if (script_map.size !== 0) {\n    console.log(`[Script] 清理全局脚本...`);\n    script_map.forEach((iframe, _) => {\n      iframe.remove();\n    });\n    script_map.clear();\n    console.log(`[Script] 全局脚本清理完成!`);\n  }\n}\n\nexport async function initialize(): Promise<void> {\n  try {\n    destroy();\n\n    const scripts = loadScripts('脚本-');\n    console.info(`[Script] 加载全局脚本: ${JSON.stringify(scripts.map(script => script.name))}`);\n\n    const load_promises: Promise<void>[] = [];\n\n    scripts.forEach(script => {\n      const { iframe, load_promise } = makeScriptIframe(script);\n      script_map.set(script.name, iframe);\n      load_promises.push(load_promise);\n    });\n\n    await Promise.allSettled(load_promises);\n  } catch (error) {\n    console.error('[Script] 全局脚本加载失败:', error);\n    throw error;\n  }\n}\n","import { destroy as destroyLibrary, initialize as initializeLibrary } from '@/component/character_level/library';\nimport {\n  destroy as destroyScriptIframe,\n  initialize as initializeScriptIframe,\n} from '@/component/character_level/script_iframe';\nimport { event_types, eventSource } from '@sillytavern/script';\n\nconst load_events = [event_types.CHAT_CHANGED] as const;\n\nlet app_ready = false;\nexport function initializeCharacterLevelOnExtension() {\n  const register_events = () => {\n    load_events.forEach(eventType => {\n      eventSource.makeFirst(eventType, initializeScriptIframe);\n      eventSource.makeFirst(eventType, initializeLibrary);\n    });\n  };\n\n  if (!app_ready) {\n    eventSource.once(event_types.APP_READY, () => {\n      app_ready = true;\n      initializeScriptIframe();\n      initializeLibrary();\n      register_events();\n    });\n  } else {\n    register_events();\n  }\n}\n\nexport function destroyCharacterLevelOnExtension() {\n  load_events.forEach(eventType => {\n    eventSource.removeListener(eventType, initializeScriptIframe);\n    eventSource.removeListener(eventType, initializeLibrary);\n  });\n  destroyScriptIframe();\n  destroyLibrary();\n}\n","import { libraries_text } from '@/component/character_level/library';\nimport { extensionName, getSettingValue } from '@/index';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\n\nimport {\n  characters,\n  eventSource,\n  event_types,\n  getThumbnailUrl,\n  reloadCurrentChat,\n  saveSettingsDebounced,\n  this_chid,\n  updateMessageBlock,\n  user_avatar,\n} from '@sillytavern/script';\nimport { extension_settings, getContext } from '@sillytavern/scripts/extensions';\n\nlet tampermonkeyMessageListener: ((event: MessageEvent) => void) | null = null;\nlet renderingOptimizeEnabled = false;\n\nconst iframeResizeObservers = new Map();\n\n// 保存原始高亮方法\nconst originalHighlightElement = hljs.highlightElement;\n\nconst RENDER_MODES = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n};\n\nexport const partialRenderEvents = [\n  event_types.CHARACTER_MESSAGE_RENDERED,\n  event_types.USER_MESSAGE_RENDERED,\n  event_types.MESSAGE_UPDATED,\n  event_types.MESSAGE_SWIPED,\n];\n\nexport const defaultIframeSettings = {\n  auto_enable_character_regex: true,\n  auto_disable_incompatible_options: true,\n  tampermonkey_compatibility: false,\n  process_depth: 0,\n  rendering_optimize: false,\n};\n\n// 获取头像原图\nexport const charsPath = '/characters/';\nexport const getUserAvatarPath = () => `./User Avatars/${user_avatar}`;\nexport const getCharAvatarPath = () => {\n  const thumbnailPath = getThumbnailUrl('avatar', characters[this_chid].avatar);\n  const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n  return charsPath + targetAvatarImg;\n};\n\n/**\n * 清理后，重新渲染所有iframe\n */\nexport async function clearAndRenderAllIframes() {\n  await clearAllIframe();\n  await reloadCurrentChat();\n  await renderAllIframes();\n}\n\n/**\n * 渲染所有iframe\n */\nexport async function renderAllIframes() {\n  await renderMessagesInIframes(RENDER_MODES.FULL);\n  console.log('[Render] 渲染所有iframe');\n}\n\n/**\n * 渲染部分iframe\n * @param mesId 消息ID\n */\nexport const renderPartialIframes = (mesId: string) => {\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n    const messageIndex = parseInt(mesId, 10);\n\n    if (messageIndex < depthOffset) {\n      return;\n    }\n  }\n\n  renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n\n  console.log('[Render] 渲染' + mesId + '号消息的iframe');\n};\n\n/**\n * 使用了min-height:vh时，自动调整iframe高度\n */\nexport const viewport_adjust_script = `\n$(window).on(\"message\", function (event) {\n    if (event.originalEvent.data.request === \"updateViewportHeight\") {\n        const newHeight = event.originalEvent.data.newHeight;\n        $(\"html\").css(\"--viewport-height\", newHeight + \"px\");\n    }\n});\n`;\n\n/**\n * 油猴脚本\n */\nexport const tampermonkey_script = `\nclass AudioManager {\n  constructor() {\n    this.currentlyPlaying = null;\n  }\n  handlePlay(audio) {\n    if (this.currentlyPlaying && this.currentlyPlaying !== audio) {\n      this.currentlyPlaying.pause();\n    }\n    window.parent.postMessage({\n      type: 'audioPlay',\n      iframeId: window.frameElement.id\n    }, '*');\n\n    this.currentlyPlaying = audio;\n  }\n  stopAll() {\n    if (this.currentlyPlaying) {\n      this.currentlyPlaying.pause();\n      this.currentlyPlaying = null;\n    }\n  }\n}\nconst audioManager = new AudioManager();\n$('.qr-button').on('click', function() {\n  const buttonName = $(this).text().trim();\n  window.parent.postMessage({ type: 'buttonClick', name: buttonName }, '*');\n});\n$('.st-text').each(function() {\n  $(this).on('input', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  $(this).on('change', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  const textarea = this;\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n        window.parent.postMessage({ type: 'textInput', text: $(textarea).val() }, '*');\n      }\n    });\n  });\n  observer.observe(textarea, { attributes: true });\n});\n$('.st-send-button').on('click', function() {\n  window.parent.postMessage({ type: 'sendClick' }, '*');\n});\n$('.st-audio').on('play', function() {\n  audioManager.handlePlay(this);\n});\n$(window).on('message', function(event) {\n  if (event.originalEvent.data.type === 'stopAudio' &&\n    event.originalEvent.data.iframeId !== window.frameElement.id) {\n    audioManager.stopAll();\n  }\n});\n`;\n\n/**\n * 转换代码块中的min-height:vh\n * @param htmlContent 代码块内容\n * @returns 转换后的代码块内容\n */\nfunction processVhUnits(htmlContent: string) {\n  const hasMinVh = /min-height:\\s*[^;]*vh/.test(htmlContent);\n\n  if (!hasMinVh) {\n    return htmlContent;\n  }\n\n  const viewportHeight = window.innerHeight;\n  const processedContent = htmlContent.replace(/min-height:\\s*([^;]*vh[^;]*);/g, expression => {\n    const processedExpression = expression.replace(\n      /(\\d+)vh/g,\n      `calc(var(--viewport-height, ${viewportHeight}px) * $1 / 100)`,\n    );\n    return `${processedExpression};`;\n  });\n\n  return processedContent;\n}\n\n/**\n * 使用了min-height:vh时，更新iframe的viewport高度\n */\nfunction updateIframeViewportHeight() {\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      const viewportHeight = window.innerHeight;\n      $('iframe[data-needs-vh=\"true\"]').each(function () {\n        const iframe = this as HTMLIFrameElement;\n        if (iframe.contentWindow) {\n          iframe.contentWindow.postMessage(\n            {\n              request: 'updateViewportHeight',\n              newHeight: viewportHeight,\n            },\n            '*',\n          );\n        }\n      });\n    }\n  });\n}\n\n/**\n * 渲染消息到iframe\n * @param mode 渲染模式\n * @param specificMesId 指定消息ID\n */\nasync function renderMessagesInIframes(mode = RENDER_MODES.FULL, specificMesId: string | null = null) {\n  if (!getSettingValue('activate_setting')) {\n    return;\n  }\n\n  const context = getContext();\n  const totalMessages = context.chat.length;\n  const processDepth = parseInt($('#process_depth').val() as string, 10) || 0;\n  const depthLimit = processDepth > 0 ? processDepth : totalMessages;\n  const depthLimitedMessageIds = [...Array(totalMessages).keys()].slice(-depthLimit);\n\n  let messagesToRenderIds: number[] = [];\n  let messagesToCancelIds: number[] = [...Array(totalMessages).keys()].filter(\n    id => !depthLimitedMessageIds.includes(id),\n  );\n\n  if (mode === RENDER_MODES.FULL) {\n    messagesToRenderIds = depthLimitedMessageIds;\n  } else if (mode === RENDER_MODES.PARTIAL && specificMesId !== null) {\n    const specificIdNum = parseInt(specificMesId, 10);\n\n    if (depthLimitedMessageIds.includes(specificIdNum)) {\n      messagesToRenderIds = [specificIdNum];\n    } else {\n      return;\n    }\n  }\n\n  for (const messageId of messagesToCancelIds) {\n    const message = context.chat[messageId];\n    const $iframes = $(`[id^=\"message-iframe-${messageId}-\"]`);\n    if ($iframes.length > 0) {\n      await Promise.all(\n        $iframes.toArray().map(async iframe => {\n          destroyIframe(iframe as HTMLIFrameElement);\n        }),\n      );\n      updateMessageBlock(messageId, message);\n      addCodeToggleButtons(messageId);\n    }\n  }\n\n  const renderedMessages = [];\n  for (const messageId of messagesToRenderIds) {\n    const $messageElement = $(`.mes[mesid=\"${messageId}\"]`);\n    if (!$messageElement.length) {\n      console.debug(`未找到 mesid: ${messageId} 对应的消息元素。`);\n      continue;\n    }\n\n    const $codeElements = $messageElement.find('pre');\n    if (!$codeElements.length) {\n      continue;\n    }\n\n    let iframeCounter = 1;\n\n    $codeElements.each(function () {\n      let extractedText = extractTextFromCode(this);\n      if (!extractedText.includes('<body') || !extractedText.includes('</body>')) {\n        if (renderingOptimizeEnabled) {\n          addCodeToggleButtons(messageId);\n        }\n        return;\n      }\n      const disableLoading = /<!--\\s*disable-default-loading\\s*-->/.test(extractedText);\n      const hasMinVh = /min-height:\\s*[^;]*vh/.test(extractedText);\n      extractedText = hasMinVh ? processVhUnits(extractedText) : extractedText;\n\n      const $wrapper = $('<div>').css({\n        position: 'relative',\n        width: '100%',\n      });\n\n      const $iframe = $('<iframe>')\n        .attr({\n          id: `message-iframe-${messageId}-${iframeCounter}`,\n          srcdoc: '',\n          loading: 'lazy',\n        })\n        .css({\n          margin: '5px auto',\n          border: 'none',\n          width: '100%',\n        });\n\n      iframeCounter++;\n\n      if (hasMinVh) {\n        $iframe.attr('data-needs-vh', 'true');\n      }\n\n      let loadingTimeout: NodeJS.Timeout | null = null;\n      if (!disableLoading) {\n        const $loadingOverlay = $('<div>').addClass('iframe-loading-overlay').html(`\n            <div class=\"iframe-loading-content\">\n              <i class=\"fa-solid fa-spinner fa-spin\"></i>\n              <span class=\"loading-text\">Loading...</span>\n            </div>`);\n\n        loadingTimeout = setTimeout(() => {\n          const $loadingText = $loadingOverlay.find('.loading-text');\n          if ($loadingText.length) {\n            $loadingText.text('如加载时间过长，请检查网络');\n          }\n        }, 10000);\n\n        $wrapper.append($loadingOverlay);\n      }\n\n      $wrapper.append($iframe);\n\n      const srcdocContent = `\n        <html>\n        <head>\n          <style>\n          ${hasMinVh ? `:root{--viewport-height:${window.innerHeight}px;}` : ``}\n          html,body{margin:0;padding:0;overflow:hidden;max-width:100%!important;box-sizing:border-box}\n          .user_avatar,.user-avatar{background-image:url('${getUserAvatarPath()}')}\n          .char_avatar,.char-avatar{background-image:url('${getCharAvatarPath()}')}\n          </style>\n          ${third_party}\n          <script src=\"${script_url.get('iframe_client')}\"></script>\n          ${libraries_text}\n        </head>\n        <body>\n          ${extractedText}\n          ${hasMinVh ? `<script src=\"${script_url.get('viewport_adjust_script')}\"></script>` : ``}\n          ${\n            extension_settings[extensionName].render.tampermonkey_compatibility\n              ? `<script src=\"${script_url.get('tampermonkey_script')}\"></script>`\n              : ``\n          }\n        </body>\n        </html>\n      `;\n      $iframe.attr('srcdoc', srcdocContent);\n\n      $iframe.on('load', function () {\n        observeIframeContent(this as HTMLIFrameElement);\n\n        const $wrapper = $(this).parent();\n        if ($wrapper.length) {\n          const $loadingOverlay = $wrapper.find('.iframe-loading-overlay');\n          if ($loadingOverlay.length) {\n            $loadingOverlay.css('opacity', '0');\n            setTimeout(() => $loadingOverlay.remove(), 300);\n          }\n        }\n\n        if ($(this).attr('data-needs-vh') === 'true') {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                request: 'updateViewportHeight',\n                newHeight: window.innerHeight,\n              },\n              '*',\n            );\n          }\n        }\n\n        eventSource.emitAndWait('message_iframe_render_ended', this.id);\n\n        if (renderingOptimizeEnabled) {\n          removeCodeToggleButtonsByMesId(messageId);\n        }\n\n        if (loadingTimeout) {\n          clearTimeout(loadingTimeout);\n        }\n      });\n\n      eventSource.emitAndWait('message_iframe_render_started', $iframe.attr('id'));\n      $(this).replaceWith($wrapper);\n    });\n\n    renderedMessages.push(messageId);\n  }\n}\n\n/**\n * 观察iframe内容用于自动调整高度\n * @param iframe iframe元素\n */\nfunction observeIframeContent(iframe) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n  const docBody = $iframe[0].contentWindow.document.body;\n  const iframeId = $iframe.attr('id');\n\n  let resizeObserver = null;\n\n  adjustIframeHeight(iframe);\n\n  try {\n    if (window.ResizeObserver) {\n      resizeObserver = new ResizeObserver(() => {\n        adjustIframeHeight(iframe);\n      });\n      resizeObserver.observe(docBody);\n\n      if (iframeId) {\n        iframeResizeObservers.set(iframeId, resizeObserver);\n      }\n    }\n  } catch (e) {\n    console.error('ResizeObserver初始化错误:', e);\n  }\n\n  iframe.cleanup = () => {\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      if (iframeId) {\n        iframeResizeObservers.delete(iframeId);\n      }\n    }\n  };\n}\n\n/**\n * 销毁iframe\n * @param iframe iframe元素\n */\nfunction destroyIframe(iframe) {\n  const $iframe = $(iframe);\n\n  if (!$iframe.length) {\n    return;\n  }\n\n  const iframeId = $iframe.attr('id');\n\n  $iframe.off();\n\n  try {\n    if ($iframe[0].contentWindow) {\n      const iframeDoc = $iframe[0].contentWindow.document;\n      if (iframeDoc) {\n        $(iframeDoc).find('*').off();\n        $(iframeDoc).off();\n      }\n    }\n  } catch (e) {\n    console.debug('清理iframe内部事件时出错:', e);\n  }\n\n  try {\n    const $mediaElements = $iframe.contents().find('audio, video');\n    $mediaElements.each(function () {\n      if (this instanceof HTMLMediaElement) {\n        this.pause();\n        this.src = '';\n        this.load();\n        $(this).off();\n      }\n    });\n  } catch (e) {\n    console.debug('清理媒体元素时出错:', e);\n  }\n\n  if ($iframe[0].contentWindow && 'stop' in $iframe[0].contentWindow) {\n    $iframe[0].contentWindow.stop();\n  }\n\n  // 清空iframe内容\n  if ($iframe[0].contentWindow) {\n    try {\n      if (iframeId && typeof eventSource.removeListener === 'function') {\n        eventSource.removeListener('message_iframe_render_ended', iframeId);\n        eventSource.removeListener('message_iframe_render_started', iframeId);\n      }\n\n      $iframe.attr('src', 'about:blank');\n    } catch (e) {\n      console.debug('清空iframe内容时出错:', e);\n    }\n  }\n\n  // 断开ResizeObserver连接\n  if (iframe.cleanup && typeof iframe.cleanup === 'function') {\n    iframe.cleanup();\n  } else if (iframeId && iframeResizeObservers.has(iframeId)) {\n    const observer = iframeResizeObservers.get(iframeId);\n    observer.disconnect();\n    iframeResizeObservers.delete(iframeId);\n  }\n\n  // 从DOM中移除并清除引用\n  const $clone = $iframe.clone(false);\n  if ($iframe.parent().length) {\n    $iframe.replaceWith($clone);\n  }\n  if ($clone.parent().length) {\n    $clone.remove();\n  }\n\n  // 移除jQuery数据缓存\n  try {\n    $iframe.removeData();\n  } catch (e) {\n    console.debug('移除jQuery数据缓存时出错:', e);\n  }\n\n  // 清空iframe的属性\n  for (let prop in iframe) {\n    if (iframe.hasOwnProperty(prop)) {\n      try {\n        iframe[prop] = null;\n      } catch (e) {}\n    }\n  }\n\n  return null;\n}\n\n/**\n * 清理所有iframe\n * @returns {Promise<void>}\n */\nexport async function clearAllIframe(): Promise<void> {\n  const $iframes = $('iframe[id^=\"message-iframe\"]');\n  $iframes.each(function () {\n    destroyIframe(this);\n  });\n\n  // 清理相关的事件监听器\n  try {\n    if (typeof eventSource.removeAllListeners === 'function') {\n      eventSource.removeListener('message_iframe_render_started');\n      eventSource.removeListener('message_iframe_render_ended');\n    }\n  } catch (e) {\n    console.debug('清理事件监听器时出错:', e);\n  }\n\n  // 清理全局缓存\n  try {\n    $.cache = {};\n  } catch (e) {}\n\n  // 尝试主动触发垃圾回收\n  try {\n    let arr = [];\n    for (let i = 0; i < 10; i++) {\n      arr.push(new Array(1000000).fill(1));\n    }\n    arr = null;\n\n    if (window.gc) {\n      window.gc();\n    }\n  } catch (e) {\n    console.debug('尝试触发垃圾回收时出错:', e);\n  }\n}\n\n/**\n * 处理油猴脚本兼容模式传来的消息\n * @param event 消息事件\n */\nfunction handleTampermonkeyMessages(event: MessageEvent): void {\n  if (event.data.type === 'buttonClick') {\n    const buttonName = event.data.name;\n    $('.qr--button.menu_button').each(function () {\n      if ($(this).find('.qr--button-label').text().trim() === buttonName) {\n        $(this).trigger('click');\n        return false;\n      }\n    });\n  } else if (event.data.type === 'textInput') {\n    const $sendTextarea = jQuery('#send_textarea');\n    if ($sendTextarea.length) {\n      $sendTextarea.val(event.data.text).trigger('input').trigger('change');\n    }\n  } else if (event.data.type === 'sendClick') {\n    const $sendButton = jQuery('#send_but');\n    if ($sendButton.length) {\n      $sendButton.trigger('click');\n    }\n  }\n}\n\n/**\n * 油猴兼容模式-创建全局音频管理器\n */\nfunction createGlobalAudioManager() {\n  let currentPlayingIframeId: string | null = null;\n\n  window.addEventListener('message', function (event) {\n    if (event.data.type === 'audioPlay') {\n      const newIframeId = event.data.iframeId;\n\n      if (currentPlayingIframeId && currentPlayingIframeId !== newIframeId) {\n        $('iframe').each(function () {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                type: 'stopAudio',\n                iframeId: newIframeId,\n              },\n              '*',\n            );\n          }\n        });\n      }\n\n      currentPlayingIframeId = newIframeId;\n    }\n  });\n}\n\n/**\n * 调整iframe高度\n * @param iframe iframe元素\n */\nfunction adjustIframeHeight(iframe) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n\n  const doc = $iframe[0].contentWindow.document;\n\n  const bodyHeight = doc.body.offsetHeight;\n  const htmlHeight = doc.documentElement.offsetHeight;\n\n  const newHeight = Math.max(bodyHeight, htmlHeight);\n  const currentHeight = parseFloat($iframe.css('height')) || 0;\n\n  if (Math.abs(currentHeight - newHeight) > 5) {\n    $iframe.css('height', newHeight + 'px');\n\n    if ($iframe.attr('data-needs-vh') === 'true' && iframe.contentWindow) {\n      iframe.contentWindow.postMessage(\n        {\n          request: 'updateViewportHeight',\n          newHeight: window.innerHeight,\n        },\n        '*',\n      );\n    }\n  }\n}\n\n/**\n * 提取代码块中的文本\n * @param codeElement 代码块元素\n * @returns 提取的文本\n */\nfunction extractTextFromCode(codeElement: HTMLElement) {\n  let textContent = '';\n\n  $(codeElement)\n    .contents()\n    .each(function () {\n      if (this.nodeType === Node.TEXT_NODE) {\n        textContent += this.textContent;\n      } else if (this.nodeType === Node.ELEMENT_NODE) {\n        textContent += extractTextFromCode(this as HTMLElement);\n      }\n    });\n\n  return textContent;\n}\n\n/**\n * 删除消息后重新渲染\n * @param mesId 消息ID\n */\nexport async function renderMessageAfterDelete(mesId: string) {\n  const context = getContext();\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const totalMessages = context.chat.length;\n  const maxRemainId = parseInt(mesId, 10) - 1;\n  // 考虑到高楼层的情况，深度为0时，只渲染最后一个消息\n  if (processDepth === 0) {\n    const message = context.chat[maxRemainId];\n\n    const hasCodeBlock = $(`div[mesid=\"${mesId}\"] .mes_block .mes_text`).find('pre').length > 0;\n    const $iframe = $('[id^=\"message-iframe-' + maxRemainId + '-\"]');\n\n    if (!hasCodeBlock && $iframe.length === 0) {\n      return;\n    }\n    destroyIframe($iframe);\n    updateMessageBlock(maxRemainId.toString(), message);\n    await renderPartialIframes(maxRemainId);\n  } else {\n    const startRenderIndex = totalMessages - processDepth;\n    for (let i = startRenderIndex; i <= maxRemainId; i++) {\n      const message = context.chat[i];\n      const hasCodeBlock = $(`div[mesid=\"${i}\"] .mes_block .mes_text`).find('pre').length > 0;\n      const $iframe = $('[id^=\"message-iframe-' + i + '-\"]');\n\n      if (!hasCodeBlock && $iframe.length === 0) {\n        continue;\n      }\n      destroyIframe($iframe);\n      updateMessageBlock(i.toString(), message);\n      await renderPartialIframes(i.toString());\n    }\n  }\n}\n\n/**\n * 处理油猴兼容性设置改变\n */\nasync function onTampermonkeyCompatibilityChange() {\n  const isEnabled = Boolean($('#tampermonkey_compatibility').prop('checked'));\n  extension_settings[extensionName].render.tampermonkey_compatibility = isEnabled;\n  saveSettingsDebounced();\n\n  if (!getSettingValue('activate_setting')) {\n    return;\n  }\n\n  if (isEnabled) {\n    if (!tampermonkeyMessageListener) {\n      tampermonkeyMessageListener = handleTampermonkeyMessages;\n      window.addEventListener('message', tampermonkeyMessageListener);\n      createGlobalAudioManager();\n    }\n  } else {\n    if (tampermonkeyMessageListener) {\n      window.removeEventListener('message', tampermonkeyMessageListener);\n      tampermonkeyMessageListener = null;\n    }\n  }\n  await clearAndRenderAllIframes();\n}\n\n/**\n * 处理深度输入改变时\n */\nasync function onDepthInput() {\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n\n  if (processDepth < 0) {\n    toastr.warning('处理深度不能为负数');\n    $('#process_depth').val(extension_settings[extensionName].render.process_depth);\n    return;\n  }\n\n  extension_settings[extensionName].render.process_depth = processDepth;\n\n  await clearAndRenderAllIframes();\n\n  saveSettingsDebounced();\n}\n\nexport const handlePartialRender = (mesId: string) => {\n  console.log('[Render] PARTIAL render event triggered for message ID:', mesId);\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n    const messageIndex = parseInt(mesId, 10);\n\n    if (messageIndex < depthOffset) {\n      return;\n    }\n  }\n\n  setTimeout(() => {\n    renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n  }, 100);\n};\n\n/**\n * 注入加载样式\n */\nexport function injectLoadingStyles() {\n  if ($('#iframe-loading-styles').length) return;\n\n  const styleSheet = $('<style>', {\n    id: 'iframe-loading-styles',\n    text: `\n      .iframe-loading-overlay{\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        background:rgba(0,0,0,.7);\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        z-index:1000;\n        transition:opacity .3s ease\n      }\n      .iframe-loading-content{\n        color:#fff;\n        display:flex;\n        align-items:center;\n        gap:10px;\n        font-size:16px\n      }\n      .iframe-loading-content i{\n        font-size:20px\n      }\n      .loading-text {\n        transition: opacity 0.3s ease;\n      }`,\n  });\n\n  $('head').append(styleSheet);\n}\n\n/**\n * 注入代码块隐藏样式\n */\nexport function injectCodeBlockHideStyles() {\n  var styleId = 'hidden-code-block-styles';\n  var style = document.getElementById(styleId);\n  if (!style) {\n    style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('id', styleId);\n    document.head.appendChild(style);\n  }\n  style.innerHTML = `\n    pre {\n      display: none;\n    }\n    .code-toggle-button {\n      display: inline-block;\n      margin: 5px 0;\n      padding: 5px 10px;\n      background-color: rgba(0, 0, 0, 0.1);\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 0.9em;\n      user-select: none;\n      transition: background-color 0.3s;\n    }\n    .code-toggle-button:hover {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n  `;\n}\n\n/**\n * 移除代码块隐藏样式\n */\nfunction removeCodeBlockHideStyles() {\n  var styleId = 'hidden-code-block-styles';\n  var style = document.getElementById(styleId);\n  if (style) {\n    style.remove();\n  }\n}\n\n/**\n * 为消息添加折叠控件\n * @param $mesText 消息文本元素\n */\nfunction addToggleButtonsToMessage($mesText) {\n  if ($mesText.find('.code-toggle-button').length > 0 || $mesText.find('pre').length === 0) {\n    return;\n  }\n\n  $mesText.find('pre').each(function () {\n    const $pre = $(this);\n    const $toggleButton = $('<div class=\"code-toggle-button\">显示代码块</div>');\n    const $tooltip = $(\n      '<div style=\"display: none; font-size: 0.8em; opacity: 0.8;\">取消选中前端助手的‘前端卡渲染优化’选项以关闭此折叠功能</div>',\n    );\n\n    $toggleButton.on('click', function () {\n      const isVisible = $pre.is(':visible');\n\n      if (isVisible) {\n        $pre.hide();\n        $(this).text('显示代码块');\n        $tooltip.hide();\n      } else {\n        $pre.show();\n        $(this).text('隐藏代码块');\n        $tooltip.show();\n      }\n    });\n\n    $pre.before($toggleButton);\n    $toggleButton.after($tooltip);\n  });\n}\n\n/**\n * 给所有消息添加折叠控件\n */\nexport function addCodeToggleButtonsToAllMessages() {\n  if (!extension_settings[extensionName].render.rendering_optimize) {\n    return;\n  }\n\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n\n  $chat.find('.mes .mes_block .mes_text').each(function () {\n    const $mesText = $(this);\n    addToggleButtonsToMessage($mesText);\n  });\n}\n\n/**\n * 根据mesId为消息添加折叠控件\n * @param mesId 消息ID\n */\nfunction addCodeToggleButtons(mesId: string) {\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n  const $mesText = $chat.find(`div[mesid=\"${mesId}\"] .mes_block .mes_text`);\n  addToggleButtonsToMessage($mesText);\n}\n\n/**\n * 根据mesId移除折叠控件\n * @param mesId 消息ID\n */\nfunction removeCodeToggleButtonsByMesId(mesId: string) {\n  $(`div[mesid=\"${mesId}\"] .code-toggle-button`).each(function () {\n    $(this).off('click').remove();\n  });\n}\n\n/**\n * 移除所有折叠控件\n */\nfunction removeAllCodeToggleButtons() {\n  $('.code-toggle-button').each(function () {\n    $(this).off('click').remove();\n  });\n  // 去掉所有pre的display:none\n  $('pre').css('display', 'block');\n}\n\n/**\n * 添加前端卡渲染优化设置\n */\nexport function addRenderingOptimizeSettings() {\n  injectCodeBlockHideStyles();\n  hljs.highlightElement = function (element) {};\n  addCodeToggleButtonsToAllMessages();\n}\n\n/**\n * 移除前端卡渲染优化设置\n */\nexport function removeRenderingOptimizeSettings() {\n  hljs.highlightElement = originalHighlightElement;\n  removeCodeBlockHideStyles();\n  removeAllCodeToggleButtons();\n}\n\n/**\n * 处理重型前端卡渲染优化\n * @param userInput 是否由用户手动触发\n */\nasync function renderingOptimizationChange(userInput: boolean = true) {\n  const isEnabled = Boolean($('#rendering_optimize').prop('checked'));\n  if (userInput) {\n    extension_settings[extensionName].render.rendering_optimize = isEnabled;\n    renderingOptimizeEnabled = isEnabled;\n    saveSettingsDebounced();\n  }\n\n  if (!getSettingValue('activate_setting')) {\n    return;\n  }\n\n  if (isEnabled) {\n    addRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  } else {\n    removeRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  }\n}\n\n/**\n * 初始化iframe控制面板\n */\nexport const initIframePanel = () => {\n  // 处理重型前端卡渲染优化\n  const renderingOptimizeEnabled = getSettingValue('render.rendering_optimize');\n  $('#rendering_optimize')\n    .prop('checked', renderingOptimizeEnabled)\n    .on('click', () => renderingOptimizationChange(true));\n\n  if (renderingOptimizeEnabled) {\n    renderingOptimizationChange(false);\n  }\n\n  // 处理油猴兼容性设置\n  const tampermonkeyEnabled = extension_settings[extensionName].render.tampermonkey_compatibility;\n  $('#tampermonkey_compatibility').prop('checked', tampermonkeyEnabled).on('click', onTampermonkeyCompatibilityChange);\n\n  if (tampermonkeyEnabled) {\n    onTampermonkeyCompatibilityChange();\n  }\n\n  // 处理处理深度设置\n  $('#process_depth')\n    .val(extension_settings[extensionName].render.process_depth || defaultIframeSettings.process_depth)\n    .on('input', onDepthInput);\n\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      updateIframeViewportHeight();\n    }\n  });\n  injectLoadingStyles();\n};\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"MacrosParser\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__.MacrosParser), [\"getLastMessageId\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__.getLastMessageId) });","import { getCharAvatarPath, getUserAvatarPath } from '@/component/message_iframe';\nimport { chat, chat_metadata, event_types, eventSource } from '@sillytavern/script';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { MacroFunction, MacrosParser } from '@sillytavern/scripts/macros';\n\nconst predefinedMacros = new Map<string, string | MacroFunction>([\n  ['userAvatarPath', getUserAvatarPath],\n  ['charAvatarPath', getCharAvatarPath],\n]);\n\n/**\n * 注册一个宏\n * @param {string} key - 宏的名称\n * @param {MacroFunction|string} value - 字符串或返回字符串的函数\n */\nexport function registerMacro(key: string, value: string | MacroFunction) {\n  MacrosParser.registerMacro(key, value);\n  console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n}\n\n/**\n * 注册所有预定义的宏\n */\nexport function registerAllMacros() {\n  for (const [key, value] of predefinedMacros.entries()) {\n    MacrosParser.registerMacro(key, value);\n    console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n  }\n}\n\n/**\n * 注销指定的宏\n * @param {string} key - 要注销的宏名称\n */\nexport function unregisterMacro(key: string) {\n  MacrosParser.unregisterMacro(key);\n  console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n}\n\n/**\n * 注销所有预定义的宏\n */\nexport function unregisterAllMacros() {\n  for (const key of predefinedMacros.keys()) {\n    MacrosParser.unregisterMacro(key);\n    console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n  }\n}\n\nfunction demacro(event_data: Parameters<ListenerType['chat_completion_prompt_ready']>[0]) {\n  const map = {\n    get_global_variable: extension_settings.variables.global,\n    get_chat_variable: (chat_metadata as { variables: Object }).variables,\n    get_message_variable:\n      chat\n        .filter(message => message.variables?.[message.swipe_id ?? 0] !== undefined)\n        .map(message => message.variables[message.swipe_id ?? 0])\n        .at(-1) ?? {},\n  };\n  event_data.chat.forEach(messages => {\n    messages.content = messages.content.replaceAll(\n      /\\{\\{(get_global_variable|get_chat_variable|get_message_variable)::(.*?)\\}\\}/g,\n      (_substring, type: keyof typeof map, path: string) => {\n        return JSON.stringify(_.get(map[type], path, null));\n      },\n    );\n  });\n}\n\nexport function initializeMacroOnExtension() {\n  eventSource.on(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n\nexport function destroyMacroOnExtension() {\n  eventSource.removeListener(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"selected_group\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__.selected_group) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"flushEphemeralStoppingStrings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.flushEphemeralStoppingStrings), [\"persona_description_positions\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.persona_description_positions), [\"power_user\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.power_user) });","import { extensionName } from '@/index';\n\nimport {\n  eventSource,\n  event_types,\n  saveSettingsDebounced,\n  reloadCurrentChat,\n  this_chid,\n  characters,\n} from '@sillytavern/script';\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { power_user } from '@sillytavern/scripts/power-user';\n\n/**\n * 自动为当前角色启用正则表达式规则\n */\nexport async function autoEnableCharacterRegex() {\n  if (this_chid === undefined) {\n    return;\n  }\n\n  if (selected_group) {\n    return;\n  }\n\n  const avatar = characters[this_chid].avatar;\n  if (!extension_settings.character_allowed_regex.includes(avatar)) {\n    extension_settings.character_allowed_regex.push(avatar);\n    reloadCurrentChat();\n  }\n\n  saveSettingsDebounced();\n}\n\n/**\n * 注册自动启用角色正则表达式的事件监听\n */\nexport async function registerAutoEnableCharacterRegex() {\n  eventSource.on(event_types.CHAT_CHANGED, autoEnableCharacterRegex);\n}\n\n/**\n * 取消注册自动启用角色正则表达式的事件监听\n */\nexport async function unregisterAutoEnableCharacterRegex() {\n  eventSource.removeListener(event_types.CHAT_CHANGED, autoEnableCharacterRegex);\n}\n\n/**\n * 处理自动启用角色正则表达式开关的点击事件\n */\nexport async function onAutoEnableCharacterRegexClick() {\n  const isEnabled = Boolean($('#auto_enable_character_regex').prop('checked'));\n  extension_settings[extensionName].auto_enable_character_regex = isEnabled;\n  if (isEnabled) {\n    registerAutoEnableCharacterRegex();\n  } else {\n    saveSettingsDebounced();\n  }\n}\n\n/**\n * 自动禁用不兼容的选项\n */\nexport async function autoDisableIncompatibleOptions() {\n  if (power_user.auto_fix_generated_markdown || power_user.trim_sentences || power_user.forbid_external_media) {\n    power_user.auto_fix_generated_markdown = false;\n    $('#auto_fix_generated_markdown').prop('checked', power_user.auto_fix_generated_markdown);\n\n    power_user.trim_sentences = false;\n    $('#trim_sentences_checkbox').prop('checked', power_user.trim_sentences);\n\n    power_user.forbid_external_media = false;\n    $('#forbid_external_media').prop('checked', power_user.forbid_external_media);\n  }\n  saveSettingsDebounced();\n}\n\n/**\n * 注册自动禁用不兼容选项的事件监听\n */\nexport async function registerAutoDisableIncompatibleOptions() {\n  eventSource.on(event_types.CHAT_CHANGED, autoDisableIncompatibleOptions);\n}\n\n/**\n * 取消注册自动禁用不兼容选项的事件监听\n */\nexport async function unregisterAutoDisableIncompatibleOptions() {\n  eventSource.removeListener(event_types.CHAT_CHANGED, autoDisableIncompatibleOptions);\n}\n\n/**\n * 处理自动禁用不兼容选项开关的点击事件\n */\nexport async function onAutoDisableIncompatibleOptions() {\n  const isEnabled = Boolean($('#auto_disable_incompatible_options').prop('checked'));\n  extension_settings[extensionName].auto_disable_incompatible_options = isEnabled;\n  if (isEnabled) {\n    registerAutoDisableIncompatibleOptions();\n  } else {\n    unregisterAutoDisableIncompatibleOptions();\n  }\n  saveSettingsDebounced();\n}\n\nexport async function initAutoSettings() {\n  // 处理自动启用角色正则表达式设置\n  const auto_enable_character_regex = extension_settings[extensionName].auto_enable_character_regex;\n  $('#auto_enable_character_regex')\n    .prop('checked', auto_enable_character_regex)\n    .on('click', onAutoEnableCharacterRegexClick);\n  if (auto_enable_character_regex) {\n    onAutoEnableCharacterRegexClick();\n  }\n  // 处理自动禁用不兼容选项设置\n  const auto_disable_incompatible_options = extension_settings[extensionName].auto_disable_incompatible_options;\n  $('#auto_disable_incompatible_options')\n    .prop('checked', auto_disable_incompatible_options)\n    .on('click', onAutoDisableIncompatibleOptions);\n  if (auto_disable_incompatible_options) {\n    onAutoDisableIncompatibleOptions();\n  }\n}\n","// TODO: 直接 '@/iframe_client/index?raw' 而将这些分文件模块化\nimport _impl from '@/iframe_client/_impl?raw';\nimport _multimap from '@/iframe_client/_multimap?raw';\nimport audio from '@/iframe_client/audio?raw';\nimport character from '@/iframe_client/character?raw';\nimport chat_message from '@/iframe_client/chat_message?raw';\nimport displayed_message from '@/iframe_client/displayed_message?raw';\nimport event from '@/iframe_client/event?raw';\nimport exported from '@/iframe_client/exported?raw';\nimport frontend_version from '@/iframe_client/frontend_version?raw';\nimport generate from '@/iframe_client/generate?raw';\nimport lorebook from '@/iframe_client/lorebook?raw';\nimport lorebook_entry from '@/iframe_client/lorebook_entry?raw';\nimport slash from '@/iframe_client/slash?raw';\nimport tavern_regex from '@/iframe_client/tavern_regex?raw';\nimport util from '@/iframe_client/util?raw';\nimport variables from '@/iframe_client/variables?raw';\n\nexport const iframe_client = [\n  _impl,\n  _multimap,\n  audio,\n  character,\n  chat_message,\n  displayed_message,\n  event,\n  exported,\n  frontend_version,\n  generate,\n  lorebook,\n  lorebook_entry,\n  slash,\n  tavern_regex,\n  util,\n  variables,\n].join('\\n');\n","import { charsPath } from '@/component/message_iframe';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { characters, getPastCharacterChats, getRequestHeaders, getThumbnailUrl, this_chid } from '@sillytavern/script';\n\ntype v1CharData = (typeof characters)[number];\n\ninterface IframeGetCharData extends IframeMessage {\n  request: '[Character][getCharData]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetAvatarPath extends IframeMessage {\n  request: '[Character][getCharAvatarPath]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetChatHistoryBrief extends IframeMessage {\n  request: '[Character][getChatHistoryBrief]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetChatHistoryDetail extends IframeMessage {\n  request: '[Character][getChatHistoryDetail]';\n  data: any[];\n  isGroupChat?: boolean;\n}\n\n/**\n * 角色卡管理类\n * 用于封装角色卡数据操作和提供便捷的访问方法\n */\nexport class Character {\n  /**\n   * v1CharData类型的角色卡数据\n   * @see char-data.js 中的 v1CharData 类型定义\n   */\n  private charData: v1CharData;\n\n  constructor(characterData: v1CharData) {\n    this.charData = characterData;\n  }\n\n  /**\n   * 根据名称或头像id查找角色卡数据\n   * @param options 查找选项\n   * @returns 找到的角色卡数据，找不到为null\n   */\n  static find({ name, allowAvatar = true }: { name?: string; allowAvatar?: boolean } = {}): any {\n    if (name === undefined) {\n      const currentChar = characters[this_chid];\n      if (currentChar) {\n        name = currentChar.avatar;\n        // 确保allowAvatar为true，以便可以通过avatar准确查找角色\n        allowAvatar = true;\n      }\n    }\n\n    const matches = (char: { avatar: string; name: string }) =>\n      !name || char.name === name || (allowAvatar && char.avatar === name);\n\n    let filteredCharacters = characters;\n\n    // 如果有确定的角色头像id提供，则返回该角色\n    if (allowAvatar && name) {\n      const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n      if (characterByAvatar) {\n        return characterByAvatar;\n      }\n    }\n\n    // 查找所有匹配的角色\n    const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n    if (matchingCharacters.length > 1) {\n      console.warn(`[Character] [findCharacter] 找到多个符合条件的角色，返回导入时间最早的角色: ${name}`);\n    }\n\n    if (matchingCharacters.length === 0) {\n      throw new Error(`[Character] [findCharacter] 提供的名称或头像ID为: ${name}，未找到符合条件的角色`);\n    }\n\n    return matchingCharacters[0];\n  }\n\n  /**\n   * 根据名称查找角色卡数据在characters数组中的索引（类似this_chid）\n   * @param name 角色名称\n   * @returns 角色卡数据在characters数组中的索引，未找到返回-1\n   */\n\n  static findCharacterIndex(name: string) {\n    const matchTypes = [\n      (a: string, b: string) => a === b,\n      (a: string, b: string) => a.startsWith(b),\n      (a: string, b: string) => a.includes(b),\n    ];\n\n    const exactAvatarMatch = characters.findIndex(x => x.avatar === name);\n\n    if (exactAvatarMatch !== -1) {\n      return exactAvatarMatch;\n    }\n\n    for (const matchType of matchTypes) {\n      const index = characters.findIndex(x => matchType(x.name.toLowerCase(), name.toLowerCase()));\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * 从服务器获取每个聊天文件的聊天内容，并将其编译成字典。\n   * 该函数遍历提供的聊天元数据列表，并请求每个聊天的实际聊天内容，\n   *\n   * @param {Array} data - 包含每个聊天的元数据的数组，例如文件名。\n   * @param {boolean} isGroupChat - 一个标志，指示聊天是否为群组聊天。\n   * @returns {Promise<Object>} chat_dict - 一个字典，其中每个键是文件名，值是\n   * 从服务器获取的相应聊天内容。\n   */\n  static async getChatsFromFiles(data: any[], isGroupChat: boolean) {\n    let chat_dict: Record<string, any> = {};\n    let chat_list = Object.values(data)\n      .sort((a, b) => a['file_name'].localeCompare(b['file_name']))\n      .reverse();\n\n    let chat_promise = chat_list.map(({ file_name }) => {\n      return new Promise<void>(async (res, _rej) => {\n        try {\n          // 从文件名中提取角色名称（破折号前的部分）\n          const ch_name = isGroupChat ? '' : file_name.split(' - ')[0];\n\n          // 使用Character.find方法查找角色，获取头像\n          let characterData = null;\n          let avatar_url = '';\n\n          if (!isGroupChat && ch_name) {\n            characterData = Character.find({ name: ch_name });\n            if (characterData) {\n              avatar_url = characterData.avatar;\n            }\n          }\n\n          const endpoint = isGroupChat ? '/api/chats/group/get' : '/api/chats/get';\n          const requestBody = isGroupChat\n            ? JSON.stringify({ id: file_name })\n            : JSON.stringify({\n                ch_name: ch_name,\n                file_name: file_name.replace('.jsonl', ''),\n                avatar_url: avatar_url,\n              });\n\n          const chatResponse = await fetch(endpoint, {\n            method: 'POST',\n            headers: getRequestHeaders(),\n            body: requestBody,\n            cache: 'no-cache',\n          });\n\n          if (!chatResponse.ok) {\n            return res();\n          }\n\n          const currentChat = await chatResponse.json();\n          if (!isGroupChat) {\n            // remove the first message, which is metadata, only for individual chats\n            currentChat.shift();\n          }\n          chat_dict[file_name] = currentChat;\n        } catch (error) {\n          console.error(error);\n        }\n\n        return res();\n      });\n    });\n\n    await Promise.all(chat_promise);\n\n    return chat_dict;\n  }\n\n  /**\n   * 获取角色管理内的数据\n   * @returns 完整的角色管理内的数据对象\n   */\n  getCardData(): v1CharData {\n    return this.charData;\n  }\n\n  /**\n   * 获取角色头像ID\n   * @returns 头像ID/文件名\n   */\n  getAvatarId(): string {\n    return this.charData.avatar || '';\n  }\n\n  /**\n   * 获取正则脚本\n   * @returns 正则脚本数组\n   */\n  getRegexScripts(): Array<{\n    id: string;\n    scriptName: string;\n    findRegex: string;\n    replaceString: string;\n    trimStrings: string[];\n    placement: number[];\n    disabled: boolean;\n    markdownOnly: boolean;\n    promptOnly: boolean;\n    runOnEdit: boolean;\n    substituteRegex: number | boolean;\n    minDepth: number;\n    maxDepth: number;\n  }> {\n    return this.charData.data?.extensions?.regex_scripts || [];\n  }\n\n  /**\n   * 获取角色书\n   * @returns 角色书数据对象或null\n   */\n  getCharacterBook(): {\n    name: string;\n    entries: Array<{\n      keys: string[];\n      secondary_keys?: string[];\n      comment: string;\n      content: string;\n      constant: boolean;\n      selective: boolean;\n      insertion_order: number;\n      enabled: boolean;\n      position: string;\n      extensions: any;\n      id: number;\n    }>;\n  } | null {\n    return this.charData.data?.character_book || null;\n  }\n\n  /**\n   * 获取角色世界名称\n   * @returns 世界名称\n   */\n  getWorldName(): string {\n    return this.charData.data?.extensions?.world || '';\n  }\n}\n\nexport function registerIframeCharacterHandler() {\n  function withCharacter<T>(\n    callback: (character: Character) => T,\n    defaultValue: T | null = null,\n    name?: string,\n    allowAvatar: boolean = true,\n  ): T | null {\n    const characterData = Character.find({ name, allowAvatar });\n    const character = characterData ? new Character(characterData) : null;\n    return character ? callback(character) : defaultValue;\n  }\n  // 通用包装函数，用于处理角色相关的iframe消息\n  function createCharacterHandler<T, E extends IframeMessage & { name?: string; allowAvatar?: boolean }>(\n    eventType: string,\n    handler: (character: Character, event: MessageEvent<E>) => T,\n    defaultValue: T | null = null,\n    logMessage?: (event: MessageEvent<E>, result: T | null, displayName?: string) => string,\n  ) {\n    registerIframeHandler(eventType, async (event: MessageEvent<E>): Promise<T | null> => {\n      const { name, allowAvatar = true } = event.data;\n\n      let displayName = name;\n      if (displayName === undefined) {\n        const currentChar = characters[this_chid];\n        if (currentChar) {\n          displayName = currentChar.name;\n        }\n      }\n\n      const result = withCharacter(character => handler(character, event), defaultValue, name, allowAvatar);\n\n      // 日志打印\n      if (logMessage) {\n        const logText = logMessage(event, null, displayName);\n        if (result instanceof Promise) {\n          result\n            .then(resolvedResult => {\n              console.info(`${getLogPrefix(event)}${logText}`, resolvedResult);\n            })\n            .catch(error => {\n              throw Error(`${getLogPrefix(event)}${logText} - 发生错误: ${error}`);\n            });\n        } else {\n          console.info(`${getLogPrefix(event)}${logText}`, result);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  createCharacterHandler<v1CharData, IframeGetCharData>(\n    '[Character][getCharData]',\n    character => character.getCardData(),\n    null,\n    (_event, _result, displayName) => `获取角色卡数据, 角色: ${displayName || '未知'}`,\n  );\n\n  createCharacterHandler<string, IframeGetAvatarPath>(\n    '[Character][getCharAvatarPath]',\n    character => {\n      const thumbnailPath = getThumbnailUrl('avatar', character.getAvatarId());\n      const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n      return charsPath + targetAvatarImg;\n    },\n    null,\n    (_event, _result, displayName) => `获取角色头像路径, 角色: ${displayName || '未知'}`,\n  );\n\n  createCharacterHandler<Promise<any[]>, IframeGetChatHistoryBrief>(\n    '[Character][getChatHistoryBrief]',\n    async character => {\n      const index = Character.findCharacterIndex(character.getAvatarId());\n      const chats = await getPastCharacterChats(index);\n      return chats;\n    },\n    null,\n    (_event, _result, displayName) => {\n      return `获取角色聊天历史摘要, 角色: ${displayName || '未知'}`;\n    },\n  );\n\n  registerIframeHandler(\n    '[Character][getChatHistoryDetail]',\n    async (event: MessageEvent<IframeGetChatHistoryDetail>) => {\n      const data = event.data.data;\n      const isGroupChat = event.data.isGroupChat || false;\n\n      try {\n        const result = await Character.getChatsFromFiles(data, isGroupChat);\n        console.info(`${getLogPrefix(event)}获取聊天文件详情`, result);\n        return result;\n      } catch (error) {\n        throw Error(`${getLogPrefix(event)}获取聊天文件详情 - 发生错误: ${error}`);\n      }\n    },\n  );\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"t\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__.t) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"NOTE_MODULE_NAME\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.NOTE_MODULE_NAME), [\"metadata_keys\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.metadata_keys), [\"shouldWIAddPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.shouldWIAddPrompt) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"ChatCompletion\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.ChatCompletion), [\"Message\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.Message), [\"MessageCollection\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.MessageCollection), [\"isImageInliningSupported\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.isImageInliningSupported), [\"oai_settings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.oai_settings), [\"prepareOpenAIMessages\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.prepareOpenAIMessages), [\"sendOpenAIRequest\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.sendOpenAIRequest), [\"setOpenAIMessageExamples\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setOpenAIMessageExamples), [\"setOpenAIMessages\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setOpenAIMessages), [\"setupChatCompletionPromptManager\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setupChatCompletionPromptManager) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"Prompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__.Prompt), [\"PromptCollection\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__.PromptCollection) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"createNewWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.createNewWorldInfo), [\"createWorldInfoEntry\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.createWorldInfoEntry), [\"deleteWIOriginalDataValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.deleteWIOriginalDataValue), [\"deleteWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.deleteWorldInfo), [\"getWorldInfoPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.getWorldInfoPrompt), [\"getWorldInfoSettings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.getWorldInfoSettings), [\"loadWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.loadWorldInfo), [\"originalWIDataKeyMap\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.originalWIDataKeyMap), [\"saveWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.saveWorldInfo), [\"selected_world_info\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.selected_world_info), [\"setWIOriginalDataValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.setWIOriginalDataValue), [\"setWorldInfoButtonClass\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.setWorldInfoButtonClass), [\"wi_anchor_position\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.wi_anchor_position), [\"world_info\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_info), [\"world_info_include_names\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_info_include_names), [\"world_names\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_names) });","import { IframeMessage, getIframeName, getLogPrefix, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  MAX_INJECTION_DEPTH,\n  activateSendButtons,\n  baseChatReplace,\n  characters,\n  chat,\n  chat_metadata,\n  cleanUpMessage,\n  countOccurrences,\n  deactivateSendButtons,\n  eventSource,\n  extension_prompt_roles,\n  extension_prompt_types,\n  getBiasStrings,\n  getCharacterCardFields,\n  getExtensionPromptRoleByName,\n  getMaxContextSize,\n  isOdd,\n  name1,\n  name2,\n  saveChatConditional,\n  saveSettingsDebounced,\n  setExtensionPrompt,\n  setGenerationProgress,\n  showSwipeButtons,\n  stopGeneration,\n  substituteParams,\n  this_chid,\n} from '@sillytavern/script';\nimport { NOTE_MODULE_NAME, metadata_keys, shouldWIAddPrompt } from '@sillytavern/scripts/authors-note';\nimport { extension_settings, getContext } from '@sillytavern/scripts/extensions';\nimport { getRegexedString, regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\nimport {\n  ChatCompletion,\n  Message,\n  MessageCollection,\n  isImageInliningSupported,\n  oai_settings,\n  prepareOpenAIMessages,\n  sendOpenAIRequest,\n  setOpenAIMessageExamples,\n  setOpenAIMessages,\n  setupChatCompletionPromptManager,\n} from '@sillytavern/scripts/openai';\nimport {\n  flushEphemeralStoppingStrings,\n  persona_description_positions,\n  power_user,\n} from '@sillytavern/scripts/power-user';\nimport { Prompt, PromptCollection } from '@sillytavern/scripts/PromptManager';\nimport { Stopwatch, getBase64Async } from '@sillytavern/scripts/utils';\nimport { getWorldInfoPrompt, wi_anchor_position, world_info_include_names } from '@sillytavern/scripts/world-info';\n\n// 在文件顶部添加 abortController 声明\nlet abortController = new AbortController();\n\ninterface IframeGenerate extends IframeMessage {\n  request: '[Generate][generate]';\n  config: GenerateConfig;\n}\n\ninterface IframeGenerateRaw extends IframeMessage {\n  request: '[Generate][generateRaw]';\n  config: GenerateRawConfig;\n}\n\nfunction fromOverrides(overrides: Overrides): detail.OverrideConfig {\n  return {\n    world_info_before: overrides.world_info_before,\n    persona_description: overrides.persona_description,\n    char_description: overrides.char_description,\n    char_personality: overrides.char_personality,\n    scenario: overrides.scenario,\n    world_info_after: overrides.world_info_after,\n    dialogue_examples: overrides.dialogue_examples,\n\n    with_depth_entries: overrides.chat_history?.with_depth_entries,\n    author_note: overrides.chat_history?.author_note,\n    chat_history: overrides.chat_history?.prompts,\n  };\n}\n\nfunction fromInjectionPrompt(inject: InjectionPrompt): detail.InjectionPrompt {\n  const position_map = {\n    before_prompt: 'BEFORE_PROMPT',\n    in_chat: 'IN_CHAT',\n    after_prompt: 'IN_PROMPT',\n    none: 'NONE',\n  } as const;\n  return {\n    role: inject.role,\n    content: inject.content,\n    position: position_map[inject.position],\n    depth: inject.depth,\n    scan: inject.should_scan,\n  };\n}\n\nfunction fromGenerateConfig(config: GenerateConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: true,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    overrides: config.overrides !== undefined ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects !== undefined ? config.injects.map(fromInjectionPrompt) : undefined,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n  };\n}\n\nfunction fromGenerateRawConfig(config: GenerateRawConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: false,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n    overrides: config.overrides ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects ? config.injects.map(fromInjectionPrompt) : undefined,\n    order: config.ordered_prompts,\n  };\n}\n\nnamespace detail {\n  export interface RolePrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  export interface InjectionPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n    position?: 'IN_PROMPT' | 'IN_CHAT' | 'BEFORE_PROMPT' | 'NONE';\n    depth?: number;\n    scan?: boolean;\n  }\n\n  export interface CustomPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  // 覆盖配置类型\n  export interface OverrideConfig {\n    world_info_before?: string; // 世界书（角色定义之前的部分）\n    persona_description?: string; // 用户描述\n    char_description?: string; // 角色描述\n    char_personality?: string; // 角色高级定义-性格\n    scenario?: string; // 场景\n    world_info_after?: string; // 世界书（角色定义之后的部分）\n    dialogue_examples?: string; // 角色高级定义-对话示例\n\n    with_depth_entries?: boolean; // 世界书深度\n    author_note?: string; // 作者注释\n    chat_history?: RolePrompt[]; // 聊天历史\n  }\n\n  // 内置提示词条目类型\n  export type BuiltinPromptEntry =\n    | 'world_info_before' // 世界书(角色定义前)\n    | 'persona_description' // 用户描述\n    | 'char_description' // 角色描述\n    | 'char_personality' // 角色性格\n    | 'scenario' // 场景\n    | 'world_info_after' // 世界书(角色定义后)\n    | 'dialogue_examples' // 对话示例\n    | 'chat_history' // 聊天历史\n    | 'user_input'; // 用户输入\n\n  // 生成参数类型\n  export interface GenerateParams {\n    user_input?: string;\n    use_preset?: boolean;\n    image?: File | string;\n    stream?: boolean;\n    overrides?: OverrideConfig;\n    max_chat_history?: number;\n    inject?: InjectionPrompt[];\n    order?: Array<BuiltinPromptEntry | CustomPrompt>;\n  }\n}\n\nconst type = 'quiet';\nconst dryRun = false;\n\nconst character_names_behavior = {\n  NONE: -1,\n  DEFAULT: 0,\n  COMPLETION: 1,\n  CONTENT: 2,\n};\n\nconst roleTypes: Record<\n  'system' | 'user' | 'assistant',\n  (typeof extension_prompt_roles)[keyof typeof extension_prompt_roles]\n> = {\n  system: extension_prompt_roles.SYSTEM,\n  user: extension_prompt_roles.USER,\n  assistant: extension_prompt_roles.ASSISTANT,\n};\nconst default_order: detail.BuiltinPromptEntry[] = [\n  'world_info_before',\n  'persona_description',\n  'char_description',\n  'char_personality',\n  'scenario',\n  'world_info_after',\n  'dialogue_examples',\n  'chat_history',\n  'user_input',\n];\n\nclass StreamingProcessor {\n  public generator: () => AsyncGenerator<{ text: string }, void, void>;\n  public stoppingStrings?: string[];\n  public result: string;\n  public isStopped: boolean;\n  public isFinished: boolean;\n  public abortController: AbortController;\n  private messageBuffer: string;\n\n  constructor() {\n    this.result = '';\n    this.messageBuffer = '';\n    this.isStopped = false;\n    this.isFinished = false;\n    this.generator = this.nullStreamingGeneration;\n    this.abortController = new AbortController();\n  }\n\n  onProgressStreaming(text: string, isFinal: boolean) {\n    // 计算增量文本\n    const newText = text.slice(this.messageBuffer.length);\n    this.messageBuffer = text;\n\n    let processedText = cleanUpMessage(newText, false, false, !isFinal, this.stoppingStrings);\n\n    const charsToBalance = ['*', '\"', '```'];\n    for (const char of charsToBalance) {\n      if (!isFinal && isOdd(countOccurrences(processedText, char))) {\n        const separator = char.length > 1 ? '\\n' : '';\n        processedText = processedText.trimEnd() + separator + char;\n      }\n    }\n\n    eventSource.emit('js_stream_token_received_fully', text);\n    eventSource.emit('js_stream_token_received_incrementally', processedText);\n\n    if (isFinal) {\n      const fullText = cleanUpMessage(text, false, false, false, this.stoppingStrings);\n      eventSource.emit('js_generation_ended', fullText);\n    }\n  }\n\n  onErrorStreaming() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n    this.isStopped = true;\n    unblockGeneration();\n    saveChatConditional();\n  }\n\n  async *nullStreamingGeneration(): AsyncGenerator<{ text: string }, void, void> {\n    throw Error('Generation function for streaming is not hooked up');\n  }\n\n  async generate() {\n    try {\n      const sw = new Stopwatch(1000 / power_user.streaming_fps);\n      const timestamps = [];\n\n      for await (const { text } of this.generator()) {\n        timestamps.push(Date.now());\n        if (this.isStopped) {\n          this.messageBuffer = '';\n          return;\n        }\n\n        this.result = text;\n        await sw.tick(() => this.onProgressStreaming(text, false));\n      }\n\n      if (!this.isStopped) {\n        this.onProgressStreaming(this.result, true);\n      } else {\n        this.messageBuffer = '';\n      }\n\n      const seconds = (timestamps[timestamps.length - 1] - timestamps[0]) / 1000;\n      console.warn(\n        `Stream stats: ${timestamps.length} tokens, ${seconds.toFixed(2)} seconds, rate: ${Number(\n          timestamps.length / seconds,\n        ).toFixed(2)} TPS`,\n      );\n    } catch (err) {\n      if (!this.isFinished) {\n        this.onErrorStreaming();\n        throw Error(`Generate method error: ${err}`);\n      }\n      this.messageBuffer = '';\n      return this.result;\n    }\n\n    this.isFinished = true;\n    return this.result;\n  }\n}\n\nasync function iframeGenerate({\n  user_input = '',\n  use_preset = true,\n  image = null,\n  overrides = undefined,\n  max_chat_history = undefined,\n  inject = [],\n  order = undefined,\n  stream = false,\n}: detail.GenerateParams = {}): Promise<string> {\n  //初始化\n  abortController = new AbortController();\n\n  // 1. 处理用户输入（正则，宏）\n  const processedUserInput = processUserInput(substituteParams(user_input), oai_settings) || '';\n\n  // 2. 准备过滤后的基础数据\n  const baseData = await prepareAndOverrideData(\n    {\n      overrides,\n      max_chat_history,\n      inject,\n      order,\n    },\n    processedUserInput,\n  );\n\n  // 3. 根据 use_preset 分流处理\n  const generate_data = use_preset\n    ? await handlePresetPath(baseData, processedUserInput, {\n        image,\n        overrides,\n        max_chat_history,\n        inject,\n        order,\n      })\n    : await handleCustomPath(\n        baseData,\n        {\n          image,\n          overrides,\n          max_chat_history,\n          inject,\n          order,\n        },\n        processedUserInput,\n      );\n  console.log('[Generate:发送提示词]', generate_data);\n  // 4. 根据 stream 参数决定生成方式\n  return await generateResponse(generate_data, stream);\n}\n\nasync function prepareAndOverrideData(\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const getOverrideContent = (identifier: string): string | detail.RolePrompt[] | undefined => {\n    if (!config.overrides) return undefined;\n    return config.overrides[identifier as keyof detail.OverrideConfig];\n  };\n\n  // 1. 处理角色卡高级定义角色备注 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config)) {\n    handleCharDepthPrompt();\n  }\n\n  // 2. 设置作者注释 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('author_note', config)) {\n    setAuthorNotePrompt(config);\n  }\n\n  // 3. 处理user角色描述 - 仅在chat_history和persona_description都未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('persona_description', config)) {\n    setPersonaDescriptionExtensionPrompt();\n  }\n\n  // 4. 获取角色卡基础字段\n  const {\n    description: rawDescription,\n    personality: rawPersonality,\n    persona: rawPersona,\n    scenario: rawScenario,\n    mesExamples: rawMesExamples,\n    system,\n    jailbreak,\n  } = getCharacterCardFields();\n\n  // 判断是否被过滤,如果被过滤返回空字符串,否则返回override的值或原始值\n  const description = isPromptFiltered('char_description', config)\n    ? ''\n    : getOverrideContent('char_description') ?? rawDescription;\n\n  const personality = isPromptFiltered('char_personality', config)\n    ? ''\n    : getOverrideContent('char_personality') ?? rawPersonality;\n\n  const persona = isPromptFiltered('persona_description', config)\n    ? ''\n    : getOverrideContent('persona_description') ?? rawPersona;\n\n  const scenario = isPromptFiltered('scenario', config) ? '' : getOverrideContent('scenario') ?? rawScenario;\n\n  const mesExamples = isPromptFiltered('dialogue_examples', config)\n    ? ''\n    : getOverrideContent('dialogue_examples') ?? rawMesExamples;\n\n  let mesExamplesArray = parseMesExamples(mesExamples);\n  let oaiMessageExamples = [];\n  oaiMessageExamples = setOpenAIMessageExamples(mesExamplesArray);\n\n  // 5. 获取偏置字符串\n  const { promptBias } = getBiasStrings(processedUserInput, type);\n\n  // 6. 处理自定义注入的提示词\n  if (config.inject) {\n    await handleInjectedPrompts(config);\n  }\n\n  // 7. 处理聊天记录\n  let oaiMessages = [];\n  if (config.overrides?.chat_history) {\n    oaiMessages = [...config.overrides.chat_history].reverse();\n  } else {\n    oaiMessages = setOpenAIMessages(await processChatHistory(chat));\n    if (config.max_chat_history !== undefined) {\n      oaiMessages = oaiMessages.slice(0, config.max_chat_history);\n    }\n  }\n\n  // 添加临时消息用于激活世界书\n  addTemporaryUserMessage(processedUserInput);\n  // 8. 处理世界信息\n  const worldInfo = await processWorldInfo(oaiMessages, config);\n\n  // 移除临时消息\n  removeTemporaryUserMessage();\n\n  // 9. 处理世界书消息示例\n  mesExamplesArray = !isPromptFiltered('dialogue_examples', config)\n    ? await processMessageExamples(mesExamplesArray, worldInfo.worldInfoExamples)\n    : [];\n\n  return {\n    characterInfo: {\n      description,\n      personality,\n      persona,\n      scenario,\n      system: system,\n      jailbreak: jailbreak,\n    },\n    chatContext: {\n      oaiMessages,\n      oaiMessageExamples,\n      promptBias,\n    },\n    worldInfo,\n  };\n}\n\n//处理角色卡中的深度提示词\nfunction handleCharDepthPrompt() {\n  const depthPromptText =\n    baseChatReplace(characters[this_chid]?.data?.extensions?.depth_prompt?.prompt?.trim(), name1, name2) || '';\n  const depthPromptDepth = characters[this_chid]?.data?.extensions?.depth_prompt?.depth ?? '4';\n  const depthPromptRole = getExtensionPromptRoleByName(\n    characters[this_chid]?.data?.extensions?.depth_prompt?.role ?? 'system',\n  );\n  setExtensionPrompt(\n    'DEPTH_PROMPT',\n    depthPromptText,\n    extension_prompt_types.IN_CHAT,\n    depthPromptDepth,\n    extension_settings.note.allowWIScan,\n    depthPromptRole,\n  );\n}\n//处理作者注释\nfunction setAuthorNotePrompt(config: detail.GenerateParams) {\n  const authorNoteOverride = config?.overrides?.author_note;\n  // @ts-ignore\n  let prompt = authorNoteOverride ?? $('#extension_floating_prompt').val();\n\n  setExtensionPrompt(\n    NOTE_MODULE_NAME,\n    prompt,\n    chat_metadata[metadata_keys.position],\n    chat_metadata[metadata_keys.depth],\n    extension_settings.note.allowWIScan,\n    chat_metadata[metadata_keys.role],\n  );\n}\n//用户角色描述提示词设置为提示词管理器之外的选项的情况\nfunction setPersonaDescriptionExtensionPrompt() {\n  const description = power_user.persona_description;\n  const INJECT_TAG = 'PERSONA_DESCRIPTION';\n  setExtensionPrompt(INJECT_TAG, '', extension_prompt_types.IN_PROMPT, 0);\n\n  if (!description || power_user.persona_description_position === persona_description_positions.NONE) {\n    return;\n  }\n\n  //当user信息在作者注释前后 - 仅在作者注释未被过滤时执行\n  const promptPositions = [persona_description_positions.BOTTOM_AN, persona_description_positions.TOP_AN];\n\n  if (promptPositions.includes(power_user.persona_description_position) && shouldWIAddPrompt) {\n    const originalAN = getContext().extensionPrompts[NOTE_MODULE_NAME].value;\n    const ANWithDesc =\n      power_user.persona_description_position === persona_description_positions.TOP_AN\n        ? `${description}\\n${originalAN}`\n        : `${originalAN}\\n${description}`;\n\n    setExtensionPrompt(\n      NOTE_MODULE_NAME,\n      ANWithDesc,\n      chat_metadata[metadata_keys.position],\n      chat_metadata[metadata_keys.depth],\n      extension_settings.note.allowWIScan,\n      chat_metadata[metadata_keys.role],\n    );\n  }\n\n  // user信息深度注入不依赖于作者注释的状态，直接应用\n  if (power_user.persona_description_position === persona_description_positions.AT_DEPTH) {\n    setExtensionPrompt(\n      INJECT_TAG,\n      description,\n      extension_prompt_types.IN_CHAT,\n      power_user.persona_description_depth,\n      true,\n      power_user.persona_description_role,\n    );\n  }\n}\nasync function handleInjectedPrompts(promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>) {\n  if (!promptConfig || !Array.isArray(promptConfig.inject)) return;\n\n  const injects = promptConfig.inject;\n\n  const positionMap = {\n    IN_PROMPT: extension_prompt_types.IN_PROMPT,\n    IN_CHAT: extension_prompt_types.IN_CHAT,\n    BEFORE_PROMPT: extension_prompt_types.BEFORE_PROMPT,\n    NONE: extension_prompt_types.NONE,\n  };\n\n  for (const inject of injects) {\n    const validatedInject = {\n      role: roleTypes[inject.role] ?? extension_prompt_roles.SYSTEM,\n      content: inject.content || '',\n      depth: Number(inject.depth) || 0,\n      scan: Boolean(inject.scan) || true,\n      position: positionMap[inject.position as keyof typeof positionMap] ?? extension_prompt_types.IN_CHAT,\n    };\n\n    // 设置用户自定义注入提示词\n    setExtensionPrompt(\n      `INJECTION-${inject.depth}-${inject.role}`,\n      validatedInject.content,\n      validatedInject.position,\n      validatedInject.depth,\n      validatedInject.scan,\n      validatedInject.role,\n    );\n  }\n}\n// 处理聊天记录\nasync function processChatHistory(chat: any[]) {\n  let coreChat = chat.filter(x => !x.is_system);\n\n  return await Promise.all(\n    coreChat.map(async (chatItem, index) => {\n      let message = chatItem.mes;\n      let regexType = chatItem.is_user ? regex_placement.USER_INPUT : regex_placement.AI_OUTPUT;\n\n      let regexedMessage = getRegexedString(message, regexType, {\n        isPrompt: true,\n        depth: coreChat.length - index - 1,\n      });\n\n      return {\n        ...chatItem,\n        mes: regexedMessage,\n        index,\n      };\n    }),\n  );\n}\n\n// 处理世界书\nasync function processWorldInfo(\n  oaiMessages: detail.RolePrompt[],\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const chatForWI = oaiMessages\n    .filter(x => x.role !== 'system')\n    .map(x => {\n      const name = x.role === 'user' ? name1 : name2;\n      return world_info_include_names ? `${name}: ${x.content}` : x.content;\n    })\n    .reverse();\n\n  const this_max_context = getMaxContextSize();\n  const { worldInfoString, worldInfoBefore, worldInfoAfter, worldInfoExamples, worldInfoDepth } =\n    await getWorldInfoPrompt(chatForWI, this_max_context, dryRun);\n\n  await clearInjectionPrompts(['customDepthWI']);\n\n  if (!isPromptFiltered('with_depth_entries', config)) {\n    processWorldInfoDepth(worldInfoDepth);\n  }\n\n  // 先检查是否被过滤，如果被过滤直接返回null\n  const finalWorldInfoBefore = isPromptFiltered('world_info_before', config)\n    ? null\n    : config.overrides?.world_info_before !== undefined\n    ? config.overrides.world_info_before\n    : worldInfoBefore;\n\n  const finalWorldInfoAfter = isPromptFiltered('world_info_after', config)\n    ? null\n    : config.overrides?.world_info_after !== undefined\n    ? config.overrides.world_info_after\n    : worldInfoAfter;\n\n  return {\n    worldInfoString,\n    worldInfoBefore: finalWorldInfoBefore,\n    worldInfoAfter: finalWorldInfoAfter,\n    worldInfoExamples,\n    worldInfoDepth: !isPromptFiltered('with_depth_entries', config) ? worldInfoDepth : null,\n  };\n}\n// 处理世界信息深度部分\nfunction processWorldInfoDepth(worldInfoDepth: any[]) {\n  if (Array.isArray(worldInfoDepth)) {\n    worldInfoDepth.forEach(entry => {\n      const joinedEntries = entry.entries.join('\\n');\n      setExtensionPrompt(\n        `customDepthWI-${entry.depth}-${entry.role}`,\n        joinedEntries,\n        extension_prompt_types.IN_CHAT,\n        entry.depth,\n        false,\n        entry.role,\n      );\n    });\n  }\n}\n// 处理世界书中示例前后\nasync function processMessageExamples(mesExamplesArray: string[], worldInfoExamples: any[]): Promise<string[]> {\n  // 处理世界信息中的示例\n  for (const example of worldInfoExamples) {\n    if (!example.content.length) continue;\n\n    const formattedExample = baseChatReplace(example.content, name1, name2);\n    const cleanedExample = parseMesExamples(formattedExample);\n\n    if (example.position === wi_anchor_position.before) {\n      mesExamplesArray.unshift(...cleanedExample);\n    } else {\n      mesExamplesArray.push(...cleanedExample);\n    }\n  }\n\n  return mesExamplesArray;\n}\n//处理对话示例格式\nfunction parseMesExamples(examplesStr: string) {\n  if (examplesStr.length === 0 || examplesStr === '<START>') {\n    return [];\n  }\n\n  if (!examplesStr.startsWith('<START>')) {\n    examplesStr = '<START>\\n' + examplesStr.trim();\n  }\n  const blockHeading = '<START>\\n';\n  const splitExamples = examplesStr\n    .split(/<START>/gi)\n    .slice(1)\n    .map(block => `${blockHeading}${block.trim()}\\n`);\n\n  return splitExamples;\n}\n//用户输入先正则处理\nfunction processUserInput(user_input: string, oai_settings: any) {\n  if (user_input === '') {\n    user_input = oai_settings.send_if_empty.trim();\n  }\n  return getRegexedString(user_input, regex_placement.USER_INPUT, {\n    isPrompt: true,\n    depth: 0,\n  });\n}\n//使用预设\nasync function handlePresetPath(\n  baseData: any,\n  processedUserInput: string,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  // prepareOpenAIMessages会从设置里读取场景因此临时覆盖\n  let originalScenario = null;\n\n  try {\n    const scenarioOverride = config?.overrides?.scenario;\n\n    if (scenarioOverride && characters && characters[this_chid]) {\n      // 保存原始场景\n      originalScenario = characters[this_chid].scenario || null;\n      characters[this_chid].scenario = scenarioOverride;\n    }\n    // 添加user消息(一次性)\n    const userMessageTemp = {\n      role: 'user',\n      content: processedUserInput,\n    };\n\n    if (config.image) {\n      userMessageTemp.image = await convertFileToBase64(config.image);\n    }\n\n    baseData.chatContext.oaiMessages.unshift(userMessageTemp);\n\n    const messageData = {\n      name2,\n      charDescription: baseData.characterInfo.description,\n      charPersonality: baseData.characterInfo.personality,\n      Scenario: baseData.characterInfo.scenario,\n      worldInfoBefore: baseData.worldInfo.worldInfoBefore,\n      worldInfoAfter: baseData.worldInfo.worldInfoAfter,\n      extensionPrompts: getContext().extensionPrompts,\n      bias: baseData.chatContext.promptBias,\n      type: 'normal',\n      quietPrompt: '',\n      quietImage: null,\n      cyclePrompt: '',\n      systemPromptOverride: baseData.characterInfo.system,\n      jailbreakPromptOverride: baseData.characterInfo.jailbreak,\n      personaDescription: baseData.characterInfo.persona,\n      messages: baseData.chatContext.oaiMessages,\n      messageExamples: baseData.chatContext.oaiMessageExamples,\n    };\n\n    const [prompt] = await prepareOpenAIMessages(messageData, dryRun);\n\n    return { prompt };\n  } finally {\n    // 恢复原始场景\n    if (originalScenario !== null && characters && characters[this_chid]) {\n      characters[this_chid].scenario = originalScenario;\n    }\n  }\n}\nasync function convertSystemPromptsToCollection(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const promptCollection = new PromptCollection();\n  const examplesCollection = new MessageCollection('dialogue_examples');\n  // 处理自定义注入\n  const customPrompts = (promptConfig.order || default_order)\n    .map((item, index) => {\n      if (typeof item === 'object' && item.role && item.content) {\n        const identifier = `custom_prompt_${index}`;\n        return {\n          identifier,\n          role: item.role as 'system' | 'user' | 'assistant',\n          content: item.content,\n        };\n      }\n      return null;\n    })\n    .filter((item): item is NonNullable<typeof item> => item !== null);\n\n  for (const prompt of customPrompts) {\n    promptCollection.add(\n      new Prompt({\n        identifier: prompt.identifier,\n        role: prompt.role,\n        content: prompt.content,\n        system_prompt: prompt.role === 'system',\n      }),\n    );\n  }\n\n  // 处理角色信息\n  const characterPrompts = [\n    {\n      id: 'char_description',\n      content: baseData.characterInfo.description,\n      role: 'system',\n    },\n    {\n      id: 'char_personality',\n      content: baseData.characterInfo.personality,\n      role: 'system',\n    },\n    {\n      id: 'scenario',\n      content: baseData.characterInfo.scenario,\n      role: 'system',\n    },\n  ];\n\n  // 添加角色相关提示词\n  characterPrompts.forEach(prompt => {\n    if (prompt.content) {\n      promptCollection.add(\n        new Prompt({\n          identifier: prompt.id,\n          role: prompt.role,\n          content: prompt.content,\n          system_prompt: true,\n        }),\n      );\n    }\n  });\n\n  //当user信息在提示词管理器中时\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.IN_PROMPT\n  ) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'persona_description',\n        role: 'system',\n        content: baseData.characterInfo.persona,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  // 处理世界信息\n  if (baseData.worldInfo.world_info_before) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'world_info_before',\n        role: 'system',\n        content: baseData.worldInfo.world_info_before,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.worldInfo.world_info_after) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'world_info_after',\n        role: 'system',\n        content: baseData.worldInfo.world_info_after,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.chatContext.oaiMessageExamples.length > 0) {\n    // 遍历所有对话示例\n    for (const dialogue of [...baseData.chatContext.oaiMessageExamples]) {\n      const dialogueIndex = baseData.chatContext.oaiMessageExamples.indexOf(dialogue);\n      const chatMessages = [];\n\n      for (let promptIndex = 0; promptIndex < dialogue.length; promptIndex++) {\n        const prompt = dialogue[promptIndex];\n        const role = 'system';\n        const content = prompt.content || '';\n        const identifier = `dialogue_examples ${dialogueIndex}-${promptIndex}`;\n\n        const chatMessage = await Message.createAsync(role, content, identifier);\n        await chatMessage.setName(prompt.name);\n        chatMessages.push(chatMessage);\n      }\n      for (const message of chatMessages) {\n        examplesCollection.add(message);\n      }\n    }\n  }\n  return {\n    systemPrompts: promptCollection,\n    dialogue_examples: examplesCollection,\n  };\n}\n//不使用预设\nasync function handleCustomPath(\n  baseData: any,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const chatCompletion = new ChatCompletion();\n  chatCompletion.setTokenBudget(oai_settings.openai_max_context, oai_settings.openai_max_tokens);\n  chatCompletion.reserveBudget(3);\n  const orderArray = config.order || default_order;\n  const positionMap: Record<string, number> = orderArray.reduce((acc: Record<string, number>, item, index) => {\n    if (typeof item === 'string') {\n      acc[item.toLowerCase()] = index;\n    } else if (typeof item === 'object') {\n      acc[`custom_prompt_${index}`] = index;\n    }\n    return acc;\n  }, {});\n\n  //转换为集合\n  const { systemPrompts, dialogue_examples } = await convertSystemPromptsToCollection(baseData, config);\n  const addToChatCompletionInOrder = async (source: any, index: number) => {\n    if (typeof source === 'object') {\n      // 处理自定义注入\n      const collection = new MessageCollection(`custom_prompt_${index}`);\n      const message = await Message.createAsync(source.role, source.content, `custom_prompt_${index}`);\n      collection.add(message);\n      chatCompletion.add(collection, index);\n    } else if (systemPrompts.has(source)) {\n      // 处理普通提示词\n      const prompt = systemPrompts.get(source);\n      const collection = new MessageCollection(source);\n      const message = await Message.fromPromptAsync(prompt);\n      collection.add(message);\n      chatCompletion.add(collection, positionMap[source]);\n    }\n  };\n\n  // 处理所有类型的提示词\n  for (const [index, item] of orderArray.entries()) {\n    if (typeof item === 'string') {\n      // 使用 isPromptFiltered 替代 promptFilter 判断\n      if (!isPromptFiltered(item, config)) {\n        await addToChatCompletionInOrder(item, index);\n      }\n    } else if (typeof item === 'object' && item.role && item.content) {\n      await addToChatCompletionInOrder(item, index);\n    }\n  }\n\n  const dialogue_examplesIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'dialogue_examples',\n  );\n\n  if (dialogue_examplesIndex !== -1 && !isPromptFiltered('dialogue_examples', config)) {\n    chatCompletion.add(dialogue_examples, dialogue_examplesIndex);\n  }\n  //给user输入预留token\n  const userInputMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n  chatCompletion.reserveBudget(userInputMessage);\n\n  await processChatHistoryAndInject(baseData, config, chatCompletion, processedUserInput);\n  chatCompletion.freeBudget(userInputMessage);\n\n  //根据当前预设决定是否合并连续系统role消息\n  if (oai_settings.squash_system_messages) {\n    await chatCompletion.squashSystemMessages();\n  }\n  const prompt = chatCompletion.getChat();\n  return { prompt };\n}\n\nasync function processChatHistoryAndInject(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  chatCompletion: ChatCompletion,\n  processedUserInput: string,\n) {\n  const orderArray = promptConfig.order || default_order;\n  const chatHistoryIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'chat_history',\n  );\n  const userInputIndex = orderArray.findIndex(item => typeof item === 'string' && item.toLowerCase() === 'user_input');\n\n  const hasUserInput = userInputIndex !== -1;\n  const hasChatHistory = chatHistoryIndex !== -1;\n  const isChatHistoryFiltered = isPromptFiltered('chat_history', promptConfig);\n\n  // 创建用户输入消息\n  const userMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n\n  // 仅在需要时添加图像\n  if (promptConfig.image && hasUserInput) {\n    await userMessage.addImage(await convertFileToBase64(promptConfig.image));\n  }\n\n  // 如果聊天记录被过滤或不在order中，只处理用户输入\n  if (isChatHistoryFiltered || !hasChatHistory) {\n    const insertIndex = hasUserInput ? userInputIndex : orderArray.length;\n    chatCompletion.add(new MessageCollection('user_input', userMessage), insertIndex);\n    return;\n  }\n\n  // 处理聊天记录\n  const chatCollection = new MessageCollection('chat_history');\n\n  // 为新聊天指示预留token\n  const newChat = oai_settings.new_chat_prompt;\n  const newChatMessage = await Message.createAsync('system', substituteParams(newChat), 'newMainChat');\n  chatCompletion.reserveBudget(newChatMessage);\n\n  // 添加新聊天提示词到集合的最前面\n  chatCollection.add(newChatMessage);\n\n  // 处理空消息替换\n  const lastChatPrompt = baseData.chatContext.oaiMessages[baseData.chatContext.oaiMessages.length - 1];\n  const emptyMessage = await Message.createAsync('user', oai_settings.send_if_empty, 'emptyUserMessageReplacement');\n\n  if (\n    lastChatPrompt &&\n    lastChatPrompt.role === 'assistant' &&\n    oai_settings.send_if_empty &&\n    chatCompletion.canAfford(emptyMessage)\n  ) {\n    chatCollection.add(emptyMessage);\n  }\n\n  // 将用户消息添加到消息数组中准备处理注入\n  if (!hasUserInput) {\n    const userPrompt = {\n      role: 'user',\n      content: processedUserInput,\n      identifier: 'user_input',\n      image: promptConfig.image ? await convertFileToBase64(promptConfig.image) : undefined,\n    };\n    baseData.chatContext.oaiMessages.unshift(userPrompt);\n  }\n\n  // 处理注入和添加消息\n  const messages = (await populationInjectionPrompts(baseData.chatContext.oaiMessages, promptConfig.inject)).reverse();\n  const imageInlining = isImageInliningSupported();\n  // 添加聊天记录\n  const chatPool = [...messages];\n  for (const chatPrompt of chatPool) {\n    const prompt = new Prompt(chatPrompt);\n    prompt.identifier = `chat_history-${messages.length - chatPool.indexOf(chatPrompt)}`;\n    prompt.content = substituteParams(prompt.content);\n\n    const chatMessage = await Message.fromPromptAsync(prompt);\n    const promptManager = setupChatCompletionPromptManager();\n    if (promptManager.serviceSettings.names_behavior === character_names_behavior.COMPLETION && prompt.name) {\n      const messageName = promptManager.isValidName(prompt.name)\n        ? prompt.name\n        : promptManager.sanitizeName(prompt.name);\n      await chatMessage.setName(messageName);\n    }\n    if (imageInlining && chatPrompt.image) {\n      await chatMessage.addImage(chatPrompt.image);\n    }\n    if (chatCompletion.canAfford(chatMessage)) {\n      chatCollection.add(chatMessage);\n    } else {\n      break;\n    }\n  }\n\n  // 释放新聊天提示词的预留token\n  chatCompletion.freeBudget(newChatMessage);\n\n  if (hasUserInput) {\n    // 按各自在order中的位置添加聊天记录和用户输入\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n    chatCompletion.add(new MessageCollection('user_input', userMessage), userInputIndex);\n  } else {\n    // 聊天记录中已包含用户输入，直接添加到chat_history位置\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n  }\n}\nasync function populationInjectionPrompts(messages: detail.RolePrompt[], customInjects: detail.InjectionPrompt[] = []) {\n  let processedMessages = [...messages];\n  let totalInsertedMessages = 0;\n  const injectionPrompts = [];\n\n  const authorsNote = getContext().extensionPrompts[NOTE_MODULE_NAME];\n  if (authorsNote && authorsNote.value) {\n    injectionPrompts.push({\n      role: getPromptRole(authorsNote.role),\n      content: authorsNote.value,\n      identifier: 'authorsNote',\n      injection_depth: authorsNote.depth,\n      injected: true,\n    });\n  }\n\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.AT_DEPTH\n  ) {\n    injectionPrompts.push({\n      role: 'system',\n      content: power_user.persona_description,\n      identifier: 'persona_description',\n      injection_depth: power_user.persona_description_depth,\n      injected: true,\n    });\n  }\n\n  // 处理自定义注入\n  if (Array.isArray(customInjects)) {\n    for (const inject of customInjects) {\n      injectionPrompts.push({\n        identifier: `INJECTION-${inject.role}-${inject.depth}`,\n        role: inject.role,\n        content: inject.content,\n        injection_depth: inject.depth || 0,\n        injected: true,\n      });\n    }\n  }\n\n  for (let i = 0; i <= MAX_INJECTION_DEPTH; i++) {\n    const depthPrompts = injectionPrompts.filter(prompt => prompt.injection_depth === i && prompt.content);\n\n    const roles = ['system', 'user', 'assistant'];\n    const roleMessages = [];\n    const separator = '\\n';\n\n    for (const role of roles) {\n      // 直接处理当前深度和角色的所有提示词\n      const rolePrompts = depthPrompts\n        .filter(prompt => prompt.role === role)\n        .map(x => x.content.trim())\n        .join(separator);\n\n      if (rolePrompts) {\n        roleMessages.push({\n          role: role,\n          content: rolePrompts,\n          injected: true,\n        });\n      }\n    }\n\n    if (roleMessages.length) {\n      const injectIdx = i + totalInsertedMessages;\n      processedMessages.splice(injectIdx, 0, ...roleMessages);\n      totalInsertedMessages += roleMessages.length;\n    }\n  }\n\n  return processedMessages;\n}\n\nfunction getPromptRole(role: number) {\n  switch (role) {\n    case extension_prompt_roles.SYSTEM:\n      return 'system';\n    case extension_prompt_roles.USER:\n      return 'user';\n    case extension_prompt_roles.ASSISTANT:\n      return 'assistant';\n    default:\n      return 'system';\n  }\n}\n\n//生成响应\nasync function generateResponse(generate_data: any, useStream = false): Promise<string> {\n  let result = '';\n  try {\n    deactivateSendButtons();\n\n    if (useStream) {\n      let originalStreamSetting = oai_settings.stream_openai;\n      if (!originalStreamSetting) {\n        oai_settings.stream_openai = true;\n        saveSettingsDebounced();\n      }\n      const streamingProcessor = new StreamingProcessor();\n      streamingProcessor.generator = await sendOpenAIRequest('normal', generate_data.prompt, abortController.signal);\n      result = (await streamingProcessor.generate()) as string;\n      // console.log(\"getMessage\", getMessage);\n      if (originalStreamSetting !== oai_settings.stream_openai) {\n        oai_settings.stream_openai = originalStreamSetting;\n        saveSettingsDebounced();\n      }\n    } else {\n      eventSource.emit('js_generation_started');\n      const response = await sendOpenAIRequest(type, generate_data.prompt, abortController.signal);\n      result = await handleResponse(response);\n    }\n  } catch (error) {\n    throw error;\n  } finally {\n    unblockGeneration();\n    await clearInjectionPrompts(['INJECTION']);\n  }\n  return result;\n}\n\n// 处理响应\nasync function handleResponse(response: any) {\n  if (!response) {\n    throw Error(`未得到响应`);\n  }\n  if (response.error) {\n    if (response?.response) {\n      // @ts-ignore\n      toastr.error(response.response, t`API Error`, {\n        preventDuplicates: true,\n      });\n    }\n    throw Error(response?.response);\n  }\n  const message: string = extractMessageFromData(response);\n  eventSource.emit('js_generation_ended', message);\n  return message;\n}\n\nfunction unblockGeneration() {\n  activateSendButtons();\n  showSwipeButtons();\n  setGenerationProgress(0);\n  flushEphemeralStoppingStrings();\n}\n\n// 清理注入\nasync function clearInjectionPrompts(prefixes: string[]) {\n  const prompts = getContext().extensionPrompts;\n  Object.keys(prompts)\n    .filter(key => prefixes.some(prefix => key.startsWith(prefix)))\n    .forEach(key => delete prompts[key]);\n\n  await saveChatConditional();\n}\nfunction extractMessageFromData(data: any) {\n  if (typeof data === 'string') {\n    return data;\n  }\n\n  return (\n    data?.choices?.[0]?.message?.content ??\n    data?.choices?.[0]?.text ??\n    data?.text ??\n    data?.message?.content?.[0]?.text ??\n    data?.message?.tool_plan ??\n    ''\n  );\n}\n\nasync function convertFileToBase64(image: File | string): Promise<string> {\n  if (image instanceof File) {\n    return await getBase64Async(image);\n  }\n  return image;\n}\n\nfunction addTemporaryUserMessage(userContent: string) {\n  setExtensionPrompt('TEMP_USER_MESSAGE', userContent, extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction removeTemporaryUserMessage() {\n  setExtensionPrompt('TEMP_USER_MESSAGE', '', extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction isPromptFiltered(promptId: string, config: { overrides?: detail.OverrideConfig }): boolean {\n  if (!config.overrides) {\n    return false;\n  }\n\n  if (promptId === 'with_depth_entries') {\n    return config.overrides.with_depth_entries === false;\n  }\n\n  // 特殊处理 chat_history\n  if (promptId === 'chat_history') {\n    const prompts = config.overrides.chat_history;\n    return prompts !== undefined && prompts.length === 0;\n  }\n\n  // 对于普通提示词，只有当它在 overrides 中存在且为空字符串时才被过滤\n  const override = config.overrides[promptId as keyof Omit<detail.OverrideConfig, 'chat_history'>];\n  return override !== undefined && override === '';\n}\n\nexport function registerIframeGenerateHandler() {\n  registerIframeHandler('[Generate][generate]', async (event: MessageEvent<IframeGenerate>): Promise<string> => {\n    const iframe_name = getIframeName(event);\n    const config = event.data.config;\n\n    console.info(`${getLogPrefix(event)}(${iframe_name}) 发送生成请求: ${config}`);\n\n    const converted_config = fromGenerateConfig(config);\n    return await iframeGenerate(converted_config);\n  });\n\n  registerIframeHandler('[Generate][generateRaw]', async (event: MessageEvent<IframeGenerateRaw>): Promise<string> => {\n    const iframe_name = getIframeName(event);\n    const config = event.data.config;\n\n    console.info(`${getLogPrefix(event)}(${iframe_name}) 发送生成请求: ${config}`);\n\n    const converted_config = fromGenerateRawConfig(config);\n    return await iframeGenerate(converted_config);\n  });\n}\n\n$(document).on('click', '#mes_stop', function () {\n  const wasStopped = stopGeneration();\n  if (wasStopped) {\n    if (abortController) {\n      abortController.abort('Clicked stop button');\n    }\n    unblockGeneration();\n  }\n});\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getTagsList\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__.getTagsList) });","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { debounce } from '@sillytavern/scripts/utils';\nimport {\n  createWorldInfoEntry,\n  deleteWIOriginalDataValue,\n  loadWorldInfo,\n  originalWIDataKeyMap,\n  saveWorldInfo,\n  setWIOriginalDataValue,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface IframeGetLorebookEntries extends IframeMessage {\n  request: '[LorebookEntry][getLorebookEntries]';\n  lorebook: string;\n  option: Required<GetLorebookEntriesOption>;\n}\n\ninterface IframeSetLorebookEntries extends IframeMessage {\n  request: '[LorebookEntry][setLorebookEntries]';\n  lorebook: string;\n  entries: (Pick<LorebookEntry, 'uid'> & Partial<Omit<LorebookEntry, 'uid'>>)[];\n}\n\ninterface IframeCreateLorebookEntry extends IframeMessage {\n  request: '[LorebookEntry][createLorebookEntry]';\n  lorebook: string;\n  field_values: Partial<Omit<LorebookEntry, 'uid'>>;\n}\n\ninterface IframeDeleteLorebookEntry extends IframeMessage {\n  request: '[LorebookEntry][deleteLorebookEntry]';\n  lorebook: string;\n  lorebook_uid: number;\n}\n\nfunction toLorebookEntry(entry: any): LorebookEntry {\n  return {\n    uid: entry.uid,\n    display_index: entry.displayIndex,\n    comment: entry.comment,\n    enabled: !entry.disable,\n    type: entry.constant ? 'constant' : entry.vectorized ? 'vectorized' : 'selective',\n    position:\n      // @ts-ignore\n      {\n        0: 'before_character_definition',\n        1: 'after_character_definition',\n        5: 'before_example_messages',\n        6: 'after_example_messages',\n        2: 'before_author_note',\n        3: 'after_author_note',\n      }[entry.position] ??\n      (entry.role === 0 ? 'at_depth_as_system' : entry.role === 1 ? 'at_depth_as_user' : 'at_depth_as_assistant'),\n    depth: entry.position === 4 ? entry.depth : null,\n    order: entry.order,\n    probability: entry.probability,\n\n    key: entry.key,\n    logic: {\n      0: 'and_any',\n      1: 'and_all',\n      2: 'not_any',\n      3: 'not_all',\n    }[entry.selectiveLogic as number] as 'and_any' | 'and_all' | 'not_any' | 'not_all',\n    filter: entry.keysecondary,\n\n    scan_depth: entry.scanDepth ?? 'same_as_global',\n    case_sensitive: entry.caseSensitive ?? 'same_as_global',\n    match_whole_words: entry.matchWholeWords ?? 'same_as_global',\n    use_group_scoring: entry.useGroupScoring ?? 'same_as_global',\n    automation_id: entry.automationId || null,\n\n    exclude_recursion: entry.excludeRecursion,\n    prevent_recursion: entry.preventRecursion,\n    delay_until_recursion: entry.delayUntilRecursion,\n\n    content: entry.content,\n\n    group: entry.group,\n    group_prioritized: entry.groupOverride,\n    group_weight: entry.groupWeight,\n    sticky: entry.sticky || null,\n    cooldown: entry.cooldown || null,\n    delay: entry.delay || null,\n  };\n}\n\nfunction fromPartialLorebookEntry(entry: Partial<LorebookEntry>): any {\n  const transformers = {\n    uid: (value: LorebookEntry['uid']) => ({ uid: value }),\n    display_index: (value: LorebookEntry['display_index']) => ({ displayIndex: value }),\n\n    comment: (value: LorebookEntry['comment']) => ({ comment: value }),\n    enabled: (value: LorebookEntry['enabled']) => ({ disable: !value }),\n    type: (value: LorebookEntry['type']) => ({\n      constant: value === 'constant',\n      vectorized: value === 'vectorized',\n    }),\n    position: (value: LorebookEntry['position']) => ({\n      position: {\n        before_character_definition: 0,\n        after_character_definition: 1,\n        before_example_messages: 5,\n        after_example_messages: 6,\n        before_author_note: 2,\n        after_author_note: 3,\n        at_depth_as_system: 4,\n        at_depth_as_user: 4,\n        at_depth_as_assistant: 4,\n      }[value],\n      role:\n        // @ts-ignore\n        {\n          at_depth_as_system: 0,\n          at_depth_as_user: 1,\n          at_depth_as_assistant: 2,\n        }[value] ?? null,\n    }),\n    depth: (value: LorebookEntry['depth']) => ({ depth: value === null ? 4 : value }),\n    order: (value: LorebookEntry['order']) => ({ order: value }),\n    probability: (value: LorebookEntry['probability']) => ({ probability: value }),\n\n    key: (value: LorebookEntry['key']) => ({ key: value }),\n    logic: (value: LorebookEntry['logic']) => ({\n      selectiveLogic: {\n        and_any: 0,\n        and_all: 1,\n        not_any: 2,\n        not_all: 3,\n      }[value],\n    }),\n    filter: (value: LorebookEntry['filter']) => ({ keysecondary: value }),\n\n    scan_depth: (value: LorebookEntry['scan_depth']) => ({ scanDepth: value === 'same_as_global' ? null : value }),\n    case_sensitive: (value: LorebookEntry['case_sensitive']) => ({\n      caseSensitive: value === 'same_as_global' ? null : value,\n    }),\n    match_whole_words: (value: LorebookEntry['match_whole_words']) => ({\n      matchWholeWords: value === 'same_as_global' ? null : value,\n    }),\n    use_group_scoring: (value: LorebookEntry['use_group_scoring']) => ({\n      useGroupScoring: value === 'same_as_global' ? null : value,\n    }),\n    automation_id: (value: LorebookEntry['automation_id']) => ({ automationId: value === null ? '' : value }),\n\n    exclude_recursion: (value: LorebookEntry['exclude_recursion']) => ({ excludeRecursion: value }),\n    prevent_recursion: (value: LorebookEntry['prevent_recursion']) => ({ preventRecursion: value }),\n    delay_until_recursion: (value: LorebookEntry['delay_until_recursion']) => ({ delayUntilRecursion: value }),\n\n    content: (value: LorebookEntry['content']) => ({ content: value }),\n\n    group: (value: LorebookEntry['group']) => ({ group: value }),\n    group_prioritized: (value: LorebookEntry['group_prioritized']) => ({ groupOverride: value }),\n    group_weight: (value: LorebookEntry['group_weight']) => ({ groupWeight: value }),\n    sticky: (value: LorebookEntry['sticky']) => ({ sticky: value === null ? 0 : value }),\n    cooldown: (value: LorebookEntry['cooldown']) => ({ cooldown: value === null ? 0 : value }),\n    delay: (value: LorebookEntry['delay']) => ({ delay: value === null ? 0 : value }),\n  };\n\n  return Object.entries(entry)\n    .filter(([_, value]) => value !== undefined)\n    .reduce(\n      (result, [field, value]) => ({\n        ...result,\n        // @ts-ignore\n        ...transformers[field]?.(value),\n      }),\n      {},\n    );\n}\n\nfunction assignFieldValuesToWiEntry(data: any, wi_entry: any, field_values: any) {\n  Object.entries(field_values).forEach(([field, value]) => {\n    wi_entry[field] = value;\n    // @ts-ignore\n    const original_wi_mapped_key = originalWIDataKeyMap[field];\n    if (original_wi_mapped_key) {\n      // @ts-ignore\n      setWIOriginalDataValue(data, wi_entry.uid, original_wi_mapped_key, value);\n    }\n  });\n}\n\nfunction reloadEditor(file: string): void {\n  const currentIndex = Number($('#world_editor_select').val());\n  const selectedIndex = world_names.indexOf(file);\n  if (selectedIndex !== -1 && currentIndex === selectedIndex) {\n    $('#world_editor_select').val(selectedIndex).trigger('change');\n  }\n}\n\nconst reloadEditorDebounced = debounce(reloadEditor);\n\nexport function registerIframeLorebookEntryHandler() {\n  registerIframeHandler(\n    '[LorebookEntry][getLorebookEntries]',\n    async (event: MessageEvent<IframeGetLorebookEntries>): Promise<LorebookEntry[]> => {\n      const lorebook = event.data.lorebook;\n      const option = event.data.option;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n\n      // @ts-ignore\n      let entries: LorebookEntry[] = Object.values((await loadWorldInfo(lorebook)).entries).map(toLorebookEntry);\n      if (option.filter !== 'none') {\n        entries = entries.filter(entry =>\n          Object.entries(option.filter).every(([field, expected_value]) => {\n            // @ts-ignore\n            const entry_value = entry[field];\n            if (Array.isArray(entry_value)) {\n              return (expected_value as string[]).every(value => entry_value.includes(value));\n            }\n            if (typeof entry_value === 'string') {\n              return entry_value.includes(expected_value as string);\n            }\n            return entry_value === expected_value;\n          }),\n        );\n      }\n\n      console.info(`${getLogPrefix(event)}获取世界书 '${lorebook}' 中的条目, 选项: ${JSON.stringify(option)}`);\n      return entries;\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][setLorebookEntries]',\n    async (event: MessageEvent<IframeSetLorebookEntries>): Promise<void> => {\n      const lorebook = event.data.lorebook;\n      const entries = event.data.entries;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n      const data = await loadWorldInfo(lorebook);\n\n      const process_entry = async (entry: (typeof entries)[0]): Promise<void> => {\n        // @ts-ignore\n        const wi_entry = data.entries[entry.uid];\n        if (!wi_entry) {\n          throw Error(`未能在世界书 '${lorebook}' 中找到 uid=${entry.uid} 的条目`);\n        }\n        assignFieldValuesToWiEntry(data, wi_entry, fromPartialLorebookEntry(entry));\n      };\n\n      await Promise.all(entries.map(process_entry));\n      await saveWorldInfo(lorebook, data);\n      reloadEditorDebounced(lorebook);\n\n      console.info(\n        `${getLogPrefix(event)}修改世界书 '${lorebook}' 中以下条目的以下字段:\\n${JSON.stringify(\n          entries,\n          undefined,\n          2,\n        )}`,\n      );\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][createLorebookEntry]',\n    async (event: MessageEvent<IframeCreateLorebookEntry>): Promise<number> => {\n      const lorebook = event.data.lorebook;\n      const field_values = event.data.field_values;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n      const data = await loadWorldInfo(lorebook);\n      const wi_entry = createWorldInfoEntry(lorebook, data) as any;\n      const partial_lorebook_entry = fromPartialLorebookEntry(field_values);\n      if (partial_lorebook_entry.uid) {\n        delete partial_lorebook_entry.uid;\n      }\n      assignFieldValuesToWiEntry(data, wi_entry, partial_lorebook_entry);\n\n      await saveWorldInfo(lorebook, data);\n      reloadEditorDebounced(lorebook);\n\n      console.info(\n        `${getLogPrefix(event)}在世界书 '${lorebook}' 中新建 uid='${wi_entry.uid}' 条目, 并设置内容:\\n${JSON.stringify(\n          field_values,\n          undefined,\n          2,\n        )}`,\n      );\n      return wi_entry.uid;\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][deleteLorebookEntry]',\n    async (event: MessageEvent<IframeDeleteLorebookEntry>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n      const lorebook_uid = event.data.lorebook_uid;\n\n      const data = await loadWorldInfo(lorebook);\n      // QUESTION: 好像没办法从 data 检测世界书是否存在?\n      let deleted = false;\n      // @ts-ignore 18046\n      if (data.entries[lorebook_uid]) {\n        // @ts-ignore 18046\n        delete data.entries[lorebook_uid];\n        deleted = true;\n      }\n      if (deleted) {\n        // @ts-ignore 2345\n        deleteWIOriginalDataValue(data, lorebook_uid);\n        await saveWorldInfo(lorebook, data);\n        reloadEditorDebounced(lorebook);\n      }\n\n      console.info(\n        `${getLogPrefix(event)}删除世界书 '${lorebook}' 中的 uid='${lorebook_uid}' 条目${deleted ? '成功' : '失败'}`,\n      );\n      return deleted;\n    },\n  );\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"executeSlashCommandsWithOptions\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__.executeSlashCommandsWithOptions) });","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { chat_metadata, event_types, eventSource, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, getContext, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\n\ninterface IframeGetVariables extends IframeMessage {\n  request: '[Variables][getVariables]';\n  option: Required<VariableOption>;\n}\n\ninterface IframeReplaceVariables extends IframeMessage {\n  request: '[Variables][replaceVariables]';\n  option: Required<VariableOption>;\n  variables: Record<string, any>;\n}\n\n// for compatibility\ninterface IframeSetVariables extends IframeMessage {\n  request: '[Variables][setVariables]';\n  message_id: number;\n  variables: Record<string, any>;\n}\n\nfunction getVariablesByType(type: 'chat' | 'global'): Record<string, any> {\n  switch (type) {\n    case 'chat':\n      const metadata = chat_metadata as {\n        variables: Record<string, any> | undefined;\n      };\n      if (!metadata.variables) {\n        metadata.variables = {};\n      }\n      return metadata.variables;\n    case 'global':\n      return extension_settings.variables.global;\n  }\n}\n\nlet latest_set_variables_message_id: number | null = null;\n\nexport function registerIframeVariableHandler() {\n  registerIframeHandler(\n    '[Variables][getVariables]',\n    async (event: MessageEvent<IframeGetVariables>): Promise<Record<string, any>> => {\n      const option = event.data.option;\n\n      const result = getVariablesByType(option.type);\n\n      console.info(\n        `${getLogPrefix(event)}获取${option.type == 'chat' ? `聊天` : `全局`}变量表:\\n${JSON.stringify(\n          result,\n          undefined,\n          2,\n        )}`,\n      );\n      return result;\n    },\n  );\n\n  registerIframeHandler(\n    '[Variables][replaceVariables]',\n    async (event: MessageEvent<IframeReplaceVariables>): Promise<void> => {\n      const variables = event.data.variables;\n      const option = event.data.option;\n\n      switch (option.type) {\n        case 'chat':\n          await eventSource.emit(\n            'variables_updated',\n            option.type,\n            (chat_metadata as { variables: Object }).variables,\n            variables,\n          );\n          (chat_metadata as { variables: Object }).variables = variables;\n          saveMetadataDebounced();\n          break;\n        case 'global':\n          await eventSource.emit('variables_updated', option.type, extension_settings.variables.global, variables);\n          extension_settings.variables.global = variables;\n          saveSettingsDebounced();\n          break;\n      }\n\n      console.info(\n        `${getLogPrefix(event)}将${option.type == 'chat' ? `聊天` : `全局`}变量表替换为:\\n${JSON.stringify(\n          variables,\n          undefined,\n          2,\n        )}`,\n      );\n    },\n  );\n\n  registerIframeHandler('[Variables][setVariables]', async (event: MessageEvent<IframeSetVariables>): Promise<void> => {\n    const variables = event.data.variables;\n    const message_id = event.data.message_id;\n\n    if (isNaN(message_id)) {\n      return;\n    }\n    const chat_length = getContext().chat.length;\n    const latest_message_id = chat_length - 1;\n\n    if (message_id !== latest_message_id) {\n      console.info(\n        `因为 ${message_id} 楼不是最新楼层 ${latest_message_id} 楼, 取消设置聊天变量. 原本要设置的变量:\\n${JSON.stringify(\n          variables,\n          undefined,\n          2,\n        )} `,\n      );\n      return;\n    }\n    latest_set_variables_message_id = message_id;\n    if (\n      // @ts-ignore\n      !chat_metadata.variables ||\n      // @ts-ignore\n      typeof chat_metadata.variables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables = {};\n    }\n    if (\n      // @ts-ignore\n      !chat_metadata.variables.tempVariables ||\n      // @ts-ignore\n      typeof chat_metadata.variables.tempVariables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables.tempVariables = {};\n    }\n    if (variables.hasOwnProperty('tempVariables')) {\n      // @ts-ignore\n      delete variables.tempVariables;\n    }\n    // @ts-ignore\n    const tempVariables = chat_metadata.variables.tempVariables;\n    // @ts-ignore\n    const currentVariables = chat_metadata.variables;\n    Object.keys(variables).forEach(key => {\n      // @ts-ignore\n      const newValue = variables[key];\n      const currentValue = currentVariables[key];\n      if (newValue !== currentValue) {\n        tempVariables[key] = newValue;\n      }\n    });\n    // @ts-ignore\n    chat_metadata.variables.tempVariables = tempVariables;\n    saveMetadataDebounced();\n\n    console.info(`${getLogPrefix(event)}设置聊天变量, 要设置的变量:\\n${JSON.stringify(variables, undefined, 2)} `);\n  });\n}\n\nexport function clearTempVariables() {\n  if (\n    chat_metadata.variables &&\n    chat_metadata.variables.tempVariables &&\n    Object.keys(chat_metadata.variables.tempVariables).length > 0\n  ) {\n    console.log('[Var]Clearing tempVariables.');\n    chat_metadata.variables.tempVariables = {};\n    saveMetadataDebounced();\n  }\n}\n\nexport function shouldUpdateVariables(eventMesId: number) {\n  if (\n    !chat_metadata.variables ||\n    !chat_metadata.variables.tempVariables ||\n    Object.keys(chat_metadata.variables.tempVariables).length === 0\n  ) {\n    return;\n  }\n  if (eventMesId === latest_set_variables_message_id) {\n    console.log('[Var]MesId matches the latest setVariables, skipping ST variable update.');\n    return;\n  } else if (latest_set_variables_message_id !== null && eventMesId > latest_set_variables_message_id) {\n    console.log('[Var]Event mesId is newer than setVariables mesId, updating ST variables.');\n    const newVariables = { ...chat_metadata.variables.tempVariables };\n    updateVariables(newVariables);\n\n    chat_metadata.variables.tempVariables = {};\n    console.log('[Var]TempVariables cleared.');\n  } else {\n    console.log('[Var]Event mesId is older than setVariables mesId, ignoring.');\n  }\n}\n\nfunction updateVariables(newVariables: Record<string, any>) {\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const currentVariables = chat_metadata.variables;\n\n  for (let key in newVariables) {\n    if (newVariables.hasOwnProperty(key)) {\n      currentVariables[key] = newVariables[key];\n    }\n  }\n\n  chat_metadata.variables = currentVariables;\n\n  saveMetadataDebounced();\n}\n\nexport const checkVariablesEvents = [event_types.CHARACTER_MESSAGE_RENDERED, event_types.USER_MESSAGE_RENDERED];\n","import { registerIframeAudioHandler } from '@/iframe_server/audio';\nimport { registerIframeCharacterHandler } from '@/iframe_server/character';\nimport { registerIframeChatMessageHandler } from '@/iframe_server/chat_message';\nimport { registerIframeDisplayedMessageHandler } from '@/iframe_server/displayed_message';\nimport { registerIframeFrontendVersionHandler } from '@/iframe_server/frontend_version';\nimport { registerIframeGenerateHandler } from '@/iframe_server/generate';\nimport { registerIframeLorebookHandler } from '@/iframe_server/lorebook';\nimport { registerIframeLorebookEntryHandler } from '@/iframe_server/lorebook_entry';\nimport { registerIframeSlashHandler } from '@/iframe_server/slash';\nimport { registerIframeTavernRegexHandler } from '@/iframe_server/tavern_regex';\nimport { registerIframeUtilHandler } from '@/iframe_server/util';\nimport { registerIframeVariableHandler } from '@/iframe_server/variables';\n\nimport { IframeMessage, getLogPrefix, iframe_handlers } from '@/iframe_server/_impl';\nimport { t } from '@sillytavern/scripts/i18n';\n\nexport async function handleIframe(event: MessageEvent<IframeMessage>): Promise<void> {\n  if (!event.data) return;\n\n  const handler = iframe_handlers[event.data.request];\n  if (!handler) {\n    return;\n  }\n\n  let result: any = undefined;\n  try {\n    result = await handler(event);\n  } catch (err) {\n    const error = err as Error;\n    toastr.error(t`${getLogPrefix(event)}${error.name + ': ' + error.message}${error.stack ? error.stack : ''}`);\n    console.error(getLogPrefix(event), error);\n  } finally {\n    (event.source as MessageEventSource).postMessage(\n      {\n        request: event.data.request + '_callback',\n        uid: event.data.uid,\n        result: result,\n      },\n      {\n        targetOrigin: '*',\n      },\n    );\n  }\n}\n\nregisterIframeChatMessageHandler();\nregisterIframeDisplayedMessageHandler();\nregisterIframeFrontendVersionHandler();\nregisterIframeGenerateHandler();\nregisterIframeLorebookEntryHandler();\nregisterIframeLorebookHandler();\nregisterIframeSlashHandler();\nregisterIframeTavernRegexHandler();\nregisterIframeUtilHandler();\nregisterIframeVariableHandler();\nregisterIframeCharacterHandler();\nregisterIframeAudioHandler();\n","import { eventSource } from '@sillytavern/script';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport { ARGUMENT_TYPE, SlashCommandNamedArgument } from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nexport async function slashEventEmit(named_args: any): Promise<any> {\n  const event: string = named_args.event;\n  const data: string[] = named_args.data ?? [];\n\n  eventSource.emit(event, ...data);\n\n  console.info(`[Event][/event-emit] 发送 '${event}' 事件, 携带数据: ${JSON.stringify(data)}`);\n\n  return event;\n}\n\nexport function initSlashEventEmit() {\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'event-emit',\n      callback: slashEventEmit,\n      returns: '发送的事件名称',\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'event',\n          description: '事件名称',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'data',\n          description: '要传输的数据',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: false,\n          acceptsMultiple: true,\n        }),\n      ],\n      unnamedArgumentList: [],\n      helpString: `\n    <div>\n        发送 \\`event\\` 事件, 同时可以发送一些数据.\n        所有正在监听该消息频道的 listener 函数都会自动运行, 并能用函数参数接收发送来的数据.\n        由于酒馆 STScript 输入方式的局限性, 所有数据将会以字符串 string 类型接收; 如果需要 number 等类型, 请自行转换.\n    </div>\n    <div>\n        <strong>Example:</strong>\n        <ul>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"读档\"</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"存档\" data={{getvar::数据}} data=8 data=你好 {{user}}</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"随便什么名称\" data=\"这是一个 数据\" data={{user}}</code></pre>\n            </li>\n        </ul>\n    </div>\n  `,\n    }),\n  );\n}\n","import { handlePartialRender } from '@/component/message_iframe';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  chat,\n  eventSource,\n  messageFormatting,\n  reloadCurrentChat,\n  saveChatConditional,\n  substituteParamsExtended,\n  system_message_types,\n} from '@sillytavern/script';\nimport { stringToRange } from '@sillytavern/scripts/utils';\n\ninterface IframeGetChatMessages extends IframeMessage {\n  request: '[ChatMessage][getChatMessages]';\n  range: string;\n  option: Required<GetChatMessagesOption>;\n}\n\ninterface IframeSetChatMessage extends IframeMessage {\n  request: '[ChatMessage][setChatMessage]';\n  field_values: ChatMessageToSet;\n  message_id: number;\n  option: Required<SetChatMessageOption>;\n}\n\nexport function registerIframeChatMessageHandler() {\n  registerIframeHandler(\n    '[ChatMessage][getChatMessages]',\n    async (event: MessageEvent<IframeGetChatMessages>): Promise<ChatMessage[]> => {\n      const range_demacroed = substituteParamsExtended(event.data.range);\n      const range = stringToRange(range_demacroed, 0, chat.length - 1);\n      const option = event.data.option;\n      if (!range) {\n        throw Error(`提供的消息范围 range 无效: ${range_demacroed}`);\n      }\n      if (!['all', 'system', 'assistant', 'user'].includes(option.role)) {\n        throw Error(`提供的 role 无效, 请提供 'all', 'system', 'assistant' 或 'user', 你提供的是: ${option.role}`);\n      }\n      if (!['all', 'hidden', 'unhidden'].includes(option.hide_state)) {\n        throw Error(`提供的 hide_state 无效, 请提供 'all', 'hidden' 或 'unhidden', 你提供的是: ${option.hide_state}`);\n      }\n\n      const { start, end } = range;\n\n      const getRole = (chat_message: any) => {\n        const is_narrator = chat_message.extra?.type === system_message_types.NARRATOR;\n        if (is_narrator) {\n          if (chat_message.is_user) {\n            return 'unknown';\n          }\n          return 'system';\n        }\n        if (chat_message.is_user) {\n          return 'user';\n        }\n        return 'assistant';\n      };\n\n      const process_message = async (message_id: number): Promise<ChatMessage | null> => {\n        const message = chat[message_id];\n        if (!message) {\n          console.warn(`${getLogPrefix(event)}没找到第 ${message_id} 楼的消息`);\n          return null;\n        }\n\n        const role = getRole(message);\n        if (option.role !== 'all' && role !== option.role) {\n          console.debug(`${getLogPrefix(event)}筛去了第 ${message_id} 楼的消息因为它的身份不是 ${option.role}`);\n          return null;\n        }\n\n        if (option.hide_state !== 'all' && (option.hide_state === 'hidden') !== message.is_system) {\n          console.debug(\n            `${getLogPrefix(event)}筛去了第 ${message_id} 楼的消息因为它${\n              option.hide_state === 'hidden' ? `` : `没`\n            } 被隐藏`,\n          );\n          return null;\n        }\n\n        const swipe_id = message?.swipe_id ?? 0;\n        const swipes = message?.swipes ?? [message.mes];\n        const swipes_data = message?.variables ?? [];\n        const data = swipes_data[swipe_id] ?? {};\n\n        return {\n          message_id: message_id,\n          name: message.name,\n          role: role as 'system' | 'assistant' | 'user',\n          is_hidden: message.is_system,\n          message: message.mes,\n          data: data,\n\n          swipe_id: swipe_id,\n          swipes: swipes,\n          swipes_data: swipes_data,\n\n          is_user: message.is_user,\n          is_system_or_hidden: message.is_system,\n        };\n      };\n\n      const promises: Promise<ChatMessage | null>[] = [];\n      for (let i: number = range.start; i <= range.end; ++i) {\n        promises.push(process_message(i));\n      }\n\n      const chat_messages: ChatMessage[] = (await Promise.all(promises)).filter(chat_message => chat_message !== null);\n\n      console.info(\n        `${getLogPrefix(event)}获取${\n          start == end ? `第 ${start} ` : ` ${start}-${end} `\n        }楼的消息, 选项: ${JSON.stringify(option)} `,\n      );\n      return chat_messages;\n    },\n  );\n\n  registerIframeHandler(\n    '[ChatMessage][setChatMessage]',\n    async (event: MessageEvent<IframeSetChatMessage>): Promise<void> => {\n      const field_values = event.data.field_values;\n      const message_id = event.data.message_id;\n      const option = event.data.option;\n      if (typeof option.swipe_id !== 'number' && option.swipe_id !== 'current') {\n        throw Error(`提供的 swipe_id 无效, 请提供 'current' 或序号, 你提供的是: ${option.swipe_id} `);\n      }\n      if (!['none', 'display_current', 'display_and_render_current', 'all'].includes(option.refresh)) {\n        throw Error(\n          `提供的 refresh 无效, 请提供 'none', 'display_current', 'display_and_render_current' 或 'all', 你提供的是: ${option.refresh} `,\n        );\n      }\n\n      const chat_message = chat[message_id];\n      if (!chat_message) {\n        console.warn(`${getLogPrefix(event)}未找到第 ${message_id} 楼的消息`);\n        return;\n      }\n\n      const add_swipes_if_required = (): boolean => {\n        if (option.swipe_id === 'current') {\n          return false;\n        }\n\n        // swipe_id 对应的消息页存在\n        if (option.swipe_id == 0 || (chat_message.swipes && option.swipe_id < chat_message.swipes.length)) {\n          return true;\n        }\n\n        if (!chat_message.swipes) {\n          chat_message.swipe_id = 0;\n          chat_message.swipes = [chat_message.mes];\n          chat_message.swipe_info = [{}];\n        }\n        for (let i = chat_message.swipes.length; i <= option.swipe_id; ++i) {\n          chat_message.swipes.push('');\n          chat_message.swipe_info.push({});\n        }\n        return true;\n      };\n\n      const swipe_id_previous_index: number = chat_message.swipe_id ?? 0;\n      const swipe_id_to_set_index: number = option.swipe_id == 'current' ? swipe_id_previous_index : option.swipe_id;\n      const swipe_id_to_use_index: number = option.refresh != 'none' ? swipe_id_to_set_index : swipe_id_previous_index;\n      const message: string =\n        field_values.message ??\n        (chat_message.swipes ? chat_message.swipes[swipe_id_to_set_index] : undefined) ??\n        chat_message.mes;\n\n      const update_chat_message = async () => {\n        const message_demacroed = substituteParamsExtended(message);\n\n        if (field_values.data) {\n          if (!chat_message.variables) {\n            chat_message.variables = [];\n          }\n          await eventSource.emit(\n            'variables_updated',\n            'message',\n            chat_message.variables[swipe_id_to_set_index] ?? {},\n            field_values.data,\n            {\n              message_id: message_id,\n              swipe_id: swipe_id_to_set_index,\n            },\n          );\n          chat_message.variables[swipe_id_to_set_index] = field_values.data;\n        }\n\n        if (chat_message.swipes) {\n          chat_message.swipes[swipe_id_to_set_index] = message_demacroed;\n          chat_message.swipe_id = swipe_id_to_use_index;\n        }\n\n        if (swipe_id_to_use_index === swipe_id_to_set_index) {\n          chat_message.mes = message_demacroed;\n        }\n      };\n\n      const update_partial_html = (should_update_swipe: boolean) => {\n        const mes_html = $(`div.mes[mesid = \"${message_id}\"]`);\n        if (!mes_html) {\n          return;\n        }\n\n        if (should_update_swipe) {\n          // FIXME: 只有一条消息时, swipes-counter 不会正常显示; 此外还要考虑 swipes-counter 的 \"Swipe # for All Messages\" 选项\n          mes_html\n            .find('.swipes-counter')\n            .text(`${swipe_id_to_use_index + 1}\\u200b/\\u200b${chat_message.swipes.length}`);\n        }\n        if (option.refresh != 'none') {\n          mes_html\n            .find('.mes_text')\n            .empty()\n            .append(\n              messageFormatting(message, chat_message.name, chat_message.is_system, chat_message.is_user, message_id),\n            );\n          if (option.refresh == 'display_and_render_current') {\n            handlePartialRender(`${message_id}`);\n          }\n        }\n      };\n\n      const should_update_swipe: boolean = add_swipes_if_required();\n      await update_chat_message();\n      if (option.refresh == 'all') {\n        await reloadCurrentChat();\n      } else {\n        update_partial_html(should_update_swipe);\n        // QUESTION: saveChatDebounced 还是 await saveChatConditional?\n        await saveChatConditional();\n      }\n\n      console.info(\n        `${getLogPrefix(event)}设置第 ${message_id} 楼消息, 选项: ${JSON.stringify(\n          option,\n        )}, 设置前使用的消息页: ${swipe_id_previous_index}, 设置的消息页: ${swipe_id_to_set_index}, 现在使用的消息页: ${swipe_id_to_use_index} `,\n      );\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { chat, messageFormatting } from '@sillytavern/script';\nimport { getLastMessageId } from '@sillytavern/scripts/macros';\n\ninterface IframeFormatAsDisplayedMessage extends IframeMessage {\n  request: '[DisplayedMessage][formatAsDisplayedMessage]';\n  text: string;\n  option: Required<FormatAsDisplayedMessageOption>;\n}\n\nexport function registerIframeDisplayedMessageHandler() {\n  registerIframeHandler(\n    '[DisplayedMessage][formatAsDisplayedMessage]',\n    async (event: MessageEvent<IframeFormatAsDisplayedMessage>): Promise<string> => {\n      const text = event.data.text;\n      const option = event.data.option;\n      if (typeof option.message_id !== 'number' && !['last', 'last_user', 'last_char'].includes(option.message_id)) {\n        throw Error(\n          `提供的 message_id 无效, 请提供 'last', 'last_user', 'last_char' 或楼层消息号, 你提供的是: ${option.message_id}`,\n        );\n      }\n      const last_message_id = getLastMessageId();\n      if (last_message_id === null) {\n        throw Error(`未找到任何消息楼层, 你提供的是: ${option.message_id}`);\n      }\n      switch (option.message_id) {\n        case 'last':\n          option.message_id = last_message_id;\n          break;\n        case 'last_user':\n          const last_user_message_id = getLastMessageId({ filter: (m: any) => m.is_user && !m.is_system }) as number;\n          if (last_user_message_id === null) {\n            throw Error(`未找到任何 user 消息楼层, 你提供的是: ${option.message_id}`);\n          }\n          option.message_id = last_user_message_id;\n          break;\n        case 'last_char':\n          const last_char_message_id = getLastMessageId({ filter: (m: any) => !m.is_user && !m.is_system }) as number;\n          if (last_char_message_id === null) {\n            throw Error(`未找到任何 char 消息楼层, 你提供的是: ${option.message_id}`);\n          }\n          option.message_id = last_char_message_id;\n          break;\n      }\n      if (option.message_id < 0 || option.message_id > last_message_id) {\n        throw Error(`提供的 message_id 不在 [0, ${last_message_id}] 内, 你提供的是: ${option.message_id} `);\n      }\n\n      const chat_message = chat[option.message_id];\n      const result = messageFormatting(\n        text,\n        chat_message.name,\n        chat_message.is_system,\n        chat_message.is_user,\n        option.message_id,\n      );\n\n      console.info(\n        `${getLogPrefix(event)}将字符串处理为酒馆用于显示的 html 格式, 字符串: '${text}', 选项: '${JSON.stringify(\n          option,\n        )}', 结果: '${result}'`,\n      );\n      return result;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { getRequestHeaders } from '@sillytavern/script';\nimport { t } from '@sillytavern/scripts/i18n';\n\ninterface IframeUpdateFrontendVersion extends IframeMessage {\n  request: '[FrontendVersion][updateFrontendVersion]';\n  text: string;\n}\n\nexport function registerIframeFrontendVersionHandler() {\n  registerIframeHandler(\n    '[FrontendVersion][updateFrontendVersion]',\n    async (event: MessageEvent<IframeUpdateFrontendVersion>): Promise<boolean> => {\n      const extension_name = 'JS-Slash-Runner';\n\n      const response = await fetch('/api/extensions/update', {\n        method: 'POST',\n        headers: getRequestHeaders(),\n        body: JSON.stringify({ extensionName: extension_name }),\n      });\n\n      if (!response.ok) {\n        const text = await response.text();\n        // @ts-expect-error\n        toastr.error(text || response.statusText, t`更新前端助手失败`, { timeOut: 5000 });\n        console.error(`${getLogPrefix(event)}更新前端助手失败: ${text}`);\n        return false;\n      }\n\n      const data = await response.json();\n      if (data.isUpToDate) {\n        console.info(`${getLogPrefix(event)}前端助手已是最新版本, 无需更新`);\n      } else {\n        // @ts-expect-error\n        toastr.success(t`成功更新前端助手为 ${data.shortCommitHash}`, t`请刷新页面`);\n        console.info(`${getLogPrefix(event)}成功更新前端助手为  ${data.shortCommitHash}, 请刷新页面`);\n      }\n      return true;\n    },\n  );\n}\n","import { findChar } from '@/compatibility';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  characters,\n  getOneCharacter,\n  getRequestHeaders,\n  saveCharacterDebounced,\n  saveSettings,\n  saveSettingsDebounced,\n  this_chid,\n} from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { ensureImageFormatSupported, getCharaFilename } from '@sillytavern/scripts/utils';\nimport {\n  createNewWorldInfo,\n  deleteWorldInfo,\n  getWorldInfoSettings,\n  selected_world_info,\n  setWorldInfoButtonClass,\n  world_info,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface IframeGetLorebookSettings extends IframeMessage {\n  request: '[Lorebook][getLorebookSettings]';\n}\n\ninterface IframeSetLorebookSettings extends IframeMessage {\n  request: '[Lorebook][setLorebookSettings]';\n  settings: Partial<LorebookSettings>;\n}\n\ninterface IframeGetCharLorebooks extends IframeMessage {\n  request: '[Lorebook][getCharLorebooks]';\n  option: GetCharLorebooksOption;\n}\n\ninterface IframesetCurrentCharLorebooks extends IframeMessage {\n  request: '[Lorebook][setCurrentCharLorebooks]';\n  lorebooks: Partial<CharLorebooks>;\n}\n\ninterface IframeGetLorebooks extends IframeMessage {\n  request: '[Lorebook][getLorebooks]';\n}\n\ninterface IframeDeleteLorebook extends IframeMessage {\n  request: '[Lorebook][deleteLorebook]';\n  lorebook: string;\n}\n\ninterface IframeCreateLorebook extends IframeMessage {\n  request: '[Lorebook][createLorebook]';\n  lorebook: string;\n}\n\nasync function editCurrentCharacter(): Promise<boolean> {\n  $('#rm_info_avatar').html('');\n  const form_data = new FormData(($('#form_create') as JQuery<HTMLFormElement>).get(0));\n\n  const raw_file = form_data.get('avatar');\n  if (raw_file instanceof File) {\n    const converted_file = await ensureImageFormatSupported(raw_file);\n    form_data.set('avatar', converted_file);\n  }\n\n  const headers = getRequestHeaders();\n  // @ts-ignore\n  delete headers['Content-Type'];\n\n  // TODO: 这里的代码可以用来修改第一条消息!\n  form_data.delete('alternate_greetings');\n  const chid = $('.open_alternate_greetings').data('chid');\n  if (chid && Array.isArray(characters[chid]?.data?.alternate_greetings)) {\n    for (const value of characters[chid].data.alternate_greetings) {\n      form_data.append('alternate_greetings', value);\n    }\n  }\n\n  const response = await fetch('/api/characters/edit', {\n    method: 'POST',\n    headers: headers,\n    body: form_data,\n    cache: 'no-cache',\n  });\n\n  if (!response.ok) {\n    return false;\n  }\n\n  await getOneCharacter(form_data.get('avatar_url'));\n\n  $('#add_avatar_button').replaceWith($('#add_avatar_button').val('').clone(true));\n  $('#create_button').attr('value', 'Save');\n\n  return true;\n}\n\nfunction toLorebookSettings(world_info_settings: ReturnType<typeof getWorldInfoSettings>): LorebookSettings {\n  return {\n    selected_global_lorebooks: (world_info_settings.world_info as { globalSelect: string[] }).globalSelect,\n\n    scan_depth: world_info_settings.world_info_depth,\n    context_percentage: world_info_settings.world_info_budget,\n    budget_cap: world_info_settings.world_info_budget_cap,\n    min_activations: world_info_settings.world_info_min_activations,\n    max_depth: world_info_settings.world_info_min_activations_depth_max,\n    max_recursion_steps: world_info_settings.world_info_max_recursion_steps,\n\n    insertion_strategy: { 0: 'evenly', 1: 'character_first', 2: 'global_first' }[\n      world_info_settings.world_info_character_strategy\n    ] as 'evenly' | 'character_first' | 'global_first',\n\n    include_names: world_info_settings.world_info_include_names,\n    recursive: world_info_settings.world_info_recursive,\n    case_sensitive: world_info_settings.world_info_case_sensitive,\n    match_whole_words: world_info_settings.world_info_match_whole_words,\n    use_group_scoring: world_info_settings.world_info_use_group_scoring,\n    overflow_alert: world_info_settings.world_info_overflow_alert,\n  };\n}\n\nfunction assignPartialLorebookSettings(settings: Partial<LorebookSettings>): void {\n  const for_eachs = {\n    selected_global_lorebooks: (value: LorebookSettings['selected_global_lorebooks']) => {\n      $('#world_info').find('option[value!=\"\"]').remove();\n      world_names.forEach((item, i) =>\n        $('#world_info').append(`<option value='${i}'${value.includes(item) ? ' selected' : ''}>${item}</option>`),\n      );\n\n      selected_world_info.length = 0;\n      selected_world_info.push(...value);\n      saveSettings();\n    },\n\n    scan_depth: (value: LorebookSettings['scan_depth']) => {\n      $('#world_info_depth').val(value).trigger('input');\n    },\n    context_percentage: (value: LorebookSettings['context_percentage']) => {\n      $('#world_info_budget').val(value).trigger('input');\n    },\n    budget_cap: (value: LorebookSettings['budget_cap']) => {\n      $('#world_info_budget_cap').val(value).trigger('input');\n    },\n    min_activations: (value: LorebookSettings['min_activations']) => {\n      $('#world_info_min_activations').val(value).trigger('input');\n    },\n    max_depth: (value: LorebookSettings['max_depth']) => {\n      $('#world_info_min_activations_depth_max').val(value).trigger('input');\n    },\n    max_recursion_steps: (value: LorebookSettings['max_recursion_steps']) => {\n      $('#world_info_max_recursion_steps').val(value).trigger('input');\n    },\n\n    insertion_strategy: (value: LorebookSettings['insertion_strategy']) => {\n      const converted_value = { evenly: 0, character_first: 1, global_first: 2 }[value];\n      $(`#world_info_character_strategy option[value='${converted_value}']`).prop('selected', true);\n      $('#world_info_character_strategy').val(converted_value).trigger('change');\n    },\n\n    include_names: (value: LorebookSettings['include_names']) => {\n      $('#world_info_include_names').prop('checked', value).trigger('input');\n    },\n    recursive: (value: LorebookSettings['recursive']) => {\n      $('#world_info_recursive').prop('checked', value).trigger('input');\n    },\n    case_sensitive: (value: LorebookSettings['case_sensitive']) => {\n      $('#world_info_case_sensitive').prop('checked', value).trigger('input');\n    },\n    match_whole_words: (value: LorebookSettings['match_whole_words']) => {\n      $('#world_info_match_whole_words').prop('checked', value).trigger('input');\n    },\n    use_group_scoring: (value: LorebookSettings['use_group_scoring']) => {\n      $('#world_info_use_group_scoring').prop('checked', value).trigger('change');\n    },\n    overflow_alert: (value: LorebookSettings['overflow_alert']) => {\n      $('#world_info_overflow_alert').prop('checked', value).trigger('change');\n    },\n  };\n\n  Object.entries(settings)\n    .filter(([_, value]) => value !== undefined)\n    .forEach(([field, value]) => {\n      // @ts-ignore\n      for_eachs[field]?.(value);\n    });\n}\n\nexport function registerIframeLorebookHandler() {\n  registerIframeHandler(\n    '[Lorebook][getLorebookSettings]',\n    async (event: MessageEvent<IframeGetLorebookSettings>): Promise<LorebookSettings> => {\n      const lorebook_settings = toLorebookSettings(getWorldInfoSettings());\n\n      console.info(`${getLogPrefix(event)}获取世界书全局设置:\\n${JSON.stringify(lorebook_settings, undefined, 2)}`);\n      return lorebook_settings;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][setLorebookSettings]',\n    async (event: MessageEvent<IframeSetLorebookSettings>): Promise<void> => {\n      const settings = event.data.settings;\n      if (settings.selected_global_lorebooks) {\n        const inexisting_lorebooks = settings.selected_global_lorebooks.filter(\n          lorebook => !world_names.includes(lorebook),\n        );\n        if (inexisting_lorebooks.length > 0) {\n          throw Error(`尝试修改要全局启用的世界书, 但未找到以下世界书: ${JSON.stringify(inexisting_lorebooks)}`);\n        }\n      }\n\n      assignPartialLorebookSettings(settings);\n\n      console.info(`${getLogPrefix(event)}修改世界书全局设置:\\n${JSON.stringify(settings, undefined, 2)}`);\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][getCharLorebooks]',\n    async (event: MessageEvent<IframeGetCharLorebooks>): Promise<CharLorebooks> => {\n      const option = event.data.option;\n\n      // @ts-ignore\n      if (selected_group && !option.name) {\n        throw Error(`不要在群组中调用这个功能`);\n      }\n      const filename = option.name ?? characters[this_chid]?.avatar ?? null;\n      // @ts-ignore\n      const character = findChar({ name: filename });\n      if (!character) {\n        throw Error(`未找到名为 '${filename}' 的角色卡`);\n      }\n\n      let books: CharLorebooks = { primary: null, additional: [] };\n\n      if (character.data?.extensions?.world) {\n        books.primary = character.data?.extensions?.world;\n      }\n\n      // @ts-ignore\n      const extraCharLore = world_info.charLore?.find(e => e.name === filename);\n      if (extraCharLore && Array.isArray(extraCharLore.extraBooks)) {\n        books.additional = extraCharLore.extraBooks;\n      }\n\n      console.info(\n        `${getLogPrefix(event)}获取角色卡绑定的世界书, 选项: ${JSON.stringify(option)}, 获取结果: ${JSON.stringify(\n          books,\n        )}`,\n      );\n      return books;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][setCurrentCharLorebooks]',\n    async (event: MessageEvent<IframesetCurrentCharLorebooks>): Promise<void> => {\n      const lorebooks = event.data.lorebooks;\n\n      // @ts-ignore\n      if (selected_group && !option.name) {\n        throw Error(`不要在群组中调用这个功能`);\n      }\n      const filename = getCharaFilename(this_chid);\n      if (!filename) {\n        throw Error(`未打开任何角色卡`);\n      }\n\n      const inexisting_lorebooks: string[] = [\n        ...(lorebooks.primary && !world_names.includes(lorebooks.primary) ? [lorebooks.primary] : []),\n        ...(lorebooks.additional ? lorebooks.additional.filter(lorebook => !world_names.includes(lorebook)) : []),\n      ];\n      if (inexisting_lorebooks.length > 0) {\n        throw Error(`尝试修改 '${filename}' 绑定的世界书, 但未找到以下世界书: ${inexisting_lorebooks}`);\n      }\n\n      if (lorebooks.primary !== undefined) {\n        const previous_primary = String($('#character_world').val());\n        $('#character_world').val(lorebooks.primary ? lorebooks.primary : '');\n\n        $('.character_world_info_selector')\n          .find('option:selected')\n          .val(lorebooks.primary ? world_names.indexOf(lorebooks.primary) : '');\n\n        if (previous_primary && !lorebooks.primary) {\n          const data = JSON.parse(String($('#character_json_data').val()));\n          if (data?.data?.character_book) {\n            data.data.character_book = undefined;\n          }\n          $('#character_json_data').val(JSON.stringify(data));\n        }\n\n        if (!(await editCurrentCharacter())) {\n          throw Error(`尝试为 '${filename}' 绑定主要世界书, 但在访问酒馆后端时出错`);\n        }\n\n        // @ts-ignore\n        setWorldInfoButtonClass(undefined, !!lorebooks.primary);\n      }\n\n      if (lorebooks.additional !== undefined) {\n        interface CharLoreEntry {\n          name: string;\n          extraBooks: string[];\n        }\n        let char_lore = (world_info as { charLore: CharLoreEntry[] }).charLore ?? [];\n\n        const existing_char_index = char_lore.findIndex(entry => entry.name === filename);\n        if (existing_char_index === -1) {\n          char_lore.push({ name: filename, extraBooks: lorebooks.additional });\n        } else if (lorebooks.additional.length === 0) {\n          char_lore.splice(existing_char_index, 1);\n        } else {\n          char_lore[existing_char_index].extraBooks = lorebooks.additional;\n        }\n\n        Object.assign(world_info, { charLore: char_lore });\n      }\n\n      saveCharacterDebounced();\n      saveSettingsDebounced();\n\n      console.info(\n        `${getLogPrefix(event)}修改角色卡绑定的世界书, 要修改的部分: ${JSON.stringify(lorebooks)}${\n          lorebooks.primary === undefined ? ', 主要世界书保持不变' : ''\n        }${lorebooks.additional === undefined ? ', 附加世界书保持不变' : ''}`,\n      );\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][getLorebooks]',\n    async (event: MessageEvent<IframeGetLorebooks>): Promise<string[]> => {\n      console.info(`${getLogPrefix(event)}获取世界书列表: ${JSON.stringify(world_names)}`);\n      return world_names;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][deleteLorebook]',\n    async (event: MessageEvent<IframeDeleteLorebook>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n\n      const success = await deleteWorldInfo(lorebook);\n\n      console.info(`${getLogPrefix(event)}移除世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n      return success;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][createLorebook]',\n    async (event: MessageEvent<IframeCreateLorebook>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n\n      const success = await createNewWorldInfo(lorebook, { interactive: false });\n\n      console.info(`${getLogPrefix(event)}新建世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n      return success;\n    },\n  );\n}\n","// for compatibility with old sillytavern versions\nimport { characters, this_chid } from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { getTagsList } from '@sillytavern/scripts/tags';\nimport { equalsIgnoreCaseAndAccents } from '@sillytavern/scripts/utils';\n\n// for 1.12.6\n/**\n * Finds a character by name, with optional filtering and precedence for avatars\n * @param {object} [options={}] - The options for the search\n * @param {string?} [options.name=null] - The name to search for\n * @param {boolean} [options.allowAvatar=true] - Whether to allow searching by avatar\n * @param {boolean} [options.insensitive=true] - Whether the search should be case insensitive\n * @param {string[]?} [options.filteredByTags=null] - Tags to filter characters by\n * @param {boolean} [options.preferCurrentChar=true] - Whether to prefer the current character(s)\n * @param {boolean} [options.quiet=false] - Whether to suppress warnings\n * @returns {any?} - The found character or null if not found\n */\nexport function findChar({\n  name = null,\n  allowAvatar = true,\n  insensitive = true,\n  filteredByTags = null,\n  preferCurrentChar = true,\n  quiet = false,\n} = {}) {\n  const matches = (char: any) =>\n    !name ||\n    (allowAvatar && char.avatar === name) ||\n    (insensitive ? equalsIgnoreCaseAndAccents(char.name, name) : char.name === name);\n\n  // Filter characters by tags if provided\n  let filteredCharacters = characters;\n  if (filteredByTags) {\n    filteredCharacters = characters.filter(char => {\n      const charTags = getTagsList(char.avatar, false);\n      // @ts-ignore\n      return filteredByTags.every(tagName => charTags.some(x => x.name == tagName));\n    });\n  }\n\n  // Get the current character(s)\n  /** @type {any[]} */\n  // @ts-ignore\n  const currentChars = (selected_group as any)\n    ? // @ts-ignore\n      groups\n        // @ts-ignore\n        .find(group => group.id === selected_group)\n        // @ts-ignore\n        ?.members.map(member => filteredCharacters.find(char => char.avatar === member))\n    : // @ts-ignore\n      filteredCharacters.filter(char => characters[this_chid]?.avatar === char.avatar);\n\n  // If we have a current char and prefer it, return that if it matches\n  if (preferCurrentChar) {\n    const preferredCharSearch = currentChars.filter(matches);\n    if (preferredCharSearch.length > 1) {\n      // @ts-ignore\n      if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n      else console.warn('Multiple characters found for given conditions. Returning the first match.');\n    }\n    if (preferredCharSearch.length) {\n      return preferredCharSearch[0];\n    }\n  }\n\n  // If allowAvatar is true, search by avatar first\n  if (allowAvatar && name) {\n    const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n    if (characterByAvatar) {\n      return characterByAvatar;\n    }\n  }\n\n  // Search for matching characters by name\n  const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n  if (matchingCharacters.length > 1) {\n    // @ts-ignore\n    if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n    else console.warn('Multiple characters found for given conditions. Returning the first match.');\n  }\n\n  return matchingCharacters[0] || null;\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\n\ninterface IframeSlash extends IframeMessage {\n  request: '[Slash][triggerSlash]' | '[Slash][triggerSlashWithResult]';\n  command: string;\n}\n\nexport function registerIframeSlashHandler() {\n  registerIframeHandler('[Slash][triggerSlash]', async (event: MessageEvent<IframeSlash>): Promise<void> => {\n    const command = event.data.command;\n\n    const result = await executeSlashCommandsWithOptions(command);\n    if (result.isError) {\n      throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n    }\n\n    console.info(`${getLogPrefix(event)}运行 Slash 命令: ${command}`);\n  });\n\n  registerIframeHandler(\n    '[Slash][triggerSlashWithResult]',\n    async (event: MessageEvent<IframeSlash>): Promise<string | undefined> => {\n      const command = event.data.command;\n\n      const result = await executeSlashCommandsWithOptions(command);\n      if (result.isError) {\n        throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n      }\n\n      console.info(`${getLogPrefix(event)}运行 Slash 命令 '${command}', 结果: ${result.pipe}`);\n      return result.pipe;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { substituteParamsExtended } from '@sillytavern/script';\n\ninterface IframeSubstitudeMacros extends IframeMessage {\n  request: '[Utils][substitudeMacros]';\n  text: string;\n}\n\nexport function registerIframeUtilHandler() {\n  registerIframeHandler(\n    '[Utils][substitudeMacros]',\n    async (event: MessageEvent<IframeSubstitudeMacros>): Promise<string> => {\n      const text = event.data.text;\n\n      const text_demacroed = substituteParamsExtended(text);\n\n      console.info(`${getLogPrefix(event)}替换字符串中的宏, 字符串: '${text}', 结果: '${text_demacroed}'`);\n      return text_demacroed;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { audioEnable, audioImport, audioMode, audioPlay, audioSelect } from '@/slash_command/audio';\n\ninterface IframeAudioMode extends IframeMessage {\n  request: '[Audio][audioMode]';\n  type: string;\n  mode: string;\n}\n\ninterface IframeAudioEnable extends IframeMessage {\n  request: '[Audio][audioEnable]';\n  type: string;\n  state?: string;\n}\n\ninterface IframeAudioPlay extends IframeMessage {\n  request: '[Audio][audioPlay]';\n  type: string;\n  play?: string;\n}\n\ninterface IframeAudioImport extends IframeMessage {\n  request: '[Audio][audioImport]';\n  type: string;\n  url: string;\n  play?: string;\n}\n\ninterface IframeAudioSelect extends IframeMessage {\n  request: '[Audio][audioSelect]';\n  type: string;\n  url: string;\n}\n\nexport function registerIframeAudioHandler() {\n  registerIframeHandler('[Audio][audioMode]', async (event: MessageEvent<IframeAudioMode>): Promise<void> => {\n    const type = event.data.type;\n    const mode = event.data.mode;\n    await audioMode({ type, mode });\n    console.info(`${getLogPrefix(event)} 切换音频模式: ${type}-${mode}`);\n  });\n\n  registerIframeHandler('[Audio][audioEnable]', async (event: MessageEvent<IframeAudioEnable>): Promise<void> => {\n    const type = event.data.type;\n    const state = event.data.state;\n    await audioEnable({ type, state });\n    console.info(`${getLogPrefix(event)} 切换音频状态: ${type}-${state}`);\n  });\n\n  registerIframeHandler('[Audio][audioPlay]', async (event: MessageEvent<IframeAudioPlay>): Promise<void> => {\n    const type = event.data.type;\n    const play = event.data.play;\n    await audioPlay({ type, play });\n    console.info(`${getLogPrefix(event)} 切换音频播放状态: ${type}-${play}`);\n  });\n\n  registerIframeHandler('[Audio][audioImport]', async (event: MessageEvent<IframeAudioImport>): Promise<void> => {\n    const type = event.data.type;\n    const url = event.data.url;\n    const play = event.data.play;\n    await audioImport({ type, play }, url);\n    console.info(`${getLogPrefix(event)} 导入音频: ${type}-${url}-${play}`);\n  });\n\n  registerIframeHandler('[Audio][audioSelect]', async (event: MessageEvent<IframeAudioSelect>): Promise<void> => {\n    const type = event.data.type;\n    const url = event.data.url;\n    await audioSelect({ type }, url);\n    console.info(`${getLogPrefix(event)} 选择音频: ${type}-${url}`);\n  });\n}\n","import { defaultAudioSettings, initAudioComponents } from '@/component/audio';\nimport {\n  destroyCharacterLevelOnExtension,\n  initializeCharacterLevelOnExtension,\n} from '@/component/character_level/index';\nimport {\n  destroyMacroOnExtension,\n  initializeMacroOnExtension,\n  registerAllMacros,\n  unregisterAllMacros,\n} from '@/component/macro';\nimport {\n  addCodeToggleButtonsToAllMessages,\n  addRenderingOptimizeSettings,\n  defaultIframeSettings,\n  initIframePanel,\n  partialRenderEvents,\n  removeRenderingOptimizeSettings,\n  renderAllIframes,\n  renderMessageAfterDelete,\n  renderPartialIframes,\n  tampermonkey_script,\n  viewport_adjust_script,\n} from '@/component/message_iframe';\nimport { initAutoSettings } from '@/component/script_repository';\nimport { iframe_client } from '@/iframe_client/index';\nimport { handleIframe } from '@/iframe_server/index';\nimport { checkVariablesEvents, clearTempVariables, shouldUpdateVariables } from '@/iframe_server/variables';\nimport { script_url } from '@/script_url';\nimport { initSlashEventEmit } from '@/slash_command/event';\nimport third_party from '@/third_party.html';\n\nimport { eventSource, event_types, reloadCurrentChat, saveSettingsDebounced, this_chid } from '@sillytavern/script';\nimport { extension_settings, renderExtensionTemplateAsync } from '@sillytavern/scripts/extensions';\nimport { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\nimport { SlashCommandNamedArgument } from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nexport const extensionName = 'JS-Slash-Runner';\nexport const extensionFolderPath = `third-party/${extensionName}`;\n\nlet isScriptLibraryOpen = false;\n\nconst defaultSettings = {\n  activate_setting: true,\n  render: {\n    ...defaultIframeSettings,\n  },\n  audio: {\n    ...defaultAudioSettings,\n  },\n};\n\nconst handleChatChanged = () => {\n  renderAllIframes();\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handlePartialRender = (mesId: string) => {\n  renderPartialIframes(mesId);\n};\n\nconst handleMessageDeleted = (mesId: string) => {\n  clearTempVariables();\n  renderMessageAfterDelete(mesId);\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handleVariableUpdated = (mesId: string) => {\n  shouldUpdateVariables(mesId);\n};\n\nasync function onExtensionToggle(userAction: boolean = true) {\n  const isEnabled = Boolean($('#activate_setting').prop('checked'));\n  if (userAction) {\n    extension_settings[extensionName].activate_setting = isEnabled;\n  }\n  if (isEnabled) {\n    script_url.set('iframe_client', iframe_client);\n    script_url.set('viewport_adjust_script', viewport_adjust_script);\n    script_url.set('tampermonkey_script', tampermonkey_script);\n\n    registerAllMacros();\n    initializeMacroOnExtension();\n    initializeCharacterLevelOnExtension();\n\n    // 重新注入前端卡优化的样式和设置\n    if (userAction && getSettingValue('render.rendering_optimize')) {\n      addRenderingOptimizeSettings();\n    }\n\n    window.addEventListener('message', handleIframe);\n\n    eventSource.on(event_types.CHAT_CHANGED, handleChatChanged);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.on(eventType, (mesId: string) => handlePartialRender(mesId));\n    });\n\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.on(eventType, (mesId: string) => handleVariableUpdated(mesId));\n    });\n    eventSource.on(event_types.MESSAGE_DELETED, (mesId: string) => handleMessageDeleted(mesId));\n\n    if (userAction) {\n      await renderAllIframes();\n    }\n  } else {\n    script_url.delete('iframe_client');\n    script_url.delete('viewport_adjust_script');\n    script_url.delete('tampermonkey_script');\n\n    unregisterAllMacros();\n    destroyMacroOnExtension();\n    destroyCharacterLevelOnExtension();\n\n    if (getSettingValue('render.rendering_optimize')) {\n      removeRenderingOptimizeSettings();\n    }\n\n    window.removeEventListener('message', handleIframe);\n\n    eventSource.removeListener(event_types.CHAT_CHANGED, handleChatChanged);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, (mesId: string) => handlePartialRender(mesId));\n    });\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, (mesId: string) => handleVariableUpdated(mesId));\n    });\n    eventSource.removeListener(event_types.MESSAGE_DELETED, (mesId: string) => handleMessageDeleted(mesId));\n    if (userAction && this_chid !== undefined) {\n      await reloadCurrentChat();\n    }\n  }\n  $('#js_slash_runner_text').text(getSettingValue('activate_setting') ? '关闭前端渲染' : '开启前端渲染');\n  saveSettingsDebounced();\n}\n\nfunction formatSlashCommands(): string {\n  const cmdList = Object.keys(SlashCommandParser.commands)\n    .filter(key => SlashCommandParser.commands[key].name === key) // exclude aliases\n    .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n    .map(key => SlashCommandParser.commands[key]);\n  const transform_arg = (arg: SlashCommandNamedArgument) => {\n    const transformers = {\n      name: (value: SlashCommandNamedArgument['name']) => ({ name: value }),\n      // description: (value: SlashCommandNamedArgument['description']) => ({ description: value }),\n      isRequired: (value: SlashCommandNamedArgument['isRequired']) => ({\n        is_required: value,\n      }),\n      defaultValue: (value: SlashCommandNamedArgument['defaultValue']) =>\n        value !== null ? { default_value: value } : {},\n      acceptsMultiple: (value: SlashCommandNamedArgument['acceptsMultiple']) => ({ accepts_multiple: value }),\n      enumList: (value: SlashCommandNamedArgument['enumList']) =>\n        value.length > 0 ? { enum_list: value.map(e => e.value) } : {},\n      typeList: (value: SlashCommandNamedArgument['typeList']) => (value.length > 0 ? { type_list: value } : {}),\n    };\n\n    return Object.entries(arg)\n      .filter(([_, value]) => value !== undefined)\n      .reduce(\n        (result, [key, value]) => ({\n          ...result,\n          // @ts-ignore\n          ...transformers[key]?.(value),\n        }),\n        {},\n      );\n  };\n  const transform_help_string = (help_string: string) => {\n    const content = $('<span>').html(help_string);\n    return content\n      .text()\n      .split('\\n')\n      .map(line => line.trim())\n      .filter(line => line !== '')\n      .join(' ');\n  };\n\n  return cmdList\n    .map(cmd => ({\n      name: cmd.name,\n      named_args: cmd.namedArgumentList.map(transform_arg) ?? [],\n      unnamed_args: cmd.unnamedArgumentList.map(transform_arg) ?? [],\n      return_type: cmd.returns ?? 'void',\n      help_string: transform_help_string(cmd.helpString) ?? 'NO DETAILS',\n    }))\n    .map(\n      cmd =>\n        `/${cmd.name}${cmd.named_args.length > 0 ? ` ` : ``}${cmd.named_args\n          .map(\n            arg =>\n              `[${arg.accepts_multiple ? `...` : ``}${arg.name}=${\n                arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n              }]${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n          )\n          .join(' ')}${cmd.unnamed_args.length > 0 ? ` ` : ``}${cmd.unnamed_args\n          .map(\n            arg =>\n              `(${arg.accepts_multiple ? `...` : ``}${\n                arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n              })${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n          )\n          .join(' ')} // ${cmd.help_string}`,\n    )\n    .join('\\n');\n}\n\n/**\n * 获取设置变量的值\n * @returns 设置变量的值\n */\nexport function getSettingValue(key: string) {\n  const keys = key.split('.');\n  let value = extension_settings[extensionName];\n\n  for (const k of keys) {\n    if (value === undefined || value === null) {\n      return undefined;\n    }\n    value = value[k];\n  }\n\n  return value;\n}\n\nfunction addQuickButton() {\n  const buttonHtml = $(`\n  <div id=\"js_slash_runner_container\" class=\"list-group-item flex-container flexGap5 interactable\">\n      <div class=\"fa-solid fa-puzzle-piece extensionsMenuExtensionButton\" /></div>\n      <span id=\"js_slash_runner_text\">${getSettingValue('activate_setting') ? '关闭前端渲染' : '开启前端渲染'}</span>\n  </div>`);\n  buttonHtml.css('display', 'flex');\n  $('#extensionsMenu').append(buttonHtml);\n  $('#js_slash_runner_container').on('click', function () {\n    const currentChecked = $('#activate_setting').prop('checked');\n    $('#activate_setting').prop('checked', !currentChecked);\n    onExtensionToggle(true);\n  });\n}\n/**\n * 初始化扩展面板\n */\njQuery(async () => {\n  const getContainer = () => $(document.getElementById('extensions_settings'));\n  const windowHtml = await renderExtensionTemplateAsync(`${extensionFolderPath}`, 'settings');\n  getContainer().append(windowHtml);\n\n  extension_settings[extensionName] = extension_settings[extensionName] || {};\n\n  if (\n    !extension_settings[extensionName] ||\n    !extension_settings[extensionName].render ||\n    !extension_settings[extensionName].audio\n  ) {\n    Object.assign(extension_settings[extensionName], defaultSettings);\n    saveSettingsDebounced();\n  }\n\n  $('#activate_setting').prop('checked', getSettingValue('activate_setting'));\n  $('#activate_setting').on('click', () => onExtensionToggle(true));\n  if (getSettingValue('activate_setting')) {\n    onExtensionToggle(false);\n  }\n\n  addQuickButton();\n\n  $('#scriptLibraryButton')\n    .off('click')\n    .on('click', function () {\n      isScriptLibraryOpen = !isScriptLibraryOpen;\n      $('#scriptLibraryPopup').slideToggle(200, 'swing');\n    });\n\n  $(document).on('mousedown touchstart', function (e) {\n    const clickTarget = $(e.target);\n\n    if (\n      isScriptLibraryOpen &&\n      clickTarget.closest('#scriptLibraryButton').length === 0 &&\n      clickTarget.closest('#scriptLibraryPopup').length === 0\n    ) {\n      $('#scriptLibraryPopup').slideUp(200, 'swing');\n      isScriptLibraryOpen = false;\n    }\n  });\n  $('#copy_third_party_installation').on('pointerup', function () {\n    navigator.clipboard.writeText(\n      'npm install --save-dev @types/file-saver @types/jquery @types/jqueryui @types/lodash @types/yamljs',\n    );\n    executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  });\n  $('#copy_third_party_tag').on('pointerup', function () {\n    navigator.clipboard.writeText(third_party);\n    executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  });\n\n  $('#download_slash_commands').on('click', function () {\n    const url = URL.createObjectURL(new Blob([formatSlashCommands()], { type: 'text/plain' }));\n    $(this).attr('href', url);\n    $(this).attr('download', 'slash_command.txt');\n    setTimeout(() => URL.revokeObjectURL(url), 0);\n  });\n  initAutoSettings();\n  initAudioComponents();\n  initSlashEventEmit();\n  initIframePanel();\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","x","d","__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__","async","audioMode","args","type","toLowerCase","mode","includes","console","warn","extension_settings","extensionName","audio","bgm_mode","iconMap","repeat","random","single","stop","$","removeClass","addClass","ambient_mode","saveSettingsDebounced","audioEnable","state","onAudioEnabledClick","audioPlay","play","playAudio","pause","audioImport","url","urlArray","split","map","trim","filter","index","self","indexOf","length","chat_metadata","variables","typeKey","existingUrls","mergedUrls","Set","saveMetadataDebounced","updateAudioSelect","selectedUrl","bgm_selected","updateAudio","ambient_selected","audioSelect","playlist","list_BGMS","list_ambients","__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__","__WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__","__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__","bgmEnded","ambientEnded","cooldownBGM","isUserInput","audio_setting","bgm_enabled","ambient_enabled","audioEnded","audioSelector","attr","audio_url","getAudioUrl","currentFile","filteredPlaylist","file","Math","floor","getNextFileByMode","cleanAudioSrc","src","cleanAudioUrl","decodeURIComponent","load","Promise","resolve","canPlayHandler","removeEventListener","readyState","HTMLMediaElement","HAVE_ENOUGH_DATA","addEventListener","audioUrlWithCacheBusting","originalUrl","cacheBuster","Date","getTime","separator","getAudioUrlWithCacheBusting","selectElement","val","empty","audioList","selectedSetting","Array","isArray","forEach","fileLabel","replace","append","Option","log","toUpperCase","toggleAudioControls","status","shouldEnable","id","enabled","initAudioEventListeners","on","onVolumeSliderWheelEvent","e","slider","this","preventDefault","stopPropagation","delta","deltaY","newVal","Number","trigger","handleLongPress","volumeControlId","iconId","$volumeControl","$icon","pressTimer","isMobile","setTimeout","css","clearTimeout","document","event","is","target","has","refreshAudioResources","openUrlManagerPopup","urlManager","renderExtensionTemplateAsync","extensionFolderPath","prepend","savedAudioUrl","find","urlTemplate","urlValue","error","updatedUrls","renderUrl","container","urlHtml","clone","fileName","parts","text","currentUrl","inputUrl","callGenericPopup","POPUP_TYPE","INPUT","newFileName","pop","newId","CONFIRM","remove","newUrls","input","debug","from","openUrlImportPopup","sortable","delay","getSortableDelay","handle","okButton","cancelButton","newUrlList","each","push","currentBgmUrl","currentAmbientUrl","onEnabledClick","isEnabled","bgmUrl","ambientUrl","bgmAudioElement","Error","ambientAudioElement","activate_setting","audioElement","playPauseIcon","code","selectedAudio","onAudioModeClick","modes","icon","nextModeIndex","findIndex","m","onAudioSelectChange","onAudioCooldownInput","audio_cooldown","onAudioVolumeChange","onAudioMuteClick","toggleClass","togglePlayPause","paused","initAudioStyles","hide","$audioElement","$progressSlider","isNaN","duration","progressPercent","currentTime","remainingTime","isFadingOut","fadeStep","volume","fadeOutInterval","setInterval","max","clearInterval","targetVolume","fadeInInterval","min","value","initializeProgressBar","initAudioComponents","audio_enabled","audioTypes","events","selector","handler","bindTypeEvents","volumeSlider","passive","urlManagerMap","bgm","ambient","bgmAudio","ambientAudio","togglePlayPauseIcon","iconSelector","SlashCommandParser","addCommandObject","SlashCommand","fromProps","name","callback","namedArgumentList","SlashCommandNamedArgument","description","typeList","ARGUMENT_TYPE","STRING","enumList","SlashCommandEnumValue","enumTypes","enum","enumIcons","isRequired","unnamedArgumentList","SlashCommandArgument","helpString","BOOLEAN","defaultValue","commonEnumProviders","boolean","loop","shuffle","redo","getIframeName","window","source","frameElement","getLogPrefix","data","request","eventSource","event_types","CHAT_CHANGED","$bgmPlayer","$ambientPlayer","iframe_handlers","registerIframeHandler","Multimap","size_","Map","operator","constructor","iterable","put","size","values","create","add","set","putAll","arg1","arg2","pushed","TypeError","entries","hasEntry","delete","deleteEntry","current","clear","keys","gen","thisArg","undefined","Symbol","iterator","asMap","ret","toStringTag","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__","isCharacterTavernRegexEnabled","character_allowed_regex","characters","this_chid","avatar","getGlobalRegexes","regex","getCharacterRegexes","extensions","regex_scripts","toTavernRegex","regex_script_data","scope","script_name","scriptName","disabled","run_on_edit","runOnEdit","find_regex","findRegex","replace_string","replaceString","user_input","placement","regex_placement","USER_INPUT","ai_output","AI_OUTPUT","slash_command","SLASH_COMMAND","world_info","WORLD_INFO","destination","display","markdownOnly","prompt","promptOnly","min_depth","minDepth","max_depth","maxDepth","fromTavernRegex","tavern_regex","trimStrings","substituteRegex","loadScripts","prefix","filterScriptFromRegex","script","startsWith","toName","scripts","enabled_global_regexes","enabled_character_regexes","libraries_text","initialize","libraries","info","JSON","stringify","library","join","script_url","URL","createObjectURL","Blob","createObjectURLFromScript","extract","revokeObjectURL","script_map","iframe","_","load_promises","load_promise","createElement","style","srcdocContent","third_party","srcdoc","onload","body","appendChild","makeScriptIframe","allSettled","load_events","app_ready","destroyCharacterLevelOnExtension","eventType","removeListener","tampermonkeyMessageListener","renderingOptimizeEnabled","iframeResizeObservers","originalHighlightElement","hljs","highlightElement","RENDER_MODES","partialRenderEvents","CHARACTER_MESSAGE_RENDERED","USER_MESSAGE_RENDERED","MESSAGE_UPDATED","MESSAGE_SWIPED","defaultIframeSettings","auto_enable_character_regex","auto_disable_incompatible_options","tampermonkey_compatibility","process_depth","rendering_optimize","charsPath","getUserAvatarPath","user_avatar","getCharAvatarPath","thumbnailPath","getThumbnailUrl","targetAvatarImg","substring","lastIndexOf","clearAndRenderAllIframes","destroyIframe","removeAllListeners","cache","arr","i","fill","gc","clearAllIframe","reloadCurrentChat","renderAllIframes","renderMessagesInIframes","renderPartialIframes","mesId","processDepth","parseInt","totalMessages","getContext","chat","depthOffset","processVhUnits","htmlContent","test","viewportHeight","innerHeight","expression","specificMesId","getSettingValue","context","depthLimit","depthLimitedMessageIds","slice","messagesToRenderIds","messagesToCancelIds","specificIdNum","messageId","message","$iframes","all","toArray","updateMessageBlock","addCodeToggleButtons","renderedMessages","$messageElement","$codeElements","iframeCounter","extractedText","extractTextFromCode","disableLoading","hasMinVh","$wrapper","position","width","$iframe","loading","margin","border","loadingTimeout","$loadingOverlay","html","$loadingText","render","observeIframeContent","parent","contentWindow","postMessage","newHeight","emitAndWait","off","replaceWith","docBody","iframeId","resizeObserver","adjustIframeHeight","ResizeObserver","observe","cleanup","disconnect","iframeDoc","contents","$clone","removeData","handleTampermonkeyMessages","buttonName","$sendTextarea","jQuery","$sendButton","doc","bodyHeight","offsetHeight","htmlHeight","documentElement","currentHeight","parseFloat","abs","codeElement","textContent","nodeType","Node","TEXT_NODE","ELEMENT_NODE","onTampermonkeyCompatibilityChange","Boolean","currentPlayingIframeId","newIframeId","createGlobalAudioManager","onDepthInput","toastr","warning","addToggleButtonsToMessage","$mesText","$pre","$toggleButton","$tooltip","show","before","after","addCodeToggleButtonsToAllMessages","$chat","addRenderingOptimizeSettings","styleId","getElementById","setAttribute","head","innerHTML","element","removeRenderingOptimizeSettings","renderingOptimizationChange","userInput","initIframePanel","tampermonkeyEnabled","styleSheet","injectLoadingStyles","__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__","predefinedMacros","demacro","event_data","get_global_variable","global","get_chat_variable","get_message_variable","swipe_id","at","messages","content","replaceAll","_substring","path","__WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__","__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__","autoEnableCharacterRegex","selected_group","onAutoEnableCharacterRegexClick","registerAutoEnableCharacterRegex","autoDisableIncompatibleOptions","power_user","auto_fix_generated_markdown","trim_sentences","forbid_external_media","onAutoDisableIncompatibleOptions","registerAutoDisableIncompatibleOptions","unregisterAutoDisableIncompatibleOptions","iframe_client","Character","charData","characterData","allowAvatar","currentChar","filteredCharacters","characterByAvatar","char","matchingCharacters","findCharacterIndex","matchTypes","a","b","exactAvatarMatch","matchType","getChatsFromFiles","isGroupChat","chat_dict","chat_promise","sort","localeCompare","reverse","file_name","res","_rej","ch_name","avatar_url","endpoint","requestBody","chatResponse","fetch","method","headers","getRequestHeaders","ok","currentChat","json","shift","getCardData","getAvatarId","getRegexScripts","getCharacterBook","character_book","getWorldName","world","__WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__","__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__","__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__","__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__","__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__","abortController","AbortController","fromOverrides","overrides","world_info_before","persona_description","char_description","char_personality","scenario","world_info_after","dialogue_examples","with_depth_entries","chat_history","author_note","prompts","fromInjectionPrompt","inject","role","before_prompt","in_chat","after_prompt","none","depth","scan","should_scan","dryRun","character_names_behavior","roleTypes","system","extension_prompt_roles","SYSTEM","user","USER","assistant","ASSISTANT","default_order","StreamingProcessor","generator","stoppingStrings","result","isStopped","isFinished","messageBuffer","nullStreamingGeneration","onProgressStreaming","isFinal","newText","processedText","cleanUpMessage","charsToBalance","isOdd","countOccurrences","trimEnd","emit","fullText","onErrorStreaming","abort","unblockGeneration","saveChatConditional","generate","sw","Stopwatch","streaming_fps","timestamps","now","tick","seconds","toFixed","err","iframeGenerate","use_preset","image","max_chat_history","order","stream","processedUserInput","oai_settings","send_if_empty","getRegexedString","isPrompt","processUserInput","substituteParams","baseData","config","getOverrideContent","identifier","isPromptFiltered","depthPromptText","baseChatReplace","depth_prompt","name1","name2","depthPromptDepth","depthPromptRole","getExtensionPromptRoleByName","setExtensionPrompt","extension_prompt_types","IN_CHAT","note","allowWIScan","handleCharDepthPrompt","authorNoteOverride","NOTE_MODULE_NAME","metadata_keys","setAuthorNotePrompt","INJECT_TAG","IN_PROMPT","persona_description_position","persona_description_positions","NONE","BOTTOM_AN","TOP_AN","shouldWIAddPrompt","originalAN","extensionPrompts","ANWithDesc","AT_DEPTH","persona_description_depth","persona_description_role","setPersonaDescriptionExtensionPrompt","rawDescription","personality","rawPersonality","persona","rawPersona","rawScenario","mesExamples","rawMesExamples","jailbreak","getCharacterCardFields","mesExamplesArray","parseMesExamples","oaiMessageExamples","setOpenAIMessageExamples","promptBias","getBiasStrings","promptConfig","injects","positionMap","BEFORE_PROMPT","validatedInject","handleInjectedPrompts","oaiMessages","setOpenAIMessages","coreChat","is_system","chatItem","mes","regexType","is_user","regexedMessage","processChatHistory","userContent","worldInfo","chatForWI","world_info_include_names","this_max_context","getMaxContextSize","worldInfoString","worldInfoBefore","worldInfoAfter","worldInfoExamples","worldInfoDepth","getWorldInfoPrompt","clearInjectionPrompts","entry","joinedEntries","processWorldInfoDepth","finalWorldInfoBefore","finalWorldInfoAfter","processWorldInfo","removeTemporaryUserMessage","example","cleanedExample","wi_anchor_position","unshift","processMessageExamples","characterInfo","chatContext","prepareAndOverrideData","generate_data","originalScenario","scenarioOverride","userMessageTemp","convertFileToBase64","messageData","charDescription","charPersonality","Scenario","bias","quietPrompt","quietImage","cyclePrompt","systemPromptOverride","jailbreakPromptOverride","personaDescription","messageExamples","prepareOpenAIMessages","handlePresetPath","chatCompletion","ChatCompletion","setTokenBudget","openai_max_context","openai_max_tokens","reserveBudget","orderArray","reduce","acc","item","systemPrompts","promptCollection","PromptCollection","examplesCollection","MessageCollection","customPrompts","Prompt","system_prompt","characterPrompts","dialogue","dialogueIndex","chatMessages","promptIndex","chatMessage","Message","createAsync","setName","convertSystemPromptsToCollection","addToChatCompletionInOrder","collection","fromPromptAsync","dialogue_examplesIndex","userInputMessage","chatHistoryIndex","userInputIndex","hasUserInput","hasChatHistory","isChatHistoryFiltered","userMessage","addImage","insertIndex","chatCollection","newChat","new_chat_prompt","newChatMessage","lastChatPrompt","emptyMessage","canAfford","userPrompt","customInjects","processedMessages","totalInsertedMessages","injectionPrompts","authorsNote","getPromptRole","injection_depth","injected","MAX_INJECTION_DEPTH","depthPrompts","roles","roleMessages","rolePrompts","injectIdx","splice","populationInjectionPrompts","imageInlining","isImageInliningSupported","chatPool","chatPrompt","promptManager","setupChatCompletionPromptManager","serviceSettings","names_behavior","messageName","isValidName","sanitizeName","freeBudget","processChatHistoryAndInject","squash_system_messages","squashSystemMessages","getChat","handleCustomPath","useStream","deactivateSendButtons","originalStreamSetting","stream_openai","streamingProcessor","sendOpenAIRequest","signal","response","t","preventDuplicates","choices","tool_plan","extractMessageFromData","handleResponse","generateResponse","examplesStr","block","activateSendButtons","showSwipeButtons","setGenerationProgress","flushEphemeralStoppingStrings","prefixes","some","File","getBase64Async","promptId","override","stopGeneration","__WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__","toLorebookEntry","uid","display_index","displayIndex","comment","disable","constant","vectorized","probability","logic","selectiveLogic","keysecondary","scan_depth","scanDepth","case_sensitive","caseSensitive","match_whole_words","matchWholeWords","use_group_scoring","useGroupScoring","automation_id","automationId","exclude_recursion","excludeRecursion","prevent_recursion","preventRecursion","delay_until_recursion","delayUntilRecursion","group","group_prioritized","groupOverride","group_weight","groupWeight","sticky","cooldown","fromPartialLorebookEntry","transformers","before_character_definition","after_character_definition","before_example_messages","after_example_messages","before_author_note","after_author_note","at_depth_as_system","at_depth_as_user","at_depth_as_assistant","and_any","and_all","not_any","not_all","field","assignFieldValuesToWiEntry","wi_entry","field_values","original_wi_mapped_key","originalWIDataKeyMap","setWIOriginalDataValue","reloadEditorDebounced","debounce","currentIndex","selectedIndex","world_names","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__","latest_set_variables_message_id","shouldUpdateVariables","eventMesId","tempVariables","newVariables","currentVariables","updateVariables","checkVariablesEvents","handleIframe","stack","targetOrigin","slashEventEmit","named_args","range_demacroed","substituteParamsExtended","range","stringToRange","option","hide_state","start","end","process_message","message_id","chat_message","extra","system_message_types","NARRATOR","swipes","swipes_data","is_hidden","is_system_or_hidden","promises","chat_messages","refresh","swipe_id_previous_index","swipe_id_to_set_index","swipe_id_to_use_index","update_partial_html","should_update_swipe","mes_html","messageFormatting","handlePartialRender","swipe_info","add_swipes_if_required","message_demacroed","update_chat_message","last_message_id","getLastMessageId","last_user_message_id","last_char_message_id","statusText","timeOut","isUpToDate","success","shortCommitHash","iframe_name","converted_config","should_stream","fromGenerateConfig","ordered_prompts","fromGenerateRawConfig","lorebook","loadWorldInfo","every","expected_value","entry_value","saveWorldInfo","createWorldInfoEntry","partial_lorebook_entry","lorebook_uid","deleted","deleteWIOriginalDataValue","lorebook_settings","selected_global_lorebooks","world_info_settings","getWorldInfoSettings","globalSelect","world_info_depth","context_percentage","world_info_budget","budget_cap","world_info_budget_cap","min_activations","world_info_min_activations","world_info_min_activations_depth_max","max_recursion_steps","world_info_max_recursion_steps","insertion_strategy","world_info_character_strategy","include_names","recursive","world_info_recursive","world_info_case_sensitive","world_info_match_whole_words","world_info_use_group_scoring","overflow_alert","world_info_overflow_alert","settings","inexisting_lorebooks","for_eachs","selected_world_info","saveSettings","converted_value","evenly","character_first","global_first","assignPartialLorebookSettings","filename","character","insensitive","filteredByTags","preferCurrentChar","quiet","matches","equalsIgnoreCaseAndAccents","charTags","getTagsList","tagName","currentChars","groups","members","member","preferredCharSearch","findChar","books","primary","additional","extraCharLore","charLore","extraBooks","lorebooks","getCharaFilename","previous_primary","String","parse","form_data","FormData","raw_file","converted_file","ensureImageFormatSupported","chid","alternate_greetings","getOneCharacter","editCurrentCharacter","setWorldInfoButtonClass","char_lore","existing_char_index","assign","saveCharacterDebounced","deleteWorldInfo","createNewWorldInfo","interactive","command","executeSlashCommandsWithOptions","isError","errorMessage","pipe","enable_state","regexes","emptied_regexes","global_regexes","character_regexes","array","predicate","pass","fail","writeExtensionField","text_demacroed","metadata","getVariablesByType","latest_message_id","newValue","createCharacterHandler","logMessage","displayName","withCharacter","logText","then","resolvedResult","catch","_event","_result","getPastCharacterChats","registerIframeCharacterHandler","isScriptLibraryOpen","defaultSettings","bgm_muted","bgm_volume","bgm_current_time","ambient_muted","ambient_volume","ambient_current_time","handleChatChanged","handleMessageDeleted","maxRemainId","hasCodeBlock","toString","renderMessageAfterDelete","handleVariableUpdated","onExtensionToggle","userAction","MacrosParser","registerMacro","registerAllMacros","CHAT_COMPLETION_PROMPT_READY","register_events","makeFirst","once","APP_READY","initializeCharacterLevelOnExtension","MESSAGE_DELETED","unregisterMacro","unregisterAllMacros","formatSlashCommands","cmdList","commands","transform_arg","arg","is_required","default_value","acceptsMultiple","accepts_multiple","enum_list","type_list","cmd","unnamed_args","return_type","returns","help_string","line","k","windowHtml","buttonHtml","currentChecked","addQuickButton","slideToggle","clickTarget","closest","slideUp","navigator","clipboard","writeText","initAutoSettings"],"sourceRoot":""}