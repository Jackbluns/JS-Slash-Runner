import*as e from"../../../../../script.js";import*as n from"../../../../../scripts/PromptManager.js";import*as a from"../../../../../scripts/RossAscends-mods.js";import*as r from"../../../../../scripts/authors-note.js";import*as s from"../../../../../scripts/extensions.js";import*as i from"../../../../../scripts/extensions/regex/engine.js";import*as o from"../../../../../scripts/group-chats.js";import*as l from"../../../../../scripts/i18n.js";import*as c from"../../../../../scripts/macros.js";import*as d from"../../../../../scripts/openai.js";import*as m from"../../../../../scripts/popup.js";import*as p from"../../../../../scripts/power-user.js";import*as u from"../../../../../scripts/slash-commands.js";import*as g from"../../../../../scripts/slash-commands/SlashCommand.js";import*as f from"../../../../../scripts/slash-commands/SlashCommandArgument.js";import*as h from"../../../../../scripts/slash-commands/SlashCommandCommonEnumsProvider.js";import*as v from"../../../../../scripts/slash-commands/SlashCommandEnumValue.js";import*as y from"../../../../../scripts/slash-commands/SlashCommandParser.js";import*as b from"../../../../../scripts/tags.js";import*as w from"../../../../../scripts/utils.js";import*as x from"../../../../../scripts/world-info.js";var E={"./src/compatibility.ts":
/*!******************************!*\
  !*** ./src/compatibility.ts ***!
  \******************************/(e,t,n)=>{n.r(t),n.d(t,{findChar:()=>o});var a=n(/*! @sillytavern/script */"@sillytavern/script"),r=n(/*! @sillytavern/scripts/group-chats */"@sillytavern/scripts/group-chats"),s=n(/*! @sillytavern/scripts/tags */"@sillytavern/scripts/tags"),i=n(/*! @sillytavern/scripts/utils */"@sillytavern/scripts/utils");function o({name:e=null,allowAvatar:t=!0,insensitive:n=!0,filteredByTags:o=null,preferCurrentChar:l=!0,quiet:c=!1}={}){const d=a=>!e||t&&a.avatar===e||(n?(0,i.equalsIgnoreCaseAndAccents)(a.name,e):a.name===e);let m=a.characters;o&&(m=a.characters.filter((e=>{const t=(0,s.getTagsList)(e.avatar,!1);return o.every((e=>t.some((t=>t.name==e))))})));const p=r.selected_group?groups.find((e=>e.id===r.selected_group))?.members.map((e=>m.find((t=>t.avatar===e)))):m.filter((e=>a.characters[a.this_chid]?.avatar===e.avatar));if(l){const e=p.filter(d);if(e.length>1&&(c?console.warn("Multiple characters found for given conditions. Returning the first match."):toastr.warning("Multiple characters found for given conditions.")),e.length)return e[0]}if(t&&e){const t=m.find((t=>t.avatar===e));if(t)return t}const u=e?m.filter(d):m;return u.length>1&&(c?console.warn("Multiple characters found for given conditions. Returning the first match."):toastr.warning("Multiple characters found for given conditions.")),u[0]||null}},"./src/component/audio.ts":
/*!********************************!*\
  !*** ./src/component/audio.ts ***!
  \********************************/(e,t,n)=>{n.r(t),n.d(t,{defaultAudioSettings:()=>g,getAudioUrl:()=>v,getAudioUrlWithCacheBusting:()=>y,getNextFileByMode:()=>b,initAudioComponents:()=>H,initAudioEventListeners:()=>E,initializeProgressBar:()=>S,list_BGMS:()=>d,list_ambients:()=>m,onAudioEnabledClick:()=>x,playAudio:()=>N,refreshAudioResources:()=>k,toggleAudioControls:()=>w,togglePlayPause:()=>D,updateAudio:()=>f,updateAudioSelect:()=>h});var a=n(/*! @/index */"./src/index.ts"),r=n(/*! @/slash_command/audio */"./src/slash_command/audio.ts"),s=n(/*! @sillytavern/script */"@sillytavern/script"),i=n(/*! @sillytavern/scripts/extensions */"@sillytavern/scripts/extensions"),o=n(/*! @sillytavern/scripts/popup */"@sillytavern/scripts/popup"),l=n(/*! @sillytavern/scripts/RossAscends-mods */"@sillytavern/scripts/RossAscends-mods"),c=n(/*! @sillytavern/scripts/utils */"@sillytavern/scripts/utils");let d=[],m=[],p=!0,u=!0,_=0;const g={audio_setting:!0,bgm_enabled:!0,ambient_enabled:!0,bgm_mode:"repeat",bgm_muted:!1,bgm_volume:50,bgm_selected:null,bgm_current_time:0,ambient_mode:"stop",ambient_muted:!1,ambient_volume:50,ambient_selected:null,ambient_current_time:0,audio_cooldown:0};async function f(e="bgm",t=!1){if(!i.extension_settings[a.extensionName].audio.audio_setting)return;if(!("bgm"===e?i.extension_settings[a.extensionName].audio.bgm_enabled:i.extension_settings[a.extensionName].audio.ambient_enabled))return;const n="bgm"===e?p:u,r=`#audio_${e}`;if(!t&&""!=$(r).attr("src")&&!n)return;let o="";const l=await v(e);if(t)o="bgm"===e?i.extension_settings[a.extensionName].audio.bgm_selected||l[0]:i.extension_settings[a.extensionName].audio.ambient_selected||l[0];else{o=b("bgm"===e?i.extension_settings[a.extensionName].audio.bgm_mode:i.extension_settings[a.extensionName].audio.ambient_mode,l,"bgm"===e?i.extension_settings[a.extensionName].audio.bgm_selected:i.extension_settings[a.extensionName].audio.ambient_selected)}if(!o)return;const c=$(r)[0];if("ambient"===e){const e=c.src.split("?")[0],t=o.split("?")[0];if(decodeURIComponent(e)===decodeURIComponent(t)&&!n)return}else if(decodeURIComponent(c.src)===decodeURIComponent(o)&&!n)return;if("bgm"===e?p=!1:u=!1,"bgm"===e)c.src=o,c.load(),await new Promise((e=>{const t=()=>{c.removeEventListener("canplaythrough",t),e()};c.readyState>=HTMLMediaElement.HAVE_ENOUGH_DATA?e():c.addEventListener("canplaythrough",t)})),await N(e);else{const t=y(o);c.src=t,c.load(),await new Promise((e=>{const t=()=>{c.removeEventListener("canplaythrough",t),e()};c.readyState>=HTMLMediaElement.HAVE_ENOUGH_DATA?e():c.addEventListener("canplaythrough",t)})),await N(e)}"bgm"===e?i.extension_settings[a.extensionName].audio.bgm_selected=o:i.extension_settings[a.extensionName].audio.ambient_selected=o;const d=$(`#audio_${e}_select`);d.val()!==o&&d.val(o),(0,s.saveSettingsDebounced)()}async function h(e="bgm"){if(!i.extension_settings[a.extensionName].audio[`${e}_enabled`])return;const t=$(`#audio_${e}_select`);t.empty(),"bgm"===e?d=await v("bgm"):m=await v("ambient");const n="bgm"===e?d:m;let r="bgm"===e?i.extension_settings[a.extensionName].audio.bgm_selected:i.extension_settings[a.extensionName].audio.ambient_selected;if(n&&n.length>0){n.includes(r)||(console.warn(`[Audio] 当前选择的音频 ${r} 不在列表中，自动选择列表第一个音频`),r=n[0],"bgm"===e?i.extension_settings[a.extensionName].audio.bgm_selected=r:i.extension_settings[a.extensionName].audio.ambient_selected=r,(0,s.saveSettingsDebounced)());(Array.isArray(n)?n:n.split(",").map((e=>e.trim()))).forEach((e=>{const n=e.replace(/^.*[\\\/]/,"").replace(/\.[^/.]+$/,"");t.append(new Option(n,e))})),t.val(r)}else console.log(`[Audio] 暂无可用的 ${e.toUpperCase()} 资源`)}async function v(e="bgm"){const t="bgm"===e?"bgmurl":"ambienturl";return s.chat_metadata.variables?.[t]||[]}function y(e){if(!e)return"";const t=(new Date).getTime(),n=e.includes("?")?"&":"?";return`${e}${n}_=${t}`}function b(e,t,n){if(!t||0===t.length)return"";switch(e){case"repeat":default:return t[0];case"single":return n||t[0];case"random":{const e=t.filter((e=>e!==n));if(0===e.length)return t[0];return e[Math.floor(Math.random()*e.length)]}case"stop":return""}}function w(e,t="enable"){const n=$("#audio_enabled").prop("checked")&&"enable"===t;[`#audio_${e}_play_pause`,`#audio_${e}_mute`,`#audio_${e}_mode`,`#audio_${e}_select`,`#audio_${e}_volume_slider`].forEach((e=>{$(e).prop("disabled",!n)}))}async function x(e="bgm"){const t=$(`#enable_${e}`).prop("checked");i.extension_settings[a.extensionName].audio[`${e}_enabled`]=t,(0,s.saveSettingsDebounced)(),t?(w(e,"enable"),await f(e,!1)):($(`#audio_${e}`)[0].pause(),w(e,"disable"))}function E(e){$(`#audio_${e}`).on("ended",(async function(){"bgm"===e?p=!0:u=!0;"stop"!==i.extension_settings[a.extensionName].audio[`${e}_mode`]&&await f(e,!1)}))}function S(e){_=i.extension_settings[a.extensionName].audio.audio_cooldown;const t=$(`#audio_${e}`),n=$(`#audio_${e}_progress_slider`);t.on("timeupdate",(function(){if(!isNaN(this.duration)){const e=this.currentTime/this.duration*100;n.val(e)}const e=i.extension_settings[a.extensionName].audio.audio_cooldown,t=this.duration-this.currentTime;if(e>0&&t<=e&&!this.isFadingOut){const t=this.volume/(10*e);this.isFadingOut=!0;const n=setInterval((()=>{this.volume>0?this.volume=Math.max(0,this.volume-t):(clearInterval(n),this.isFadingOut=!1)}),100)}})),t.on("play",(function(){const t=i.extension_settings[a.extensionName].audio.audio_cooldown,n=$(`#audio_${e}_volume_slider`).val()/100;if(t<=0)return void(this.volume=n);this.volume=0;const r=n/(10*t);let s=setInterval((()=>{this.volume<n?this.volume=Math.min(n,this.volume+r):clearInterval(s)}),100)})),t.on("loadedmetadata",(function(){isNaN(this.duration)||n.attr("max",100)})),n.on("input",(function(){const e=$(this).val();isNaN(t[0].duration)||(t[0].currentTime=e/100*t[0].duration)}))}function A(e){const t=$(this);e.preventDefault(),e.stopPropagation();const n=e.deltaY/20;let a=Number(t.val())-n;a<0?a=0:a>100&&(a=100),t.val(a).trigger("input")}function C(e,t){const n=$("#"+e),a=$("#"+t);let r;(0,l.isMobile)()&&(a.on("touchstart",(function(e){r=setTimeout((()=>{n.css("display","block")}),500)})),a.on("touchend",(function(e){clearTimeout(r)})),$(document).on("click",(function(e){a.is(e.target)||0!==a.has(e.target).length||n.is(e.target)||0!==n.has(e.target).length||n.css("display","none")})))}async function k(){h("bgm"),h("ambient")}async function T(e){const t=$(await(0,i.renderExtensionTemplateAsync)(`${a.extensionFolderPath}`,"urlManager"));t.prepend('\n    <style>\n      #saved_audio_url.empty::after {\n        content: "暂无音频";\n        color: #999;\n        margin-top: 20px;\n        font-size: 12px;\n      }\n    </style>\n  ');const n=t.find("#saved_audio_url").empty(),r=$(await(0,i.renderExtensionTemplateAsync)(`${a.extensionFolderPath}`,"urlTemplate"));s.chat_metadata.variables||(s.chat_metadata.variables={});let l=s.chat_metadata.variables[e];if(l)try{0===l.length&&n.addClass("empty")}catch(t){return console.error(`[Audio] Failed to parse ${e}:`,t),null}else l=[],n.addClass("empty");const d={};function m(e,t){const a=r.clone();let s;if(t.includes("/")){const e=t.split("/");s=e[e.length-1]||e[e.length-2]}else s=t;const i=s.replace(/\./g,"-");a.attr("id",i),a.find(".audio_url_name").text(s),a.find(".audio_url_name").attr("data-url",t),a.find(".edit_existing_url").on("click",(async function(){const e=a.find(".audio_url_name").attr("data-url");if(!e)return void console.error("[Audio] No URL found for this element.");const t=await(0,o.callGenericPopup)("",o.POPUP_TYPE.INPUT,e);if(!t)return;const n=t.split("/").pop(),r=n.replace(/\./g,"-");a.attr("id",r),a.find(".audio_url_name").text(n),a.find(".audio_url_name").attr("data-url",t),d[e]=t})),a.find(".delete_url").on("click",(async function(){await(0,o.callGenericPopup)("确认要删除此链接?",o.POPUP_TYPE.CONFIRM)&&(a.remove(),0===n.find(".audio_url_name").length&&n.addClass("empty"))})),e.append(a)}l.forEach((e=>{m(n,e)})),t.find("#import_button").on("click",(async function(){const t=await async function(){const e=await(0,o.callGenericPopup)("输入要导入的网络音频链接（每行一个）",o.POPUP_TYPE.INPUT,"");if(!e)return console.debug("[Audio] URL import cancelled"),null;const t=e.trim().split("\n").map((e=>e.trim())).filter((e=>""!==e));return Array.from(new Set(t))}();t?(n.removeClass("empty"),t.forEach((e=>{m(n,e)}))):console.debug(`[Audio] ${e} URL导入已取消`)})),n.sortable({delay:(0,c.getSortableDelay)(),handle:".drag-handle",stop:function(){}});if(await(0,o.callGenericPopup)(t,o.POPUP_TYPE.CONFIRM,"",{okButton:"确认",cancelButton:"取消"})){const t=[];n.find(".audio_url_name").each((function(){const e=$(this).attr("data-url");e&&t.push(e)}));const r=i.extension_settings[a.extensionName].audio.bgm_selected,o=i.extension_settings[a.extensionName].audio.ambient_selected;if("bgmurl"===e&&r&&!t.includes(r)){$("#audio_bgm")[0].pause(),p=!0}else if("ambienturl"===e&&o&&!t.includes(o)){$("#audio_ambient")[0].pause(),u=!0}s.chat_metadata.variables[e]=t,(0,i.saveMetadataDebounced)(),"bgmurl"===e?h("bgm"):"ambienturl"===e&&h("ambient")}}async function I(){const e=$("#audio_enabled").prop("checked");if(i.extension_settings[a.extensionName].audio.audio_setting=e,(0,s.saveSettingsDebounced)(),e){w("bgm","enable"),w("ambient","enable");const e=await v("bgm"),t=await v("ambient");if(e.length>0){const e=$("#audio_bgm")[0];try{await e.play()}catch(e){throw new Error("[Audio] 播放音乐失败：没有提供有效源")}}if(t.length>0){const e=$("#audio_ambient")[0];try{await e.play()}catch(e){throw new Error("[Audio] 播放音效失败：没有提供有效源")}}}else $("#audio_bgm")[0].pause(),$("#audio_ambient")[0].pause(),w("bgm","disable"),w("ambient","disable")}async function N(e){if(!i.extension_settings[a.extensionName].activate_setting||!i.extension_settings[a.extensionName].audio.audio_setting||!i.extension_settings[a.extensionName].audio[`${e}_enabled`])return;const t=$(`#audio_${e}`)[0],n=$(`#audio_${e}_play_pause_icon`);if(t.error&&4===t.error.code){console.warn(`The ${e} element has no supported sources. Trying to reload selected audio from dropdown...`);const n=$(`#audio_${e}_select`).val();if(!n)return void console.error(`No audio selected for ${e}`);t.src=n,t.load()}try{await t.play(),n.removeClass("fa-play"),n.addClass("fa-pause")}catch(t){console.error(`[Audio] 播放 ${e} 音频时出错:`,t)}}async function M(e){const t=[{mode:"repeat",icon:"fa-repeat"},{mode:"random",icon:"fa-random"},{mode:"single",icon:"fa-redo-alt"},{mode:"stop",icon:"fa-cancel"}],n=(t.findIndex((t=>t.mode===i.extension_settings[a.extensionName].audio[`${e}_mode`]))+1)%t.length;i.extension_settings[a.extensionName].audio[`${e}_mode`]=t[n].mode,$(`#audio_${e}_mode_icon`).removeClass("fa-repeat fa-random fa-redo-alt fa-cancel"),$(`#audio_${e}_mode_icon`).addClass(t[n].icon),(0,s.saveSettingsDebounced)()}async function R(e){i.extension_settings[a.extensionName].audio[`${e}_selected`]=$(`#audio_${e}_select`).val(),await f(e,!0),(0,s.saveSettingsDebounced)()}async function L(){i.extension_settings[a.extensionName].audio.audio_cooldown=~~$("#audio_cooldown").val(),(0,s.saveSettingsDebounced)()}async function P(e){i.extension_settings[a.extensionName].audio[`${e}_volume`]=~~$(`#audio_${e}_volume_slider`).val(),$(`#audio_${e}`).prop("volume",.01*i.extension_settings[a.extensionName].audio[`${e}_volume`]),$(`#audio_${e}_volume`).text(i.extension_settings[a.extensionName].audio[`${e}_volume`]),(0,s.saveSettingsDebounced)()}async function O(e){i.extension_settings[a.extensionName].audio[`${e}_muted`]=!i.extension_settings[a.extensionName].audio[`${e}_muted`],$(`#audio_${e}_mute_icon`).toggleClass("fa-volume-high"),$(`#audio_${e}_mute_icon`).toggleClass("fa-volume-mute"),$(`#audio_${e}`).prop("muted",!$(`#audio_${e}`).prop("muted")),$(`#audio_${e}_mute`).toggleClass("redOverlayGlow"),(0,s.saveSettingsDebounced)()}async function D(e){if(!i.extension_settings[a.extensionName].audio.audio_setting)return;const t=$(`#audio_${e}`)[0],n=$(`#audio_${e}_play_pause_icon`);t.paused?await N(e):(t.pause(),n.removeClass("fa-pause"),n.addClass("fa-play"))}function j(e){$(`#audio_${e}`).hide(),i.extension_settings[a.extensionName].audio[`${e}_muted`]?($(`#audio_${e}_mute_icon`).removeClass("fa-volume-high"),$(`#audio_${e}_mute_icon`).addClass("fa-volume-mute"),$(`#audio_${e}_mute`).addClass("redOverlayGlow"),$(`#audio_${e}`).prop("muted",!0)):($(`#audio_${e}_mute_icon`).addClass("fa-volume-high"),$(`#audio_${e}_mute_icon`).removeClass("fa-volume-mute"),$(`#audio_${e}_mute`).removeClass("redOverlayGlow"),$(`#audio_${e}`).prop("muted",!1)),$(`#enable_${e}`).prop("checked",i.extension_settings[a.extensionName].audio[`${e}_enabled`]);const t=$(`#audio_${e}`)[0],n=$(`#audio_${e}_play_pause_icon`);t&&t.paused?(n.removeClass("fa-pause"),n.addClass("fa-play")):t&&!t.paused&&(n.removeClass("fa-play"),n.addClass("fa-pause")),h(e),S(e)}function H(){const e=i.extension_settings[a.extensionName].audio.audio_setting;$("#audio_enabled").prop("checked",e).on("click",I),e&&I(),j("bgm"),j("ambient");const t=["bgm","ambient"];t.forEach((e=>{$(`#enable_${e}`).on("click",(()=>x(e))),((e,t)=>{t.forEach((({selector:t,event:n,handler:a})=>{$(`#${t}`).on(n,(()=>a(e)))}))})(e,[{selector:`enable_${e}`,event:"click",handler:x},{selector:`audio_${e}_mode`,event:"click",handler:M},{selector:`audio_${e}_mute`,event:"click",handler:O},{selector:`audio_${e}_volume_slider`,event:"input",handler:P},{selector:`audio_${e}_select`,event:"change",handler:R},{selector:`audio_${e}_play_pause`,event:"click",handler:D}]),$("#audio_cooldown").on("input",L).val(i.extension_settings[a.extensionName].audio.audio_cooldown),E("bgm"),E("ambient");const t=$(`#audio_${e}_volume_slider`).get(0);t&&t.addEventListener("wheel",A,{passive:!1})})),$("#audio_refresh_assets").on("click",(async()=>{await k()})),C("bgm-volume-control","audio_bgm_mute_icon"),C("ambient-volume-control","audio_ambient_mute_icon");const n={bgm:"bgmurl",ambient:"ambienturl"};t.forEach((e=>{$(`#${e}_manager_button`).on("click",(async()=>{await T(n[e]),await k()}))}));const s=$("#audio_bgm")[0],o=$("#audio_ambient")[0],l=(e,t)=>{const n=$(t);e.addEventListener("play",(()=>n.removeClass("fa-play").addClass("fa-pause"))),e.addEventListener("pause",(()=>n.removeClass("fa-pause").addClass("fa-play")))};l(s,"#audio_bgm_play_pause_icon"),l(o,"#audio_ambient_play_pause_icon"),(0,r.initAudioSlashCommands)()}s.eventSource.on(s.event_types.CHAT_CHANGED,(async()=>{const e=$("#audio_bgm")[0],t=$("#audio_ambient")[0];e&&!e.paused&&e.pause(),t&&!t.paused&&t.pause(),await k(),console.log("[Audio] 聊天已更改，音频资源刷新完成")}))},"./src/component/character_level/index.ts":
/*!************************************************!*\
  !*** ./src/component/character_level/index.ts ***!
  \************************************************/(e,t,n)=>{n.r(t),n.d(t,{destroyCharacterLevelOnExtension:()=>c,initializeCharacterLevelOnExtension:()=>l});var a=n(/*! @/component/character_level/library */"./src/component/character_level/library.ts"),r=n(/*! @/component/character_level/script_iframe */"./src/component/character_level/script_iframe.ts"),s=n(/*! @sillytavern/script */"@sillytavern/script");const i=[s.event_types.CHAT_CHANGED];let o=!1;function l(){const e=()=>{i.forEach((e=>{s.eventSource.makeFirst(e,r.initialize),s.eventSource.makeFirst(e,a.initialize)}))};o?e():s.eventSource.once(s.event_types.APP_READY,(()=>{o=!0,(0,r.initialize)(),(0,a.initialize)(),e()}))}function c(){i.forEach((e=>{s.eventSource.removeListener(e,r.initialize),s.eventSource.removeListener(e,a.initialize)})),(0,r.destroy)(),(0,a.destroy)()}},"./src/component/character_level/library.ts":
/*!**************************************************!*\
  !*** ./src/component/character_level/library.ts ***!
  \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{destroy:()=>i,initialize:()=>s,libraries_text:()=>r});var a=n(/*! @/util/load_script */"./src/util/load_script.ts");let r="";function s(){const e=(0,a.loadScripts)("库-");console.info(`[Library] 加载库: ${JSON.stringify(e.map((e=>e.name)))}`),r=e.map((e=>e.code)).join("\n")}function i(){r=""}},"./src/component/character_level/script_iframe.ts":
/*!********************************************************!*\
  !*** ./src/component/character_level/script_iframe.ts ***!
  \********************************************************/(e,t,n)=>{n.r(t),n.d(t,{destroy:()=>l,initialize:()=>c});var a=n(/*! @/component/character_level/library */"./src/component/character_level/library.ts"),r=n(/*! @/script_url */"./src/script_url.ts"),s=n(/*! @/third_party.html */"./src/third_party.html"),i=n(/*! @/util/load_script */"./src/util/load_script.ts");let o=new Map;function l(){0!==o.size&&(console.log("[Script] 清理全局脚本..."),o.forEach(((e,t)=>{e.remove()})),o.clear(),console.log("[Script] 全局脚本清理完成!"))}async function c(){try{l();const e=(0,i.loadScripts)("脚本-");console.info(`[Script] 加载全局脚本: ${JSON.stringify(e.map((e=>e.name)))}`);const t=[];e.forEach((e=>{const{iframe:n,load_promise:i}=function(e){const t=document.createElement("iframe");t.style.display="none",t.id=`script-iframe-${e.name}`;const n=`\n    <html>\n    <head>\n      ${s.default}\n      <script src="${r.script_url.get("iframe_client")}"><\/script>\n      ${a.libraries_text}\n    </head>\n    <body>\n      ${e.code}\n    </body>\n    </html>\n  `;t.srcdoc=n;const i=new Promise((e=>{t.onload=()=>{console.info(`[Script](${t.id}) 加载完毕`),e()}}));return document.body.appendChild(t),{iframe:t,load_promise:i}}(e);o.set(e.name,n),t.push(i)})),await Promise.allSettled(t)}catch(e){throw console.error("[Script] 全局脚本加载失败:",e),e}}},"./src/component/macro.ts":
/*!********************************!*\
  !*** ./src/component/macro.ts ***!
  \********************************/(e,t,n)=>{n.r(t),n.d(t,{destroyMacroOnExtension:()=>g,initializeMacroOnExtension:()=>u,registerAllMacros:()=>c,registerMacro:()=>l,unregisterAllMacros:()=>m,unregisterMacro:()=>d});var a=n(/*! @/component/message_iframe */"./src/component/message_iframe.ts"),r=n(/*! @sillytavern/script */"@sillytavern/script"),s=n(/*! @sillytavern/scripts/extensions */"@sillytavern/scripts/extensions"),i=n(/*! @sillytavern/scripts/macros */"@sillytavern/scripts/macros");const o=new Map([["userAvatarPath",a.getUserAvatarPath],["charAvatarPath",a.getCharAvatarPath]]);function l(e,t){i.MacrosParser.registerMacro(e,t),console.log(`[Macro] 宏 "${e}" 注册成功`)}function c(){for(const[e,t]of o.entries())i.MacrosParser.registerMacro(e,t),console.log(`[Macro] 宏 "${e}" 注册成功`)}function d(e){i.MacrosParser.unregisterMacro(e),console.log(`[Macro] 宏 "${e}" 注销成功`)}function m(){for(const e of o.keys())i.MacrosParser.unregisterMacro(e),console.log(`[Macro] 宏 "${e}" 注销成功`)}function p(e){const t={get_global_variable:s.extension_settings.variables.global,get_chat_variable:r.chat_metadata.variables,get_message_variable:r.chat.filter((e=>void 0!==e.variables?.[e.swipe_id??0])).map((e=>e.variables[e.swipe_id??0])).at(-1)??{}};e.chat.forEach((e=>{e.content=e.content.replaceAll(/\{\{(get_global_variable|get_chat_variable|get_message_variable)::(.*?)\}\}/g,((e,n,a)=>JSON.stringify(_.get(t[n],a,null))))}))}function u(){r.eventSource.on(r.event_types.CHAT_COMPLETION_PROMPT_READY,p)}function g(){r.eventSource.removeListener(r.event_types.CHAT_COMPLETION_PROMPT_READY,p)}},"./src/component/message_iframe.ts":
/*!*****************************************!*\
  !*** ./src/component/message_iframe.ts ***!
  \*****************************************/(e,t,n)=>{n.r(t),n.d(t,{addCodeToggleButtonsToAllMessages:()=>V,addRenderingOptimizeSettings:()=>U,charsPath:()=>f,clearAllIframe:()=>T,clearAndRenderAllIframes:()=>y,defaultIframeSettings:()=>g,getCharAvatarPath:()=>v,getUserAvatarPath:()=>h,handlePartialRender:()=>O,initIframePanel:()=>q,injectCodeBlockHideStyles:()=>j,injectLoadingStyles:()=>D,partialRenderEvents:()=>_,removeRenderingOptimizeSettings:()=>W,renderAllIframes:()=>b,renderMessageAfterDelete:()=>R,renderPartialIframes:()=>w,tampermonkey_script:()=>E,viewport_adjust_script:()=>x});var a=n(/*! @/component/character_level/library */"./src/component/character_level/library.ts"),r=n(/*! @/index */"./src/index.ts"),s=n(/*! @/script_url */"./src/script_url.ts"),i=n(/*! @/third_party.html */"./src/third_party.html"),o=n(/*! @sillytavern/script */"@sillytavern/script"),l=n(/*! @sillytavern/scripts/extensions */"@sillytavern/scripts/extensions");let c=null,d=!1;const m=new Map,p=hljs.highlightElement,u={FULL:"FULL",PARTIAL:"PARTIAL"},_=[o.event_types.CHARACTER_MESSAGE_RENDERED,o.event_types.USER_MESSAGE_RENDERED,o.event_types.MESSAGE_UPDATED,o.event_types.MESSAGE_SWIPED],g={auto_enable_character_regex:!0,auto_disable_incompatible_options:!0,tampermonkey_compatibility:!1,process_depth:0,rendering_optimize:!1},f="/characters/",h=()=>`./User Avatars/${o.user_avatar}`,v=()=>{const e=(0,o.getThumbnailUrl)("avatar",o.characters[o.this_chid].avatar),t=e.substring(e.lastIndexOf("=")+1);return f+t};async function y(){await T(),await(0,o.reloadCurrentChat)(),await b()}async function b(){await A(u.FULL),console.log("[Render] 渲染所有iframe")}const w=e=>{const t=parseInt($("#process_depth").val(),10),n=(0,l.getContext)().chat.length;if(t>0){const a=n-t;if(parseInt(e,10)<a)return}A(u.PARTIAL,e),console.log("[Render] 渲染"+e+"号消息的iframe")},x='\n$(window).on("message", function (event) {\n    if (event.originalEvent.data.request === "updateViewportHeight") {\n        const newHeight = event.originalEvent.data.newHeight;\n        $("html").css("--viewport-height", newHeight + "px");\n    }\n});\n',E="\nclass AudioManager {\n  constructor() {\n    this.currentlyPlaying = null;\n  }\n  handlePlay(audio) {\n    if (this.currentlyPlaying && this.currentlyPlaying !== audio) {\n      this.currentlyPlaying.pause();\n    }\n    window.parent.postMessage({\n      type: 'audioPlay',\n      iframeId: window.frameElement.id\n    }, '*');\n\n    this.currentlyPlaying = audio;\n  }\n  stopAll() {\n    if (this.currentlyPlaying) {\n      this.currentlyPlaying.pause();\n      this.currentlyPlaying = null;\n    }\n  }\n}\nconst audioManager = new AudioManager();\n$('.qr-button').on('click', function() {\n  const buttonName = $(this).text().trim();\n  window.parent.postMessage({ type: 'buttonClick', name: buttonName }, '*');\n});\n$('.st-text').each(function() {\n  $(this).on('input', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  $(this).on('change', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  const textarea = this;\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n        window.parent.postMessage({ type: 'textInput', text: $(textarea).val() }, '*');\n      }\n    });\n  });\n  observer.observe(textarea, { attributes: true });\n});\n$('.st-send-button').on('click', function() {\n  window.parent.postMessage({ type: 'sendClick' }, '*');\n});\n$('.st-audio').on('play', function() {\n  audioManager.handlePlay(this);\n});\n$(window).on('message', function(event) {\n  if (event.originalEvent.data.type === 'stopAudio' &&\n    event.originalEvent.data.iframeId !== window.frameElement.id) {\n    audioManager.stopAll();\n  }\n});\n";function S(e){if(!/min-height:\s*[^;]*vh/.test(e))return e;const t=window.innerHeight;return e.replace(/min-height:\s*([^;]*vh[^;]*);/g,(e=>`${e.replace(/(\d+)vh/g,`calc(var(--viewport-height, ${t}px) * $1 / 100)`)};`))}async function A(e=u.FULL,t=null){if(!(0,r.getSettingValue)("activate_setting"))return;const n=(0,l.getContext)(),c=n.chat.length,m=parseInt($("#process_depth").val(),10)||0,p=m>0?m:c,_=[...Array(c).keys()].slice(-p);let g=[],f=[...Array(c).keys()].filter((e=>!_.includes(e)));if(e===u.FULL)g=_;else if(e===u.PARTIAL&&null!==t){const e=parseInt(t,10);if(!_.includes(e))return;g=[e]}for(const e of f){const t=n.chat[e],a=$(`[id^="message-iframe-${e}-"]`);a.length>0&&(await Promise.all(a.toArray().map((async e=>{k(e)}))),(0,o.updateMessageBlock)(e,t),G(e))}const y=[];for(const e of g){const t=$(`.mes[mesid="${e}"]`);if(!t.length){console.debug(`未找到 mesid: ${e} 对应的消息元素。`);continue}const n=t.find("pre");if(!n.length)continue;let c=1;n.each((function(){let t=M(this);if(!t.includes("<body")||!t.includes("</body>"))return void(d&&G(e));const n=/<!--\s*disable-default-loading\s*-->/.test(t),m=/min-height:\s*[^;]*vh/.test(t);t=m?S(t):t;const p=$("<div>").css({position:"relative",width:"100%"}),u=$("<iframe>").attr({id:`message-iframe-${e}-${c}`,srcdoc:"",loading:"lazy"}).css({margin:"5px auto",border:"none",width:"100%"});c++,m&&u.attr("data-needs-vh","true");let _=null;if(!n){const e=$("<div>").addClass("iframe-loading-overlay").html('\n            <div class="iframe-loading-content">\n              <i class="fa-solid fa-spinner fa-spin"></i>\n              <span class="loading-text">Loading...</span>\n            </div>');_=setTimeout((()=>{const t=e.find(".loading-text");t.length&&t.text("如加载时间过长，请检查网络")}),1e4),p.append(e)}p.append(u);const g=`\n        <html>\n        <head>\n          <style>\n          ${m?`:root{--viewport-height:${window.innerHeight}px;}`:""}\n          html,body{margin:0;padding:0;overflow:hidden;max-width:100%!important;box-sizing:border-box}\n          .user_avatar,.user-avatar{background-image:url('${h()}')}\n          .char_avatar,.char-avatar{background-image:url('${v()}')}\n          </style>\n          ${i.default}\n          <script src="${s.script_url.get("iframe_client")}"><\/script>\n          ${a.libraries_text}\n        </head>\n        <body>\n          ${t}\n          ${m?`<script src="${s.script_url.get("viewport_adjust_script")}"><\/script>`:""}\n          ${l.extension_settings[r.extensionName].render.tampermonkey_compatibility?`<script src="${s.script_url.get("tampermonkey_script")}"><\/script>`:""}\n        </body>\n        </html>\n      `;u.attr("srcdoc",g),u.on("load",(function(){C(this);const t=$(this).parent();if(t.length){const e=t.find(".iframe-loading-overlay");e.length&&(e.css("opacity","0"),setTimeout((()=>e.remove()),300))}if("true"===$(this).attr("data-needs-vh")){const e=this;e.contentWindow&&e.contentWindow.postMessage({request:"updateViewportHeight",newHeight:window.innerHeight},"*")}o.eventSource.emitAndWait("message_iframe_render_ended",this.id),d&&$(`div[mesid="${e}"] .code-toggle-button`).each((function(){$(this).off("click").remove()})),_&&clearTimeout(_)})),o.eventSource.emitAndWait("message_iframe_render_started",u.attr("id")),$(this).replaceWith(p)})),y.push(e)}}function C(e){const t=$(e);if(!t.length||!t[0].contentWindow||!t[0].contentWindow.document.body)return;const n=t[0].contentWindow.document.body,a=t.attr("id");let r=null;N(e);try{window.ResizeObserver&&(r=new ResizeObserver((()=>{N(e)})),r.observe(n),a&&m.set(a,r))}catch(e){console.error("ResizeObserver初始化错误:",e)}e.cleanup=()=>{r&&(r.disconnect(),a&&m.delete(a))}}function k(e){const t=$(e);if(!t.length)return;const n=t.attr("id");t.off();try{if(t[0].contentWindow){const e=t[0].contentWindow.document;e&&($(e).find("*").off(),$(e).off())}}catch(e){console.debug("清理iframe内部事件时出错:",e)}try{t.contents().find("audio, video").each((function(){this instanceof HTMLMediaElement&&(this.pause(),this.src="",this.load(),$(this).off())}))}catch(e){console.debug("清理媒体元素时出错:",e)}if(t[0].contentWindow&&"stop"in t[0].contentWindow&&t[0].contentWindow.stop(),t[0].contentWindow)try{n&&"function"==typeof o.eventSource.removeListener&&(o.eventSource.removeListener("message_iframe_render_ended",n),o.eventSource.removeListener("message_iframe_render_started",n)),t.attr("src","about:blank")}catch(e){console.debug("清空iframe内容时出错:",e)}if(e.cleanup&&"function"==typeof e.cleanup)e.cleanup();else if(n&&m.has(n)){m.get(n).disconnect(),m.delete(n)}const a=t.clone(!1);t.parent().length&&t.replaceWith(a),a.parent().length&&a.remove();try{t.removeData()}catch(e){console.debug("移除jQuery数据缓存时出错:",e)}for(let t in e)if(e.hasOwnProperty(t))try{e[t]=null}catch(e){}return null}async function T(){$('iframe[id^="message-iframe"]').each((function(){k(this)}));try{"function"==typeof o.eventSource.removeAllListeners&&(o.eventSource.removeListener("message_iframe_render_started"),o.eventSource.removeListener("message_iframe_render_ended"))}catch(e){console.debug("清理事件监听器时出错:",e)}try{$.cache={}}catch(e){}try{let e=[];for(let t=0;t<10;t++)e.push(new Array(1e6).fill(1));e=null,window.gc&&window.gc()}catch(e){console.debug("尝试触发垃圾回收时出错:",e)}}function I(e){if("buttonClick"===e.data.type){const t=e.data.name;$(".qr--button.menu_button").each((function(){if($(this).find(".qr--button-label").text().trim()===t)return $(this).trigger("click"),!1}))}else if("textInput"===e.data.type){const t=jQuery("#send_textarea");t.length&&t.val(e.data.text).trigger("input").trigger("change")}else if("sendClick"===e.data.type){const e=jQuery("#send_but");e.length&&e.trigger("click")}}function N(e){const t=$(e);if(!t.length||!t[0].contentWindow||!t[0].contentWindow.document.body)return;const n=t[0].contentWindow.document,a=n.body.offsetHeight,r=n.documentElement.offsetHeight,s=Math.max(a,r),i=parseFloat(t.css("height"))||0;Math.abs(i-s)>5&&(t.css("height",s+"px"),"true"===t.attr("data-needs-vh")&&e.contentWindow&&e.contentWindow.postMessage({request:"updateViewportHeight",newHeight:window.innerHeight},"*"))}function M(e){let t="";return $(e).contents().each((function(){this.nodeType===Node.TEXT_NODE?t+=this.textContent:this.nodeType===Node.ELEMENT_NODE&&(t+=M(this))})),t}async function R(e){const t=(0,l.getContext)(),n=parseInt($("#process_depth").val(),10),a=t.chat.length,r=parseInt(e,10)-1;if(0===n){const n=t.chat[r],a=$(`div[mesid="${e}"] .mes_block .mes_text`).find("pre").length>0,s=$('[id^="message-iframe-'+r+'-"]');if(!a&&0===s.length)return;k(s),(0,o.updateMessageBlock)(r.toString(),n),await w(r)}else{for(let e=a-n;e<=r;e++){const n=t.chat[e],a=$(`div[mesid="${e}"] .mes_block .mes_text`).find("pre").length>0,r=$('[id^="message-iframe-'+e+'-"]');(a||0!==r.length)&&(k(r),(0,o.updateMessageBlock)(e.toString(),n),await w(e.toString()))}}}async function L(){const e=Boolean($("#tampermonkey_compatibility").prop("checked"));l.extension_settings[r.extensionName].render.tampermonkey_compatibility=e,(0,o.saveSettingsDebounced)(),(0,r.getSettingValue)("activate_setting")&&(e?c||(c=I,window.addEventListener("message",c),function(){let e=null;window.addEventListener("message",(function(t){if("audioPlay"===t.data.type){const n=t.data.iframeId;e&&e!==n&&$("iframe").each((function(){const e=this;e.contentWindow&&e.contentWindow.postMessage({type:"stopAudio",iframeId:n},"*")})),e=n}}))}()):c&&(window.removeEventListener("message",c),c=null),await y())}async function P(){const e=parseInt($("#process_depth").val(),10);if(e<0)return toastr.warning("处理深度不能为负数"),void $("#process_depth").val(l.extension_settings[r.extensionName].render.process_depth);l.extension_settings[r.extensionName].render.process_depth=e,await y(),(0,o.saveSettingsDebounced)()}const O=e=>{console.log("[Render] PARTIAL render event triggered for message ID:",e);const t=parseInt($("#process_depth").val(),10),n=(0,l.getContext)().chat.length;if(t>0){const a=n-t;if(parseInt(e,10)<a)return}setTimeout((()=>{A(u.PARTIAL,e)}),100)};function D(){if($("#iframe-loading-styles").length)return;const e=$("<style>",{id:"iframe-loading-styles",text:"\n      .iframe-loading-overlay{\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        background:rgba(0,0,0,.7);\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        z-index:1000;\n        transition:opacity .3s ease\n      }\n      .iframe-loading-content{\n        color:#fff;\n        display:flex;\n        align-items:center;\n        gap:10px;\n        font-size:16px\n      }\n      .iframe-loading-content i{\n        font-size:20px\n      }\n      .loading-text {\n        transition: opacity 0.3s ease;\n      }"});$("head").append(e)}function j(){var e="hidden-code-block-styles",t=document.getElementById(e);t||((t=document.createElement("style")).setAttribute("type","text/css"),t.setAttribute("id",e),document.head.appendChild(t)),t.innerHTML="\n    pre {\n      display: none;\n    }\n    .code-toggle-button {\n      display: inline-block;\n      margin: 5px 0;\n      padding: 5px 10px;\n      background-color: rgba(0, 0, 0, 0.1);\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 0.9em;\n      user-select: none;\n      transition: background-color 0.3s;\n    }\n    .code-toggle-button:hover {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n  "}function H(e){e.find(".code-toggle-button").length>0||0===e.find("pre").length||e.find("pre").each((function(){const e=$(this),t=$('<div class="code-toggle-button">显示代码块</div>'),n=$('<div style="display: none; font-size: 0.8em; opacity: 0.8;">取消选中前端助手的‘前端卡渲染优化’选项以关闭此折叠功能</div>');t.on("click",(function(){e.is(":visible")?(e.hide(),$(this).text("显示代码块"),n.hide()):(e.show(),$(this).text("隐藏代码块"),n.show())})),e.before(t),t.after(n)}))}function V(){if(!l.extension_settings[r.extensionName].render.rendering_optimize)return;const e=$("#chat");e.length&&e.find(".mes .mes_block .mes_text").each((function(){H($(this))}))}function G(e){const t=$("#chat");if(!t.length)return;H(t.find(`div[mesid="${e}"] .mes_block .mes_text`))}function U(){j(),hljs.highlightElement=function(e){},V()}function W(){var e;hljs.highlightElement=p,(e=document.getElementById("hidden-code-block-styles"))&&e.remove(),$(".code-toggle-button").each((function(){$(this).off("click").remove()})),$("pre").css("display","block")}async function F(e=!0){const t=Boolean($("#rendering_optimize").prop("checked"));e&&(l.extension_settings[r.extensionName].render.rendering_optimize=t,d=t,(0,o.saveSettingsDebounced)()),(0,r.getSettingValue)("activate_setting")&&(t?(U(),e&&await y()):(W(),e&&await y()))}const q=()=>{const e=(0,r.getSettingValue)("render.rendering_optimize");$("#rendering_optimize").prop("checked",e).on("click",(()=>F(!0))),e&&F(!1);const t=l.extension_settings[r.extensionName].render.tampermonkey_compatibility;$("#tampermonkey_compatibility").prop("checked",t).on("click",L),t&&L(),$("#process_depth").val(l.extension_settings[r.extensionName].render.process_depth||g.process_depth).on("input",P),$(window).on("resize",(function(){$('iframe[data-needs-vh="true"]').length&&$(window).on("resize",(function(){if($('iframe[data-needs-vh="true"]').length){const e=window.innerHeight;$('iframe[data-needs-vh="true"]').each((function(){const t=this;t.contentWindow&&t.contentWindow.postMessage({request:"updateViewportHeight",newHeight:e},"*")}))}}))})),D()}},"./src/component/script_repository.ts":
/*!********************************************!*\
  !*** ./src/component/script_repository.ts ***!
  \********************************************/(e,t,n)=>{n.r(t),n.d(t,{autoDisableIncompatibleOptions:()=>p,autoEnableCharacterRegex:()=>l,initAutoSettings:()=>f,onAutoDisableIncompatibleOptions:()=>g,onAutoEnableCharacterRegexClick:()=>m,registerAutoDisableIncompatibleOptions:()=>u,registerAutoEnableCharacterRegex:()=>c,unregisterAutoDisableIncompatibleOptions:()=>_,unregisterAutoEnableCharacterRegex:()=>d});var a=n(/*! @/index */"./src/index.ts"),r=n(/*! @sillytavern/script */"@sillytavern/script"),s=n(/*! @sillytavern/scripts/group-chats */"@sillytavern/scripts/group-chats"),i=n(/*! @sillytavern/scripts/extensions */"@sillytavern/scripts/extensions"),o=n(/*! @sillytavern/scripts/power-user */"@sillytavern/scripts/power-user");async function l(){if(void 0===r.this_chid)return;if(s.selected_group)return;const e=r.characters[r.this_chid].avatar;i.extension_settings.character_allowed_regex.includes(e)||(i.extension_settings.character_allowed_regex.push(e),(0,r.reloadCurrentChat)()),(0,r.saveSettingsDebounced)()}async function c(){r.eventSource.on(r.event_types.CHAT_CHANGED,l)}async function d(){r.eventSource.removeListener(r.event_types.CHAT_CHANGED,l)}async function m(){const e=Boolean($("#auto_enable_character_regex").prop("checked"));i.extension_settings[a.extensionName].auto_enable_character_regex=e,e?c():(0,r.saveSettingsDebounced)()}async function p(){(o.power_user.auto_fix_generated_markdown||o.power_user.trim_sentences||o.power_user.forbid_external_media)&&(o.power_user.auto_fix_generated_markdown=!1,$("#auto_fix_generated_markdown").prop("checked",o.power_user.auto_fix_generated_markdown),o.power_user.trim_sentences=!1,$("#trim_sentences_checkbox").prop("checked",o.power_user.trim_sentences),o.power_user.forbid_external_media=!1,$("#forbid_external_media").prop("checked",o.power_user.forbid_external_media)),(0,r.saveSettingsDebounced)()}async function u(){r.eventSource.on(r.event_types.CHAT_CHANGED,p)}async function _(){r.eventSource.removeListener(r.event_types.CHAT_CHANGED,p)}async function g(){const e=Boolean($("#auto_disable_incompatible_options").prop("checked"));i.extension_settings[a.extensionName].auto_disable_incompatible_options=e,e?u():_(),(0,r.saveSettingsDebounced)()}async function f(){const e=i.extension_settings[a.extensionName].auto_enable_character_regex;$("#auto_enable_character_regex").prop("checked",e).on("click",m),e&&m();const t=i.extension_settings[a.extensionName].auto_disable_incompatible_options;$("#auto_disable_incompatible_options").prop("checked",t).on("click",g),t&&g()}},"./src/iframe_client/_impl.ts?raw":
/*!****************************************!*\
  !*** ./src/iframe_client/_impl.ts?raw ***!
  \****************************************/e=>{e.exports='"use strict";\n// @ts-expect-error\nvar detail;\n(function (detail) {\n    ;\n    async function make_iframe_promise(message) {\n        return new Promise((resolve, _) => {\n            const uid = Date.now() + Math.random();\n            function handleMessage(event) {\n                if (event.data?.request === (message.request + "_callback") && event.data.uid == uid) {\n                    window.removeEventListener("message", handleMessage);\n                    resolve(event.data.result);\n                }\n            }\n            window.addEventListener("message", handleMessage);\n            window.parent.postMessage({\n                uid: uid,\n                ...message,\n            }, "*");\n        });\n    }\n    detail.make_iframe_promise = make_iframe_promise;\n    function format_function_to_string(fn) {\n        const string = fn.toString();\n        const index = string.indexOf(\'\\n\');\n        if (index > -1) {\n            return string.slice(0, index);\n        }\n        else {\n            return string;\n        }\n    }\n    detail.format_function_to_string = format_function_to_string;\n    function get_or_set(map, key, defaulter) {\n        const existing_value = map.get(key);\n        if (existing_value) {\n            return existing_value;\n        }\n        const default_value = defaulter();\n        map.set(key, default_value);\n        return default_value;\n    }\n    detail.get_or_set = get_or_set;\n    function extract(map, key) {\n        const value = map.get(key);\n        if (!value) {\n            return undefined;\n        }\n        map.delete(key);\n        return value;\n    }\n    detail.extract = extract;\n})(detail || (detail = {}));\n'},"./src/iframe_client/_multimap.ts?raw":
/*!********************************************!*\
  !*** ./src/iframe_client/_multimap.ts?raw ***!
  \********************************************/e=>{e.exports='"use strict";\n// 命名为 _multimap.ts, 保证它被插入在开头, 虽然最好换一种 iframe 内代码的做法\nclass Multimap {\n    size_ = 0;\n    map = new Map();\n    operator;\n    constructor(operator, iterable) {\n        this.operator = operator;\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.put(key, value);\n            }\n        }\n        return this;\n    }\n    get size() {\n        return this.size_;\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (values) {\n            return this.operator.clone(values);\n        }\n        else {\n            return this.operator.create();\n        }\n    }\n    put(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = this.operator.create();\n        }\n        if (!this.operator.add(value, values)) {\n            return false;\n        }\n        this.map.set(key, values);\n        this.size_++;\n        return true;\n    }\n    putAll(arg1, arg2) {\n        let pushed = 0;\n        if (arg2) {\n            const key = arg1;\n            const values = arg2;\n            for (const value of values) {\n                this.put(key, value);\n                pushed++;\n            }\n        }\n        else if (arg1 instanceof Multimap) {\n            for (const [key, value] of arg1.entries()) {\n                this.put(key, value);\n                pushed++;\n            }\n        }\n        else {\n            throw new TypeError("unexpected arguments");\n        }\n        return pushed > 0;\n    }\n    has(key) {\n        return this.map.has(key);\n    }\n    hasEntry(key, value) {\n        return this.operator.has(value, this.get(key));\n    }\n    delete(key) {\n        this.size_ -= this.operator.size(this.get(key));\n        return this.map.delete(key);\n    }\n    deleteEntry(key, value) {\n        const current = this.get(key);\n        if (!this.operator.delete(value, current)) {\n            return false;\n        }\n        this.map.set(key, current);\n        this.size_--;\n        return true;\n    }\n    clear() {\n        this.map.clear();\n        this.size_ = 0;\n    }\n    keys() {\n        return this.map.keys();\n    }\n    entries() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        function* gen() {\n            for (const [key, values] of self.map.entries()) {\n                for (const value of values) {\n                    yield [key, value];\n                }\n            }\n        }\n        return gen();\n    }\n    values() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        function* gen() {\n            for (const [, value] of self.entries()) {\n                yield value;\n            }\n        }\n        return gen();\n    }\n    forEach(callback, thisArg) {\n        for (const [key, value] of this.entries()) {\n            callback.call(thisArg === undefined ? this : thisArg, value, key, this);\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    asMap() {\n        const ret = new Map();\n        for (const key of this.keys()) {\n            ret.set(key, this.operator.clone(this.get(key)));\n        }\n        return ret;\n    }\n}\nclass ArrayMultimap extends Multimap {\n    constructor(iterable) {\n        super(new ArrayOperator(), iterable);\n    }\n    get [Symbol.toStringTag]() {\n        return "ArrayMultimap";\n    }\n}\nclass ArrayOperator {\n    create() {\n        return [];\n    }\n    clone(collection) {\n        return collection.slice();\n    }\n    add(value, collection) {\n        collection.push(value);\n        return true;\n    }\n    size(collection) {\n        return collection.length;\n    }\n    delete(value, collection) {\n        const index = collection.indexOf(value);\n        if (index > -1) {\n            collection.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n    has(value, collection) {\n        return collection.includes(value);\n    }\n}\nclass SetMultimap extends Multimap {\n    constructor(iterable) {\n        super(new SetOperator(), iterable);\n    }\n    get [Symbol.toStringTag]() {\n        return "SetMultimap";\n    }\n}\nclass SetOperator {\n    create() {\n        return new Set();\n    }\n    clone(collection) {\n        return new Set(collection);\n    }\n    add(value, collection) {\n        const prev = collection.size;\n        collection.add(value);\n        return prev !== collection.size;\n    }\n    size(collection) {\n        return collection.size;\n    }\n    delete(value, collection) {\n        return collection.delete(value);\n    }\n    has(value, collection) {\n        return collection.has(value);\n    }\n}\n'},"./src/iframe_client/audio.ts?raw":
/*!****************************************!*\
  !*** ./src/iframe_client/audio.ts?raw ***!
  \****************************************/e=>{e.exports="\"use strict\";\nasync function audioMode(params) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioMode]',\n        type: params.type,\n        mode: params.mode,\n    });\n}\nasync function audioEnable(params) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioEnable]',\n        type: params.type,\n        state: params.state,\n    });\n}\nasync function audioPlay(params) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioPlay]',\n        type: params.type,\n        play: params.play,\n    });\n}\nasync function audioImport(params, url) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioImport]',\n        type: params.type,\n        url: url,\n        play: params.play,\n    });\n}\nasync function audioSelect(params, url) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioSelect]',\n        type: params.type,\n        url: url,\n    });\n}\n"},"./src/iframe_client/character.ts?raw":
/*!********************************************!*\
  !*** ./src/iframe_client/character.ts?raw ***!
  \********************************************/e=>{e.exports="\"use strict\";\nasync function getCharData(name, allowAvatar = false) {\n    return detail.make_iframe_promise({\n        request: '[Character][getCharData]',\n        name: name,\n        allowAvatar: allowAvatar,\n    });\n}\nasync function getCharAvatarPath(name, allowAvatar = false) {\n    return detail.make_iframe_promise({\n        request: '[Character][getCharAvatarPath]',\n        name: name,\n        allowAvatar: allowAvatar,\n    });\n}\nasync function getChatHistoryBrief(name, allowAvatar = false) {\n    return detail.make_iframe_promise({\n        request: '[Character][getChatHistoryBrief]',\n        name: name,\n        allowAvatar: allowAvatar,\n    });\n}\nasync function getChatHistoryDetail(data, isGroupChat = false) {\n    return detail.make_iframe_promise({\n        request: '[Character][getChatHistoryDetail]',\n        data: data,\n        isGroupChat: isGroupChat,\n    });\n}\n"},"./src/iframe_client/chat_message.ts?raw":
/*!***********************************************!*\
  !*** ./src/iframe_client/chat_message.ts?raw ***!
  \***********************************************/e=>{e.exports="\"use strict\";\n/**\n * 获取聊天消息\n *\n * @param range 要获取的消息楼层号或楼层范围, 与 `/messages` 相同\n * @param option 可选选项\n *   - `role:'all'|'system'|'assistant'|'user'`: 按 role 筛选消息; 默认为 `'all'`\n *   - `hide_state:'all'|'hidden'|'unhidden'`: 按是否被隐藏筛选消息; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是每楼的消息 `ChatMessage`. 该数组依据按 message_id 从低到高排序.\n *\n * @example\n * // 获取第 10 楼的所有消息页\n * const messages = await getChatMessages(10);\n * const messages = await getChatMessages(\"10\");\n * // 获取所有楼层的所有消息页\n * const messages = await getChatMessages(\"0-{{lastMessageId}}\");\n */\nasync function getChatMessages(range, option = {}) {\n    /** @todo @deprecated 在未来移除它 */\n    if (Object.hasOwn(option, 'hidden')) {\n        console.warn(\"`hidden` 已经被弃用, 请使用 `hide_state`\");\n        if (Object.hasOwn(option, 'include_swipe')) {\n            console.warn(\"不要同时使用 hide_state 和 hidden, 请只使用 hide_state\");\n        }\n        else {\n            option.hide_state = option.hidden ? 'all' : 'unhidden';\n        }\n    }\n    option = {\n        role: option.role ?? 'all',\n        hide_state: option.hide_state ?? 'all',\n    };\n    return detail.make_iframe_promise({\n        request: \"[ChatMessage][getChatMessages]\",\n        range: range.toString(),\n        option: option,\n    });\n}\n;\nasync function setChatMessage(field_values, message_id, option = {}) {\n    const required_option = {\n        swipe_id: option.swipe_id ?? 'current',\n        refresh: option.refresh ?? 'display_and_render_current',\n    };\n    return detail.make_iframe_promise({\n        request: \"[ChatMessage][setChatMessage]\",\n        field_values: typeof field_values === 'string' ? { message: field_values } : field_values,\n        message_id: message_id,\n        option: required_option,\n    });\n}\n"},"./src/iframe_client/displayed_message.ts?raw":
/*!****************************************************!*\
  !*** ./src/iframe_client/displayed_message.ts?raw ***!
  \****************************************************/e=>{e.exports='"use strict";\n;\n/**\n * 将字符串处理为酒馆用于显示的 html 格式. 将会,\n * 1. 替换字符串中的酒馆宏\n * 2. 对字符串应用对应的酒馆正则\n * 3. 将字符串调整为 html 格式\n *\n * @param text 要处理的字符串\n * @param option 可选选项\n *   - `message_id?:number`: 消息所在的楼层, 要求该楼层已经存在, 即在 `[0, await getLastMessageId()]` 范围内; 默认为最新楼层\n *\n * @returns 处理结果\n *\n * @example\n * const text = await formatAsDisplayedMessage("{{char}} speaks in {{lastMessageId}}");\n * text == "<p>少女歌剧 speaks in 5</p>";\n */\nasync function formatAsDisplayedMessage(text, option = {}) {\n    option = {\n        message_id: option.message_id ?? \'last\',\n    };\n    return detail.make_iframe_promise({\n        request: \'[DisplayedMessage][formatAsDisplayedMessage]\',\n        text: text,\n        option: option,\n    });\n}\n/**\n * 获取消息楼层号对应的消息内容 JQuery\n *\n * 相比于一个实用函数, 这更像是一个告诉你可以这样用 JQuery 的示例\n *\n * @param message_id 要获取的消息楼层号, 必须要酒馆页面显示了该消息楼层才能获取到\n * @returns 如果能获取到该消息楼层的 html, 则返回对应的 JQuery; 否则返回空 JQuery\n *\n * @example\n * // 获取第 0 楼的消息内容文本\n * const text = retrieveDisplayedMessage(0).text();\n *\n * @example\n * // 修改第 0 楼的消息内容文本\n * // - 这样的修改只会影响本次显示, 不会保存到消息文件中, 因此重新加载消息或刷新网页等操作后就会回到原样;\n * // - 如果需要实际修改消息文件, 请使用 `setChatMessage`\n * retrieveDisplayedMessage(0).text("new text");\n * retrieveDisplayedMessage(0).append("<pre>new text</pre>");\n * retrieveDisplayedMessage(0).append(formatAsDisplayedMessage("{{char}} speaks in {{lastMessageId}}"));\n */\nfunction retrieveDisplayedMessage(message_id) {\n    return $(`div.mes[mesid = "${message_id}"]`, window.parent.document).find(`div.mes_text`);\n}\n'},"./src/iframe_client/event.ts?raw":
/*!****************************************!*\
  !*** ./src/iframe_client/event.ts?raw ***!
  \****************************************/e=>{e.exports="\"use strict\";\n/**\n * 让 `listener` 监听 `event_type`, 当事件发生时自动运行 `listener`.\n *\n * - 如果 `listener` 已经在监听 `event_type`, 则调用本函数不会有任何效果.\n *\n * @param event_type 要监听的事件\n * @param listener 要注册的函数\n *\n * @example\n * function hello() { alert(\"hello\"); }\n * eventOn(要监听的事件, hello);\n *\n * @example\n * // 消息被修改时监听是哪一条消息被修改\n * // 能这么做是因为酒馆 MESSAGE_UPDATED 会发送消息 id 回来, 但是这个发送太自由了, 我还没整理出每种消息会发送什么\n * function detectMessageUpdated(message_id) {\n *   alert(`你刚刚修改了第 ${message_id} 条聊天消息对吧😡`);\n * }\n * eventOn(tavern_events.MESSAGE_UPDATED, detectMessageUpdated);\n */\nfunction eventOn(event_type, listener) {\n    if (detail.try_get_wrapper(listener, event_type)) {\n        console.warn(`[Event][eventOn](${getIframeName()}) 函数已经在监听 '${event_type}' 事件, 调用无效\\n\\n  ${detail.format_function_to_string(listener)}`);\n        return;\n    }\n    sillyTavern().eventSource.on(event_type, detail.get_or_make_wrapper(listener, event_type, false));\n    console.info(`[Event][eventOn](${getIframeName()}) 函数开始监听 '${event_type}' 事件并将随事件触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n}\n/**\n * 让 `listener` 监听 `event_type`, 当事件发生时自动在最后运行 `listener`.\n *\n * - 如果 `listener` 已经在监听 `event_type`, 则调用本函数会将 `listener` 调整为最后运行.\n *\n * @param event_type 要监听的事件\n * @param listener 要注册/调整到最后运行的函数\n *\n * @example\n * eventMakeLast(要监听的事件, 要注册的函数);\n */\nfunction eventMakeLast(event_type, listener) {\n    const is_listening = detail.try_get_wrapper(listener, event_type) !== undefined;\n    sillyTavern().eventSource.makeLast(event_type, detail.get_or_make_wrapper(listener, event_type, false));\n    if (is_listening) {\n        console.info(`[Event][eventMakeLast](${getIframeName()}) 函数调整为监听到 '${event_type}' 事件时最后触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    }\n    else {\n        console.info(`[Event][eventMakeLast](${getIframeName()}) 函数开始监听 '${event_type}' 事件并将随事件最后触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    }\n}\n/**\n * 让 `listener` 监听 `event_type`, 当事件发生时自动在最先运行 `listener`.\n *\n * - 如果 `listener` 已经在监听 `event_type`, 则调用本函数会将 `listener` 调整为最先运行.\n *\n * @param event_type 要监听的事件\n * @param listener 要注册/调整为最先运行的函数\n *\n * @example\n * eventMakeFirst(要监听的事件, 要注册的函数);\n */\nfunction eventMakeFirst(event_type, listener) {\n    const is_listening = detail.try_get_wrapper(listener, event_type) !== undefined;\n    sillyTavern().eventSource.makeFirst(event_type, detail.get_or_make_wrapper(listener, event_type, false));\n    if (is_listening) {\n        console.info(`[Event][eventMakeFirst](${getIframeName()}) 函数调整为监听到 '${event_type}' 事件时最先触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    }\n    else {\n        console.info(`[Event][eventMakeFirst](${getIframeName()}) 函数开始监听 '${event_type}' 事件并将随事件最先触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    }\n}\n/**\n * 让 `listener` 仅监听下一次 `event_type`, 当该次事件发生时运行 `listener`, 此后取消监听.\n *\n * - 如果 `listener` 已经在监听 `event_type`, 则调用本函数不会有任何效果.\n *\n * @param event_type 要监听的事件\n * @param listener 要注册的函数\n *\n * @example\n * eventOnce(要监听的事件, 要注册的函数);\n */\nfunction eventOnce(event_type, listener) {\n    if (detail.try_get_wrapper(listener, event_type)) {\n        console.warn(`[Event][eventOnce](${getIframeName()}) 函数已经在监听 '${event_type}' 事件, 调用无效\\n\\n  ${detail.format_function_to_string(listener)}`);\n        return;\n    }\n    sillyTavern().eventSource.once(event_type, detail.get_or_make_wrapper(listener, event_type, true));\n    console.info(`[Event][eventOnce](${getIframeName()}) 函数开始监听下一次 '${event_type}' 事件并仅在该次事件时触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n}\nasync function eventWaitOnce(event_type, listener) {\n    if (!listener) {\n        const do_nothing = () => { };\n        eventOnce(event_type, do_nothing);\n        return await eventWaitOnce(event_type, do_nothing);\n    }\n    const entry = `${event_type}#${listener.toString()}`;\n    return new Promise((resolve, _) => {\n        const uid = Date.now() + Math.random();\n        function handleMessage(event) {\n            if (event.data?.request === \"iframe_event_wait_callback\" && event.data.uid == uid) {\n                window.removeEventListener(\"message\", handleMessage);\n                resolve(event.data.result);\n                detail.waiting_event_map.deleteEntry(entry, uid);\n                console.info(`[Event][eventWaitOnce](${getIframeName()}) 等待到函数因 '${event_type}' 事件触发后的执行结果: ${JSON.stringify(event.data.result)}\\n\\n  ${detail.format_function_to_string(listener)}`);\n            }\n        }\n        window.addEventListener(\"message\", handleMessage);\n        detail.waiting_event_map.put(entry, uid);\n        console.info(`[Event][eventWaitOnce](${getIframeName()}) 等待函数被 '${event_type}' 事件触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    });\n}\n/**\n * 发送 `event_type` 事件, 同时可以发送一些数据 `data`.\n *\n * 所有正在监听 `event_type` 消息频道的都会收到该消息并接收到 `data`.\n *\n * @param event_type 要发送的事件\n * @param data 要随着事件发送的数据\n *\n * @example\n * // 发送 \"角色阶段更新完成\" 事件, 所有监听该事件的 `listener` 都会被运行\n * eventEmit(\"角色阶段更新完成\");\n *\n * @example\n * // 发送 \"存档\" 事件, 并等待所有 `listener` (也许是负责存档的函数) 执行完毕后才继续\n * await eventEmit(\"存档\");\n *\n * @example\n * // 发送时携带数据 [\"你好\", 0]\n * eventEmit(\"事件\", \"你好\", 0);\n */\nasync function eventEmit(event_type, ...data) {\n    await sillyTavern().eventSource.emit(event_type, ...data);\n    console.info(`[Event][eventEmit](${getIframeName()}) 发送 '${event_type}' 事件, 携带数据: ${JSON.stringify(data)}`);\n}\n/**\n * 让 `listener` 取消对 `event_type` 的监听.\n *\n * - 如果 `listener` 没有监听 `event_type`, 则调用本函数不会有任何效果.\n *\n * @param event_type 要监听的事件\n * @param listener 要取消注册的函数\n *\n * @example\n * eventRemoveListener(要监听的事件, 要取消注册的函数);\n */\nfunction eventRemoveListener(event_type, listener) {\n    const wrapper = detail.try_get_wrapper(listener, event_type);\n    if (!wrapper) {\n        console.warn(`[Event][eventRemoveListener](${getIframeName()}) 函数没有监听 '${event_type}' 事件, 调用无效\\n\\n  ${detail.format_function_to_string(listener)}`);\n        return;\n    }\n    sillyTavern().eventSource.removeListener(event_type, wrapper);\n    detail.remove_wrapper(listener, event_type);\n    console.info(`[Event][eventRemoveListener](${getIframeName()}) 函数不再监听 '${event_type}' 事件\\n\\n  ${detail.format_function_to_string(listener)}`);\n}\n/**\n * 取消本 iframe 中对 `event_type` 的所有监听\n *\n * @param event_type 要取消监听的事件\n */\nfunction eventClearEvent(event_type) {\n    detail.listener_event_wrapper_map.forEach((event_wrapper_map, _) => {\n        const wrapper = event_wrapper_map.get(event_type);\n        if (wrapper) {\n            sillyTavern().eventSource.removeListener(event_type, wrapper);\n            event_wrapper_map.delete(event_type);\n        }\n    });\n    console.info(`[Event][eventClearEvent](${getIframeName()})所有函数都不再监听 '${event_type}' 事件`);\n}\n/**\n * 取消本 iframe 中 `listener` 的的所有监听\n *\n * @param listener 要取消注册的函数\n */\nfunction eventClearListener(listener) {\n    const event_callback_map = detail.extract(detail.listener_event_wrapper_map, listener);\n    if (event_callback_map) {\n        event_callback_map.forEach((callback, event_type) => {\n            sillyTavern().eventSource.removeListener(event_type, callback);\n        });\n    }\n    console.info(`[Event][eventClearListener](${getIframeName()}) 函数不再监听任何事件\\n\\n  ${detail.format_function_to_string(listener)}`);\n}\n/**\n * 取消本 iframe 中对所有事件的所有监听\n */\nfunction eventClearAll() {\n    detail.listener_event_wrapper_map.forEach((event_wrapper_map, _) => {\n        event_wrapper_map.forEach((wrapper, event_type) => {\n            sillyTavern().eventSource.removeListener(event_type, wrapper);\n        });\n    });\n    detail.listener_event_wrapper_map.clear();\n    console.info(`[Event][eventClearAll](${getIframeName()}) 取消所有函数对所有事件的监听`);\n}\n// iframe 事件\nconst iframe_events = {\n    MESSAGE_IFRAME_RENDER_STARTED: 'message_iframe_render_started',\n    MESSAGE_IFRAME_RENDER_ENDED: 'message_iframe_render_ended',\n    VARIABLES_UPDATED: 'variables_updated', // 全局/聊天/随楼变量通过前端助手的函数得到更新\n    GENERATION_STARTED: 'js_generation_started', // `generate` 函数开始生成\n    STREAM_TOKEN_RECEIVED_FULLY: 'js_stream_token_received_fully', // 启用流式传输的 `generate` 函数传输当前完整文本: \"这是\", \"这是一条\", \"这是一条流式传输\"\n    STREAM_TOKEN_RECEIVED_INCREMENTALLY: 'js_stream_token_received_incrementally', // 启用流式传输的 `generate` 函数传输当前增量文本: \"这是\", \"一条\", \"流式传输\"\n    GENERATION_ENDED: 'js_generation_ended', // `generate` 函数完成生成\n};\n// 酒馆事件. **不建议自己发送酒馆事件, 因为你并不清楚它需要发送什么数据**\nconst tavern_events = {\n    APP_READY: 'app_ready',\n    EXTRAS_CONNECTED: 'extras_connected',\n    MESSAGE_SWIPED: 'message_swiped',\n    MESSAGE_SENT: 'message_sent',\n    MESSAGE_RECEIVED: 'message_received',\n    MESSAGE_EDITED: 'message_edited',\n    MESSAGE_DELETED: 'message_deleted',\n    MESSAGE_UPDATED: 'message_updated',\n    MESSAGE_FILE_EMBEDDED: 'message_file_embedded',\n    IMPERSONATE_READY: 'impersonate_ready',\n    CHAT_CHANGED: 'chat_id_changed',\n    GENERATION_AFTER_COMMANDS: 'GENERATION_AFTER_COMMANDS',\n    GENERATION_STARTED: 'generation_started',\n    GENERATION_STOPPED: 'generation_stopped',\n    GENERATION_ENDED: 'generation_ended',\n    EXTENSIONS_FIRST_LOAD: 'extensions_first_load',\n    EXTENSION_SETTINGS_LOADED: 'extension_settings_loaded',\n    SETTINGS_LOADED: 'settings_loaded',\n    SETTINGS_UPDATED: 'settings_updated',\n    GROUP_UPDATED: 'group_updated',\n    MOVABLE_PANELS_RESET: 'movable_panels_reset',\n    SETTINGS_LOADED_BEFORE: 'settings_loaded_before',\n    SETTINGS_LOADED_AFTER: 'settings_loaded_after',\n    CHATCOMPLETION_SOURCE_CHANGED: 'chatcompletion_source_changed',\n    CHATCOMPLETION_MODEL_CHANGED: 'chatcompletion_model_changed',\n    OAI_PRESET_CHANGED_BEFORE: 'oai_preset_changed_before',\n    OAI_PRESET_CHANGED_AFTER: 'oai_preset_changed_after',\n    OAI_PRESET_EXPORT_READY: 'oai_preset_export_ready',\n    OAI_PRESET_IMPORT_READY: 'oai_preset_import_ready',\n    WORLDINFO_SETTINGS_UPDATED: 'worldinfo_settings_updated',\n    WORLDINFO_UPDATED: 'worldinfo_updated',\n    CHARACTER_EDITED: 'character_edited',\n    CHARACTER_PAGE_LOADED: 'character_page_loaded',\n    CHARACTER_GROUP_OVERLAY_STATE_CHANGE_BEFORE: 'character_group_overlay_state_change_before',\n    CHARACTER_GROUP_OVERLAY_STATE_CHANGE_AFTER: 'character_group_overlay_state_change_after',\n    USER_MESSAGE_RENDERED: 'user_message_rendered',\n    CHARACTER_MESSAGE_RENDERED: 'character_message_rendered',\n    FORCE_SET_BACKGROUND: 'force_set_background',\n    CHAT_DELETED: 'chat_deleted',\n    CHAT_CREATED: 'chat_created',\n    GROUP_CHAT_DELETED: 'group_chat_deleted',\n    GROUP_CHAT_CREATED: 'group_chat_created',\n    GENERATE_BEFORE_COMBINE_PROMPTS: 'generate_before_combine_prompts',\n    GENERATE_AFTER_COMBINE_PROMPTS: 'generate_after_combine_prompts',\n    GENERATE_AFTER_DATA: 'generate_after_data',\n    GROUP_MEMBER_DRAFTED: 'group_member_drafted',\n    WORLD_INFO_ACTIVATED: 'world_info_activated',\n    TEXT_COMPLETION_SETTINGS_READY: 'text_completion_settings_ready',\n    CHAT_COMPLETION_SETTINGS_READY: 'chat_completion_settings_ready',\n    CHAT_COMPLETION_PROMPT_READY: 'chat_completion_prompt_ready',\n    CHARACTER_FIRST_MESSAGE_SELECTED: 'character_first_message_selected',\n    // TODO: Naming convention is inconsistent with other events\n    CHARACTER_DELETED: 'characterDeleted',\n    CHARACTER_DUPLICATED: 'character_duplicated',\n    STREAM_TOKEN_RECEIVED: 'stream_token_received',\n    FILE_ATTACHMENT_DELETED: 'file_attachment_deleted',\n    WORLDINFO_FORCE_ACTIVATE: 'worldinfo_force_activate',\n    OPEN_CHARACTER_LIBRARY: 'open_character_library',\n    ONLINE_STATUS_CHANGED: 'online_status_changed',\n    IMAGE_SWIPED: 'image_swiped',\n    CONNECTION_PROFILE_LOADED: 'connection_profile_loaded',\n    TOOL_CALLS_PERFORMED: 'tool_calls_performed',\n    TOOL_CALLS_RENDERED: 'tool_calls_rendered',\n};\n//------------------------------------------------------------------------------------------------------------------------\n// @ts-expect-error\nvar detail;\n(function (detail) {\n    detail.listener_event_wrapper_map = new Map();\n    function try_get_wrapper(listener, event_type) {\n        return detail.listener_event_wrapper_map.get(listener)?.get(event_type);\n    }\n    detail.try_get_wrapper = try_get_wrapper;\n    function remove_wrapper(listener, event_type) {\n        detail.listener_event_wrapper_map.get(listener)?.delete(event_type);\n    }\n    detail.remove_wrapper = remove_wrapper;\n    function get_or_make_wrapper(listener, event_type, once) {\n        const default_wrapper = async (...args) => {\n            if (once) {\n                remove_wrapper(listener, event_type);\n            }\n            const result = await listener(...args);\n            console.info(`[Event][callback '${event_type}'](${getIframeName()}) 函数因监听到 '${event_type}' 事件而触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n            const uid = detail.waiting_event_map.get(`${event_type}#${listener.toString()}`)[0];\n            if (uid) {\n                window.postMessage({\n                    request: 'iframe_event_wait_callback',\n                    uid: uid,\n                    result: result,\n                }, '*');\n            }\n            return result;\n        };\n        const default_event_wrapper_map = new Map([[event_type, default_wrapper]]);\n        const event_wrapper = detail.get_or_set(detail.listener_event_wrapper_map, listener, () => default_event_wrapper_map);\n        const wrapper = detail.get_or_set(event_wrapper, event_type, () => default_wrapper);\n        return wrapper;\n    }\n    detail.get_or_make_wrapper = get_or_make_wrapper;\n    detail.waiting_event_map = new ArrayMultimap();\n    $(window).on('unload', eventClearAll);\n})(detail || (detail = {}));\n//------------------------------------------------------------------------------------------------------------------------\n// 已被弃用的接口, 请尽量按照指示更新它们\n/**\n * @deprecated 已弃用, 请使用 eventOn\n */\nconst tavernOn = eventOn;\n/**\n * @deprecated 已弃用, 请使用 eventMakeLast\n */\nconst tavernMakeLast = eventMakeLast;\n/**\n * @deprecated 已弃用, 请使用 eventMakeFirst\n */\nconst tavernMakeFirst = eventMakeFirst;\n/**\n * @deprecated 已弃用, 请使用 eventOnce\n */\nconst tavernOnce = eventOnce;\n/**\n * @deprecated 已弃用, 请使用 eventRemoveListener\n */\nconst tavernRemoveListener = eventRemoveListener;\n"},"./src/iframe_client/exported.ts?raw":
/*!*******************************************!*\
  !*** ./src/iframe_client/exported.ts?raw ***!
  \*******************************************/e=>{e.exports='"use strict";\n/**\n * 酒馆提供给插件的稳定接口, 具体内容见于 https://github.com/SillyTavern/SillyTavern/blob/release/public/scripts/st-context.js#L76\n * 你也可以在酒馆页面按 f12, 在控制台中输入 `window.SillyTavern.getContext()` 来查看当前酒馆所提供的接口\n */\nconst SillyTavern = window.parent.SillyTavern.getContext();\n//======================================================================================================================\n/**\n * @deprecated 请使用 SillyTavern 而不是 sillyTavern()\n */\nfunction sillyTavern() {\n    return SillyTavern;\n}\n'},"./src/iframe_client/frontend_version.ts?raw":
/*!***************************************************!*\
  !*** ./src/iframe_client/frontend_version.ts?raw ***!
  \***************************************************/e=>{e.exports="\"use strict\";\n/**\n * 获取前端助手版本号\n *\n * 自然地, 旧版本前端助手并没有这个函数. 为了让该功能在旧版本下正常使用, 你可以直接使用该函数内部的实现.\n */\nfunction getFrontendVersion() {\n    const version = $(\".js-settings\", window.parent.document).find('.extension_info.flex-container.spaceBetween > small').text().replace('Ver ', '');\n    console.info(`[FrontendVersion][getFrontendVersion] 获取前端助手版本号: ${version}`);\n    return version;\n}\n/**\n * 尝试主动更新前端助手\n */\nasync function updateFrontendVersion() {\n    return detail.make_iframe_promise({\n        request: \"[FrontendVersion][updateFrontendVersion]\",\n    });\n}\n"},"./src/iframe_client/generate.ts?raw":
/*!*******************************************!*\
  !*** ./src/iframe_client/generate.ts?raw ***!
  \*******************************************/e=>{e.exports="\"use strict\";\n;\n/**\n * 使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n * @returns 生成的最终文本\n *\n * @example\n * // 流式生成\n * const result = await generate({ user_input: '你好', should_stream: true });\n *\n * @example\n * // 注入、覆盖提示词\n * const result = await generate({\n *   user_input: '你好',\n *   injects: [{ role: 'system', content: '思维链...', position: 'in_chat', depth: 0, should_scan: true, }]\n *   overrides: {\n *     char_personality: '温柔',\n *     world_info_before: '',\n *     chat_history: {\n *       prompts: [],\n *     }\n *   }\n * });\n */\nasync function generate(config) {\n    return await detail.make_iframe_promise({\n        request: '[Generate][generate]',\n        config: config,\n    });\n}\n;\n/**\n * 不使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `ordered_prompts?:(BuiltinPrompt|RolePrompt)[]`: 一个提示词数组, 数组元素将会按顺序发给 ai, 因而相当于自定义预设\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n * @returns 生成的最终文本\n *\n * @example\n * // 自定义内置提示词顺序, 未在 ordered_prompts 中给出的将不会被使用\n\n * const result = await generateRaw({\n *   user_input: '你好',\n *   ordered_prompts: [\n *     'char_description',\n *     { role: 'system', content: '系统提示' },\n *     'chat_history',\n *     'user_input',\n *   ]\n * })\n */\nasync function generateRaw(config) {\n    return await detail.make_iframe_promise({\n        request: '[Generate][generateRaw]',\n        config: config,\n    });\n}\n;\n;\n;\n;\n/**\n * 预设为内置提示词设置的默认顺序\n */\nconst builtin_prompt_default_order = [\n    'world_info_before', // 世界书(角色定义前)\n    'persona_description', // 用户描述\n    'char_description', // 角色描述\n    'char_personality', // 角色性格\n    'scenario', // 场景\n    'world_info_after', // 世界书(角色定义后)\n    'dialogue_examples', // 对话示例\n    'chat_history', // 聊天历史 (含世界书中按深度插入的条目、作者注释)\n    'user_input', // 用户输入\n];\n"},"./src/iframe_client/index.ts":
/*!************************************!*\
  !*** ./src/iframe_client/index.ts ***!
  \************************************/(e,t,n)=>{n.r(t),n.d(t,{iframe_client:()=>a});const a=[n(/*! @/iframe_client/_impl?raw */"./src/iframe_client/_impl.ts?raw"),n(/*! @/iframe_client/_multimap?raw */"./src/iframe_client/_multimap.ts?raw"),n(/*! @/iframe_client/audio?raw */"./src/iframe_client/audio.ts?raw"),n(/*! @/iframe_client/character?raw */"./src/iframe_client/character.ts?raw"),n(/*! @/iframe_client/chat_message?raw */"./src/iframe_client/chat_message.ts?raw"),n(/*! @/iframe_client/displayed_message?raw */"./src/iframe_client/displayed_message.ts?raw"),n(/*! @/iframe_client/event?raw */"./src/iframe_client/event.ts?raw"),n(/*! @/iframe_client/exported?raw */"./src/iframe_client/exported.ts?raw"),n(/*! @/iframe_client/frontend_version?raw */"./src/iframe_client/frontend_version.ts?raw"),n(/*! @/iframe_client/generate?raw */"./src/iframe_client/generate.ts?raw"),n(/*! @/iframe_client/lorebook?raw */"./src/iframe_client/lorebook.ts?raw"),n(/*! @/iframe_client/lorebook_entry?raw */"./src/iframe_client/lorebook_entry.ts?raw"),n(/*! @/iframe_client/slash?raw */"./src/iframe_client/slash.ts?raw"),n(/*! @/iframe_client/tavern_regex?raw */"./src/iframe_client/tavern_regex.ts?raw"),n(/*! @/iframe_client/util?raw */"./src/iframe_client/util.ts?raw"),n(/*! @/iframe_client/variables?raw */"./src/iframe_client/variables.ts?raw")].join("\n")},"./src/iframe_client/lorebook.ts?raw":
/*!*******************************************!*\
  !*** ./src/iframe_client/lorebook.ts?raw ***!
  \*******************************************/e=>{e.exports='"use strict";\n// TODO: 没给接口做不到设置世界书全局设置, 服了\n// TODO: 查询哪些条目被激活?\n// TODO: 绑定/解绑世界书?\n;\n/**\n * 获取当前的世界书全局设置\n *\n * @returns 当前的世界书全局设置\n *\n * @example\n * // 获取全局启用的世界书\n * const settings = await getLorebookSettings();\n * alert(settings.selected_global_lorebooks);\n */\nasync function getLorebookSettings() {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][getLorebookSettings]",\n    });\n}\n/**\n * 修改世界书全局设置\n *\n * @returns 修改世界书全局设置\n *\n * @example\n * // 修改上下文百分比为 100%, 启用递归扫描\n * await setLorebookSettings({context_percentage: 100, recursive: true});\n *\n * @example\n * // setLorebookSettings 因为酒馆问题很慢, 建议先 getLorebookSetting, 进行比较, 再 setLorebookSettings\n * const expected_settings = { 预期设置 };\n * const settings = await getLorebookSettings();\n * if (_.isEqual(_.merge({}, settings, expected_settings), settings)) {\n *   setLorebookSettings(expected_settings);\n * }\n */\nasync function setLorebookSettings(settings) {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][setLorebookSettings]",\n        settings: settings,\n    });\n}\n;\n/**\n * 获取角色卡绑定的世界书\n *\n * @param option 可选选项\n *   - `name?:string`: 要查询的角色卡名称; 默认为当前角色卡\n *\n * @returns 角色卡绑定的世界书\n */\nasync function getCharLorebooks(option = {}) {\n    option = {\n        name: option.name,\n    };\n    return detail.make_iframe_promise({\n        request: "[Lorebook][getCharLorebooks]",\n        option: option\n    });\n}\n/**\n * 获取当前角色卡绑定的主要世界书\n *\n * @returns 如果当前角色卡有绑定并使用世界书 (地球图标呈绿色), 返回该世界书的名称; 否则返回 `null`\n */\nasync function getCurrentCharPrimaryLorebook() {\n    return (await getCharLorebooks()).primary;\n}\n/**\n * 将当前角色卡换为绑定 `lorebooks`\n *\n * @param lorebooks 要新绑定的世界书, 不指明 primary 或 additional 字段则表示不变\n */\nasync function setCurrentCharLorebooks(lorebooks) {\n    return detail.make_iframe_promise({\n        request: \'[Lorebook][setCurrentCharLorebooks]\',\n        lorebooks: lorebooks,\n    });\n}\n/**\n * 获取或创建当前聊天绑定的世界书\n *\n * @returns 聊天世界书的名称\n */\nasync function getOrCreateChatLorebook() {\n    return triggerSlashWithResult("/getchatbook");\n}\n/**\n * 获取世界书列表\n *\n * @returns 世界书名称列表\n */\nasync function getLorebooks() {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][getLorebooks]",\n    });\n}\n/**\n * 新建世界书\n *\n * @param lorebook 世界书名称\n *\n * @returns 是否成功创建, 如果已经存在同名世界书会失败\n */\nasync function createLorebook(lorebook) {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][createLorebook]",\n        lorebook: lorebook,\n    });\n}\n/**\n * 删除世界书\n *\n * @param lorebook 世界书名称\n * @returns 是否成功删除, 可能因世界书不存在等原因而失败\n */\nasync function deleteLorebook(lorebook) {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][deleteLorebook]",\n        lorebook: lorebook,\n    });\n    ;\n}\n'},"./src/iframe_client/lorebook_entry.ts?raw":
/*!*************************************************!*\
  !*** ./src/iframe_client/lorebook_entry.ts?raw ***!
  \*************************************************/e=>{e.exports='"use strict";\n;\n/**\n * 获取世界书中的条目信息. **请务必阅读示例**.\n *\n * @param lorebook 世界书名称\n * @param option 可选选项\n *   - `filter:\'none\'|LorebookEntry的一个子集`: 按照指定字段值筛选条目, 要求对应字段值包含制定的内容; 默认为不进行筛选.\n *                                       如 `{content: \'神乐光\'}` 表示内容中必须有 `\'神乐光\'`, `{type: \'selective\'}` 表示仅获取绿灯条目.\n *                                       由于实现限制, 只能做到这样的简单筛选; 如果需要更复杂的筛选, 请获取所有条目然后自己筛选.\n *\n * @returns 一个数组, 元素是各条目信息.\n *\n * @example\n * // 获取世界书中所有条目的所有信息\n * const entries = await getLorebookEntries("eramgt少女歌剧");\n *\n * @example\n * // 按内容筛选, content 中必须出现 `\'神乐光\'`\n * const entries = await getLorebookEntries("eramgt少女歌剧", {filter: {content: \'神乐光\'}})\n */\nasync function getLorebookEntries(lorebook, option = {}) {\n    option = {\n        filter: option.filter ?? \'none\',\n    };\n    return detail.make_iframe_promise({\n        request: "[LorebookEntry][getLorebookEntries]",\n        lorebook: lorebook,\n        option: option,\n    });\n}\n/**\n * 将条目信息修改回对应的世界书中, 如果某个字段不存在, 则该字段采用原来的值.\n *\n * 这只是修改信息, 不能创建新的条目, 因此要求条目必须已经在世界书中.\n *\n * @param lorebook 条目所在的世界书名称\n * @param entries 一个数组, 元素是各条目信息. 其中必须有 `uid`, 而其他字段可选.\n *\n * @example\n * const lorebook = "eramgt少女歌剧";\n *\n * // 你可以自己指定 uid 来设置\n * await setLorebookEntries(lorebook, [{uid: 0, comment: "新标题"}]);\n *\n * // 也可以用从 `getLorebookEntries` 获取的条目\n * const entries = await getLorebookEntries(lorebook);\n * entries[0].sticky = 5;\n * entries[1].enabled = false;\n * await setLorebookEntries(lorebook, [entries[0], entries[1]]);\n *\n * @example\n * const lorebook = "eramgt少女歌剧";\n *\n * // 禁止所有条目递归, 保持其他设置不变\n * const entries = await getLorebookEntries(lorebook);\n * // `...entry` 表示展开 `entry` 中的内容; 而 `prevent_recursion: true` 放在后面会覆盖或设置 `prevent_recursion` 字段\n * await setLorebookEntries(lorebook, entries.map(entry => ({ ...entry, prevent_recursion: true })));\n *\n * // 实际上我们只需要为条目指出它的 uid, 并设置 `prevent_recursion: true`\n * const entries = await getLorebookEntries(lorebook);\n * await setLorebookEntries(lorebook, entries.map(entry => ({ uid: entry.uid, prevent_recursion: true })));\n *\n * // 当然你也可以做一些更复杂的事, 比如不再是禁用, 而是反转开关\n * const entries = await getLorebookEntries(lorebook);\n * await setLorebookEntries(lorebook, entries.map(entry => ({ uid: entry.uid, prevent_recursion: !entry.prevent_recursion })));\n */\nasync function setLorebookEntries(lorebook, entries) {\n    return detail.make_iframe_promise({\n        request: "[LorebookEntry][setLorebookEntries]",\n        lorebook: lorebook,\n        entries: entries,\n    });\n}\n/**\n * 向世界书中新增一个条目\n *\n * @param lorebook 世界书名称\n * @param field_values 要对新条目设置的字段值, 如果不设置则采用酒馆给的默认值. **不能设置 `uid`**.\n *\n * @returns 新条目的 `uid`\n *\n * @example\n * const uid = await createLorebookEntry("eramgt少女歌剧", {comment: "revue", content: "歌唱吧跳舞吧相互争夺吧"});\n */\nasync function createLorebookEntry(lorebook, field_values) {\n    return detail.make_iframe_promise({\n        request: "[LorebookEntry][createLorebookEntry]",\n        lorebook: lorebook,\n        field_values: field_values,\n    });\n}\n/**\n * 删除世界书中的某个条目\n *\n * @param lorebook 世界书名称\n * @param uid 要删除的条目 uid\n *\n * @returns 是否成功删除, 可能因世界书不存在、对应条目不存在等原因失败\n */\nasync function deleteLorebookEntry(lorebook, uid) {\n    return detail.make_iframe_promise({\n        request: "[LorebookEntry][deleteLorebookEntry]",\n        lorebook: lorebook,\n        lorebook_uid: uid,\n    });\n}\n/**\n * 激活世界书中的某些条目, 即它们将发送给 ai\n *\n * @param lorebook 世界书名称\n * @param entries 一个数组, 元素是要激活的各条目, 必须包含 `uid`\n */\nasync function activateLorebookEntries(lorebook, entries) {\n    return eventEmit(tavern_events.WORLDINFO_FORCE_ACTIVATE, entries.map(entry => ({ world: lorebook, uid: entry.uid })));\n}\n;\n'},"./src/iframe_client/slash.ts?raw":
/*!****************************************!*\
  !*** ./src/iframe_client/slash.ts?raw ***!
  \****************************************/e=>{e.exports="\"use strict\";\n/**\n * 运行 Slash 命令, 注意如果命令写错了将不会有任何反馈.\n *\n * @param command 要运行的 Slash 命令\n *\n * @example\n * // 在酒馆界面弹出提示语 `hello!`\n * await triggerSlash('/echo hello!');\n */\nasync function triggerSlash(command) {\n    return detail.make_iframe_promise({\n        request: '[Slash][triggerSlash]',\n        command: command,\n    });\n}\n/**\n * 运行 Slash 命令, 并返回命令管道的结果.\n *\n * @param command 要运行的 Slash 命令\n * @returns Slash 管道结果, 如果命令出错或执行了 `/abort` 则返回 `undefined`\n *\n * @example\n * // 获取当前聊天消息最后一条消息对应的 id\n * const last_message_id = await triggerSlashWithResult('/pass {{lastMessageId}}');\n */\nasync function triggerSlashWithResult(command) {\n    return detail.make_iframe_promise({\n        request: '[Slash][triggerSlashWithResult]',\n        command: command,\n    });\n}\n"},"./src/iframe_client/tavern_regex.ts?raw":
/*!***********************************************!*\
  !*** ./src/iframe_client/tavern_regex.ts?raw ***!
  \***********************************************/e=>{e.exports="\"use strict\";\n/**\n * 判断酒馆局部正则是否被启用. 注意, 前端插件已经更新了 \"自动启用局部正则\" 选项, 所以你其实没必要用这个?\n *\n * 如果你是在局部正则中调用这个函数, **请保证\"在编辑时运行\"被启用**, 这样这个脚本才会无视局部正则开启情况而运行.\n *\n * @returns 局部正则是否被启用\n */\nasync function isCharacterTavernRegexEnabled() {\n    return detail.make_iframe_promise({\n        request: \"[TavernRegex][isCharacterTavernRegexesEnabled]\",\n    });\n}\n/**\n * 获取酒馆正则\n *\n * @param option 可选选项\n *   - `scope?:'all'|'global'|'character'`:         // 按所在区域筛选酒馆正则; 默认为 `'all'`\n *   - `enable_state?:'all'|'enabled'|'disabled'`:  // 按是否被开启筛选酒馆正则; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是酒馆正则 `TavernRegex`. 该数组依据正则作用于文本的顺序排序, 也就是酒馆显示正则的地方从上到下排列.\n *\n * @example\n * // 获取所有酒馆正则\n * const regexes = await getTavernRegexes();\n *\n * @example\n * // 获取当前角色卡目前被启用的局部正则\n * const regexes = await getTavernRegexes({scope: 'character', enable_state: 'enabled'});\n */\nasync function getTavernRegexes(option = {}) {\n    option = {\n        scope: option.scope ?? 'all',\n        enable_state: option.enable_state ?? 'all',\n    };\n    return detail.make_iframe_promise({\n        request: \"[TavernRegex][getTavernRegexes]\",\n        option: option,\n    });\n}\n/**\n * 完全替换酒馆正则为 `regexes`.\n * - **这是一个很慢的操作!** 尽量对正则做完所有事后再一次性 replaceTavernRegexes.\n * - **为了重新应用正则, 它会重新载入整个聊天消息**, 将会触发 `tavern_events.CHAT_CHANGED` 进而重新加载全局脚本和楼层消息.\n *     这意味着如果你在全局脚本中运行本函数, 则该函数之后的内容将不会被执行.\n *\n * 之所以提供这么直接的函数, 是因为你可能需要调换正则顺序等.\n *\n * @param regexes 要用于替换的酒馆正则\n * @param option 可选选项\n *   - scope?: 'all' | 'global' | 'character';  // 要替换的酒馆正则部分; 默认为 'all'\n *\n * @example\n * // 开启所有名字里带 \"舞台少女\" 的正则\n * let regexes = await getTavernRegexes();\n * regexes.forEach(regex => {\n *   if (regex.script_name.includes('舞台少女')) {\n *     regex.enabled = true;\n *   }\n * });\n * await replaceTavernRegexes(regexes);\n */\nasync function replaceTavernRegexes(regexes, option = {}) {\n    option = {\n        scope: option.scope ?? 'all',\n    };\n    return detail.make_iframe_promise({\n        request: '[TavernRegex][replaceTavernRegexes]',\n        regexes: regexes,\n        option: option,\n    });\n}\n/**\n * 用 `updater` 函数更新酒馆正则\n *\n * @param updater 用于更新酒馆正则的函数. 它应该接收酒馆正则作为参数, 并返回更新后的酒馆正则.\n * @param option 可选选项\n *   - scope?: 'all' | 'global' | 'character';  // 要替换的酒馆正则部分; 默认为 'all'\n *\n * @returns 更新后的酒馆正则\n *\n * @example\n * // 开启所有名字里带 \"舞台少女\" 的正则\n * await updateTavernRegexesWith(regexes => {\n *   regexes.forEach(regex => {\n *     if (regex.script_name.includes('舞台少女')) {\n *       regex.enabled = true;\n *     }\n *   });\n *   return regexes;\n * });\n */\nasync function updateTavernRegexesWith(updater, option = {}) {\n    const defaulted_option = {\n        scope: option.scope ?? 'all',\n    };\n    let regexes = await getTavernRegexes(defaulted_option);\n    regexes = await updater(regexes);\n    console.info(`[Chat Message][updateVariablesWith](${getIframeName()}) 用函数对${{ all: '全部', global: '全局', character: '局部' }[defaulted_option.scope]}变量表进行更新, 使用的函数:\\n\\n ${JSON.stringify(detail.format_function_to_string(updater))}`);\n    await replaceTavernRegexes(regexes, defaulted_option);\n    return regexes;\n}\n//----------------------------------------------------------------------------------------------------------------------\n// 已被弃用的接口, 请尽量按照指示更新它们\n/**\n * @deprecated 已弃用, 请使用 isCharacterTavernRegexEnabled\n */\nconst isCharacterRegexEnabled = isCharacterTavernRegexEnabled;\n/**\n * @deprecated 已弃用, 请使用 getTavernRegexes\n */\nconst getRegexData = getTavernRegexes;\n"},"./src/iframe_client/util.ts?raw":
/*!***************************************!*\
  !*** ./src/iframe_client/util.ts?raw ***!
  \***************************************/e=>{e.exports='"use strict";\n/**\n * 获取 iframe 的名称\n *\n * @returns 对于楼层消息是 `message-iframe-楼层id-是该楼层第几个iframe`; 对于全局脚本是 `script-iframe-脚本名称`\n */\nfunction getIframeName() {\n    return window.frameElement.id;\n}\n/**\n * 从消息楼层 iframe 的 `iframe_name` 获取它所在楼层的楼层 id, **只能对楼层消息 iframe** 使用\n *\n * @param iframe_name 消息楼层 iframe 的名称\n * @returns 楼层 id\n */\nfunction getMessageId(iframe_name) {\n    const match = iframe_name.match(/^message-iframe-(\\d+)-\\d+$/);\n    if (!match) {\n        throw Error(`获取 ${iframe_name} 所在楼层 id 时出错: 不要对全局脚本 iframe 调用 getMessageId!`);\n    }\n    return parseInt(match[1].toString());\n}\n/**\n * 获取本消息楼层 iframe 所在楼层的楼层 id, **只能对楼层消息 iframe** 使用\n *\n * @returns 楼层 id\n */\nfunction getCurrentMessageId() {\n    return getMessageId(getIframeName());\n}\n/**\n * 替换字符串中的酒馆宏\n *\n * @param text 要替换的字符串\n * @returns 替换结果\n *\n * @example\n * const text = substitudeMacros("{{char}} speaks in {{lastMessageId}}");\n * text == "少女歌剧 speaks in 5";\n */\nasync function substitudeMacros(text) {\n    // QUESTION: 像这样额外编写一个 request, 还是直接用 `await triggerSlashWithResult(\'/pass "{{char}} speaks in {{lastMessageId}}"\')`?\n    return detail.make_iframe_promise({\n        request: \'[Utils][substitudeMacros]\',\n        text: text,\n    });\n}\n/**\n * 获取最新楼层 id\n *\n * @returns 最新楼层id\n */\nasync function getLastMessageId() {\n    const result = await substitudeMacros("{{lastMessageId}}");\n    if (result === "") {\n        throw Error("[Util][getLastMessageId] 未找到任何消息楼层");\n    }\n    return parseInt(result);\n}\n/**\n * 生成唯一的 uuidv4 标识符\n *\n * @returns 唯一的 uuidv4 标识符\n */\nfunction generateUuidv4() {\n    return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, function (c) {\n        const r = Math.random() * 16 | 0;\n        const v = c === \'x\' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n/**\n * 包装 `fn` 函数，返回一个会将报错消息通过酒馆通知显示出来的同功能函数\n *\n * @param fn 要包装的函数\n * @returns 包装后的函数\n *\n * @example\n * // 包装 `test` 函数从而在酒馆通知中显示 \'test\' 文本\n * async function test() {\n *   throw Error(`test`);\n * }\n * errorCatched(test)();\n */\nfunction errorCatched(fn) {\n    const onError = (error) => {\n        triggerSlash(`/echo severity=error (${getIframeName()})${error.stack ? error.stack : error.name + \': \' + error.message}`);\n        throw error;\n    };\n    return (...args) => {\n        try {\n            const result = fn(...args);\n            if (result instanceof Promise) {\n                return result.catch(error => {\n                    onError(error);\n                });\n            }\n            return result;\n        }\n        catch (error) {\n            return onError(error);\n        }\n    };\n}\n'},"./src/iframe_client/variables.ts?raw":
/*!********************************************!*\
  !*** ./src/iframe_client/variables.ts?raw ***!
  \********************************************/e=>{e.exports="\"use strict\";\n;\n/**\n * 获取变量表\n *\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @returns 变量表\n *\n * @example\n * // 获取所有聊天变量并弹窗输出结果\n * const variables = await getVariables();\n * alert(variables);\n *\n * @example\n * // 获取所有全局变量\n * const variables = await getVariables({type: 'global'});\n * // 前端助手内置了 lodash 库, 你能用它做很多事, 比如查询某个变量是否存在\n * if (_.has(variables, \"神乐光.好感度\")) {\n *   ...\n * }\n */\nasync function getVariables(option = {}) {\n    option = {\n        type: option.type ?? 'chat',\n    };\n    return detail.make_iframe_promise({\n        request: \"[Variables][getVariables]\",\n        option: option,\n    });\n}\n/**\n * 完全替换变量表为 `variables`\n *\n * 之所以提供这么直接的函数, 是因为前端助手内置了 lodash 库:\n *   `insertOrAssignVariables` 等函数其实就是先 `getVariables` 获取变量表, 用 lodash 库处理, 再 `replaceVariables` 替换变量表.\n *\n * @param variables 要用于替换的变量表\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @example\n * // 执行前的聊天变量: `{爱城华恋: {好感度: 5}}`\n * await replaceVariables({神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后的聊天变量: `{神乐光: {好感度: 5, 认知度: 0}}`\n *\n * @example\n * // 删除 `{神乐光: {好感度: 5}}` 变量\n * let variables = await getVariables();\n * _.unset(variables, \"神乐光.好感度\");\n * await replaceVariables(variables);\n */\nasync function replaceVariables(variables, option = {}) {\n    option = {\n        type: option.type ?? 'chat',\n    };\n    return detail.make_iframe_promise({\n        request: \"[Variables][replaceVariables]\",\n        option: option,\n        variables: variables,\n    });\n}\n/**\n * 用 `updater` 函数更新变量表\n *\n * @param updater 用于更新变量表的函数. 它应该接收变量表作为参数, 并返回更新后的变量表.\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @returns 更新后的变量表\n *\n * @example\n * // 删除 `{神乐光: {好感度: 5}}` 变量\n * await updateVariablesWith(variables => {_.unset(variables, \"神乐光.好感度\"); return variables;});\n *\n * @example\n * // 更新 \"爱城华恋.好感度\" 为原来的 2 倍, 如果该变量不存在则设置为 0\n * await updateVariablesWith(variables => _.update(variables, \"爱城华恋.好感度\", value => value ? value * 2 : 0));\n */\nasync function updateVariablesWith(updater, option = {}) {\n    option = {\n        type: option.type ?? 'chat',\n    };\n    let variables = await getVariables(option);\n    variables = await updater(variables);\n    console.info(`[Chat Message][updateVariablesWith](${getIframeName()}) 用函数对${option.type === 'chat' ? `聊天` : `全局`}变量表进行更新, 使用的函数:\\n\\n ${JSON.stringify(detail.format_function_to_string(updater))}`);\n    await replaceVariables(variables, option);\n    return variables;\n}\n/**\n * 插入或修改变量值, 取决于变量是否存在.\n *\n * @param variables 要更新的变量\n *   - 如果变量不存在, 则新增该变量\n *   - 如果变量已经存在, 则修改该变量的值\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 聊天变量或全局变量, 默认为聊天变量 'chat'\n *\n * @example\n * // 执行前变量: `{爱城华恋: {好感度: 5}}`\n * await insertOrAssignVariables({爱城华恋: {好感度: 10}, 神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后变量: `{爱城华恋: {好感度: 10}, 神乐光: {好感度: 5, 认知度: 0}}`\n */\nasync function insertOrAssignVariables(variables, option = {}) {\n    await updateVariablesWith(old_variables => _.merge(old_variables, variables), option);\n}\n/**\n * 插入新变量, 如果变量已经存在则什么也不做\n *\n * @param variables 要插入的变量\n *   - 如果变量不存在, 则新增该变量\n *   - 如果变量已经存在, 则什么也不做\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 聊天变量或全局变量, 默认为聊天变量 'chat'\n *\n * @example\n * // 执行前变量: `{爱城华恋: {好感度: 5}}`\n * await insertVariables({爱城华恋: {好感度: 10}, 神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后变量: `{爱城华恋: {好感度: 5}, 神乐光: {好感度: 5, 认知度: 0}}`\n */\nasync function insertVariables(variables, option = {}) {\n    await updateVariablesWith(old_variables => _.defaultsDeep(old_variables, variables), option);\n}\n/**\n * 删除变量, 如果变量不存在则什么也不做\n *\n * @param variable_path 要删除的变量路径\n *   - 如果变量不存在, 则什么也不做\n *   - 如果变量已经存在, 则删除该变量\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 聊天变量或全局变量, 默认为聊天变量 'chat'\n *\n * @returns 是否成功删除变量\n *\n * @example\n * // 执行前变量: `{爱城华恋: {好感度: 5}}`\n * await deleteVariable(\"爱城华恋.好感度\");\n * // 执行后变量: `{爱城华恋: {}}`\n */\nasync function deleteVariable(variable_path, option = {}) {\n    let result = false;\n    await updateVariablesWith(old_variables => { result = _.unset(old_variables, variable_path); return old_variables; }, option);\n    return result;\n}\nasync function setVariables(message_id, new_or_updated_variables) {\n    let actual_message_id;\n    let actual_variables;\n    if (new_or_updated_variables) {\n        actual_message_id = message_id;\n        actual_variables = new_or_updated_variables;\n    }\n    else {\n        actual_message_id = getCurrentMessageId();\n        actual_variables = message_id;\n    }\n    if (typeof actual_message_id !== 'number' || typeof actual_variables !== 'object') {\n        console.error(\"[Variables][setVariables] 调用出错, 请检查你的参数类型是否正确\");\n        return;\n    }\n    return detail.make_iframe_promise({\n        request: \"[Variables][setVariables]\",\n        message_id: actual_message_id,\n        variables: actual_variables,\n    });\n}\n"},"./src/iframe_server/_impl.ts":
/*!************************************!*\
  !*** ./src/iframe_server/_impl.ts ***!
  \************************************/(e,t,n)=>{function a(e){const t=e.source;return t.frameElement?.id}function r(e){return`${e.data.request}(${a(e)}) `}n.r(t),n.d(t,{getIframeName:()=>a,getLogPrefix:()=>r,iframe_handlers:()=>s,registerIframeHandler:()=>i});const s={};function i(e,t){s[e]=t}},"./src/iframe_server/audio.ts":
/*!************************************!*\
  !*** ./src/iframe_server/audio.ts ***!
  \************************************/(e,t,n)=>{n.r(t),n.d(t,{registerIframeAudioHandler:()=>s});var a=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),r=n(/*! @/slash_command/audio */"./src/slash_command/audio.ts");function s(){(0,a.registerIframeHandler)("[Audio][audioMode]",(async e=>{const t=e.data.type,n=e.data.mode;await(0,r.audioMode)({type:t,mode:n}),console.info(`${(0,a.getLogPrefix)(e)} 切换音频模式: ${t}-${n}`)})),(0,a.registerIframeHandler)("[Audio][audioEnable]",(async e=>{const t=e.data.type,n=e.data.state;await(0,r.audioEnable)({type:t,state:n}),console.info(`${(0,a.getLogPrefix)(e)} 切换音频状态: ${t}-${n}`)})),(0,a.registerIframeHandler)("[Audio][audioPlay]",(async e=>{const t=e.data.type,n=e.data.play;await(0,r.audioPlay)({type:t,play:n}),console.info(`${(0,a.getLogPrefix)(e)} 切换音频播放状态: ${t}-${n}`)})),(0,a.registerIframeHandler)("[Audio][audioImport]",(async e=>{const t=e.data.type,n=e.data.url,s=e.data.play;await(0,r.audioImport)({type:t,play:s},n),console.info(`${(0,a.getLogPrefix)(e)} 导入音频: ${t}-${n}-${s}`)})),(0,a.registerIframeHandler)("[Audio][audioSelect]",(async e=>{const t=e.data.type,n=e.data.url;await(0,r.audioSelect)({type:t},n),console.info(`${(0,a.getLogPrefix)(e)} 选择音频: ${t}-${n}`)}))}},"./src/iframe_server/character.ts":
/*!****************************************!*\
  !*** ./src/iframe_server/character.ts ***!
  \****************************************/(e,t,n)=>{n.r(t),n.d(t,{Character:()=>i,registerIframeCharacterHandler:()=>o});var a=n(/*! @/component/message_iframe */"./src/component/message_iframe.ts"),r=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),s=n(/*! @sillytavern/script */"@sillytavern/script");class i{charData;constructor(e){this.charData=e}static find({name:e,allowAvatar:t=!0}={}){if(void 0===e){const n=s.characters[s.this_chid];n&&(e=n.avatar,t=!0)}let n=s.characters;if(t&&e){const t=n.find((t=>t.avatar===e));if(t)return t}const a=e?n.filter((n=>!e||n.name===e||t&&n.avatar===e)):n;if(a.length>1&&console.warn(`[Character] [findCharacter] 找到多个符合条件的角色，返回导入时间最早的角色: ${e}`),0===a.length)throw new Error(`[Character] [findCharacter] 提供的名称或头像ID为: ${e}，未找到符合条件的角色`);return a[0]}static findCharacterIndex(e){const t=[(e,t)=>e===t,(e,t)=>e.startsWith(t),(e,t)=>e.includes(t)],n=s.characters.findIndex((t=>t.avatar===e));if(-1!==n)return n;for(const n of t){const t=s.characters.findIndex((t=>n(t.name.toLowerCase(),e.toLowerCase())));if(-1!==t)return t}return-1}static async getChatsFromFiles(e,t){let n={},a=Object.values(e).sort(((e,t)=>e.file_name.localeCompare(t.file_name))).reverse().map((({file_name:e})=>new Promise((async(a,r)=>{try{const r=t?"":e.split(" - ")[0];let o=null,l="";!t&&r&&(o=i.find({name:r}),o&&(l=o.avatar));const c=t?"/api/chats/group/get":"/api/chats/get",d=t?JSON.stringify({id:e}):JSON.stringify({ch_name:r,file_name:e.replace(".jsonl",""),avatar_url:l}),m=await fetch(c,{method:"POST",headers:(0,s.getRequestHeaders)(),body:d,cache:"no-cache"});if(!m.ok)return a();const p=await m.json();t||p.shift(),n[e]=p}catch(e){console.error(e)}return a()}))));return await Promise.all(a),n}getCardData(){return this.charData}getAvatarId(){return this.charData.avatar||""}getRegexScripts(){return this.charData.data?.extensions?.regex_scripts||[]}getCharacterBook(){return this.charData.data?.character_book||null}getWorldName(){return this.charData.data?.extensions?.world||""}}function o(){function e(e,t,n=null,a){(0,r.registerIframeHandler)(e,(async e=>{const{name:o,allowAvatar:l=!0}=e.data;let c=o;if(void 0===c){const e=s.characters[s.this_chid];e&&(c=e.name)}const d=function(e,t=null,n,a=!0){const r=i.find({name:n,allowAvatar:a}),s=r?new i(r):null;return s?e(s):t}((n=>t(n,e)),n,o,l);if(a){const t=a(e,null,c);d instanceof Promise?d.then((n=>{console.info(`${(0,r.getLogPrefix)(e)}${t}`,n)})).catch((n=>{throw Error(`${(0,r.getLogPrefix)(e)}${t} - 发生错误: ${n}`)})):console.info(`${(0,r.getLogPrefix)(e)}${t}`,d)}return d}))}e("[Character][getCharData]",(e=>e.getCardData()),null,((e,t,n)=>`获取角色卡数据, 角色: ${n||"未知"}`)),e("[Character][getCharAvatarPath]",(e=>{const t=(0,s.getThumbnailUrl)("avatar",e.getAvatarId()),n=t.substring(t.lastIndexOf("=")+1);return a.charsPath+n}),null,((e,t,n)=>`获取角色头像路径, 角色: ${n||"未知"}`)),e("[Character][getChatHistoryBrief]",(async e=>{const t=i.findCharacterIndex(e.getAvatarId());return await(0,s.getPastCharacterChats)(t)}),null,((e,t,n)=>`获取角色聊天历史摘要, 角色: ${n||"未知"}`)),(0,r.registerIframeHandler)("[Character][getChatHistoryDetail]",(async e=>{const t=e.data.data,n=e.data.isGroupChat||!1;try{const a=await i.getChatsFromFiles(t,n);return console.info(`${(0,r.getLogPrefix)(e)}获取聊天文件详情`,a),a}catch(t){throw Error(`${(0,r.getLogPrefix)(e)}获取聊天文件详情 - 发生错误: ${t}`)}}))}},"./src/iframe_server/chat_message.ts":
/*!*******************************************!*\
  !*** ./src/iframe_server/chat_message.ts ***!
  \*******************************************/(e,t,n)=>{n.r(t),n.d(t,{registerIframeChatMessageHandler:()=>o});var a=n(/*! @/component/message_iframe */"./src/component/message_iframe.ts"),r=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),s=n(/*! @sillytavern/script */"@sillytavern/script"),i=n(/*! @sillytavern/scripts/utils */"@sillytavern/scripts/utils");function o(){(0,r.registerIframeHandler)("[ChatMessage][getChatMessages]",(async e=>{const t=(0,s.substituteParamsExtended)(e.data.range),n=(0,i.stringToRange)(t,0,s.chat.length-1),a=e.data.option;if(!n)throw Error(`提供的消息范围 range 无效: ${t}`);if(!["all","system","assistant","user"].includes(a.role))throw Error(`提供的 role 无效, 请提供 'all', 'system', 'assistant' 或 'user', 你提供的是: ${a.role}`);if(!["all","hidden","unhidden"].includes(a.hide_state))throw Error(`提供的 hide_state 无效, 请提供 'all', 'hidden' 或 'unhidden', 你提供的是: ${a.hide_state}`);const{start:o,end:l}=n,c=async t=>{const n=s.chat[t];if(!n)return console.warn(`${(0,r.getLogPrefix)(e)}没找到第 ${t} 楼的消息`),null;const i=(o=n,o.extra?.type===s.system_message_types.NARRATOR?o.is_user?"unknown":"system":o.is_user?"user":"assistant");var o;if("all"!==a.role&&i!==a.role)return console.debug(`${(0,r.getLogPrefix)(e)}筛去了第 ${t} 楼的消息因为它的身份不是 ${a.role}`),null;if("all"!==a.hide_state&&"hidden"===a.hide_state!==n.is_system)return console.debug(`${(0,r.getLogPrefix)(e)}筛去了第 ${t} 楼的消息因为它${"hidden"===a.hide_state?"":"没"} 被隐藏`),null;const l=n?.swipe_id??0,c=n?.swipes??[n.mes],d=n?.variables??[],m=d[l]??{};return{message_id:t,name:n.name,role:i,is_hidden:n.is_system,message:n.mes,data:m,swipe_id:l,swipes:c,swipes_data:d,is_user:n.is_user,is_system_or_hidden:n.is_system}},d=[];for(let e=n.start;e<=n.end;++e)d.push(c(e));const m=(await Promise.all(d)).filter((e=>null!==e));return console.info(`${(0,r.getLogPrefix)(e)}获取${o==l?`第 ${o} `:` ${o}-${l} `}楼的消息, 选项: ${JSON.stringify(a)} `),m})),(0,r.registerIframeHandler)("[ChatMessage][setChatMessage]",(async e=>{const t=e.data.field_values,n=e.data.message_id,i=e.data.option;if("number"!=typeof i.swipe_id&&"current"!==i.swipe_id)throw Error(`提供的 swipe_id 无效, 请提供 'current' 或序号, 你提供的是: ${i.swipe_id} `);if(!["none","display_current","display_and_render_current","all"].includes(i.refresh))throw Error(`提供的 refresh 无效, 请提供 'none', 'display_current', 'display_and_render_current' 或 'all', 你提供的是: ${i.refresh} `);const o=s.chat[n];if(!o)return void console.warn(`${(0,r.getLogPrefix)(e)}未找到第 ${n} 楼的消息`);const l=o.swipe_id??0,c="current"==i.swipe_id?l:i.swipe_id,d="none"!=i.refresh?c:l,m=t.message??(o.swipes?o.swipes[c]:void 0)??o.mes,p=(()=>{if("current"===i.swipe_id)return!1;if(0==i.swipe_id||o.swipes&&i.swipe_id<o.swipes.length)return!0;o.swipes||(o.swipe_id=0,o.swipes=[o.mes],o.swipe_info=[{}]);for(let e=o.swipes.length;e<=i.swipe_id;++e)o.swipes.push(""),o.swipe_info.push({});return!0})();await(async()=>{const e=(0,s.substituteParamsExtended)(m);t.data&&(o.variables||(o.variables=[]),await s.eventSource.emit("variables_updated","message",o.variables[c]??{},t.data,{message_id:n,swipe_id:c}),o.variables[c]=t.data),o.swipes&&(o.swipes[c]=e,o.swipe_id=d),d===c&&(o.mes=e)})(),"all"==i.refresh?await(0,s.reloadCurrentChat)():((e=>{const t=$(`div.mes[mesid = "${n}"]`);t&&(e&&t.find(".swipes-counter").text(`${d+1}​/​${o.swipes.length}`),"none"!=i.refresh&&(t.find(".mes_text").empty().append((0,s.messageFormatting)(m,o.name,o.is_system,o.is_user,n)),"display_and_render_current"==i.refresh&&(0,a.handlePartialRender)(`${n}`)))})(p),await(0,s.saveChatConditional)()),console.info(`${(0,r.getLogPrefix)(e)}设置第 ${n} 楼消息, 选项: ${JSON.stringify(i)}, 设置前使用的消息页: ${l}, 设置的消息页: ${c}, 现在使用的消息页: ${d} `)}))}},"./src/iframe_server/displayed_message.ts":
/*!************************************************!*\
  !*** ./src/iframe_server/displayed_message.ts ***!
  \************************************************/(e,t,n)=>{n.r(t),n.d(t,{registerIframeDisplayedMessageHandler:()=>i});var a=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),r=n(/*! @sillytavern/script */"@sillytavern/script"),s=n(/*! @sillytavern/scripts/macros */"@sillytavern/scripts/macros");function i(){(0,a.registerIframeHandler)("[DisplayedMessage][formatAsDisplayedMessage]",(async e=>{const t=e.data.text,n=e.data.option;if("number"!=typeof n.message_id&&!["last","last_user","last_char"].includes(n.message_id))throw Error(`提供的 message_id 无效, 请提供 'last', 'last_user', 'last_char' 或楼层消息号, 你提供的是: ${n.message_id}`);const i=(0,s.getLastMessageId)();if(null===i)throw Error(`未找到任何消息楼层, 你提供的是: ${n.message_id}`);switch(n.message_id){case"last":n.message_id=i;break;case"last_user":const e=(0,s.getLastMessageId)({filter:e=>e.is_user&&!e.is_system});if(null===e)throw Error(`未找到任何 user 消息楼层, 你提供的是: ${n.message_id}`);n.message_id=e;break;case"last_char":const t=(0,s.getLastMessageId)({filter:e=>!e.is_user&&!e.is_system});if(null===t)throw Error(`未找到任何 char 消息楼层, 你提供的是: ${n.message_id}`);n.message_id=t}if(n.message_id<0||n.message_id>i)throw Error(`提供的 message_id 不在 [0, ${i}] 内, 你提供的是: ${n.message_id} `);const o=r.chat[n.message_id],l=(0,r.messageFormatting)(t,o.name,o.is_system,o.is_user,n.message_id);return console.info(`${(0,a.getLogPrefix)(e)}将字符串处理为酒馆用于显示的 html 格式, 字符串: '${t}', 选项: '${JSON.stringify(n)}', 结果: '${l}'`),l}))}},"./src/iframe_server/frontend_version.ts":
/*!***********************************************!*\
  !*** ./src/iframe_server/frontend_version.ts ***!
  \***********************************************/(e,t,n)=>{n.r(t),n.d(t,{registerIframeFrontendVersionHandler:()=>i});var a=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),r=n(/*! @sillytavern/script */"@sillytavern/script"),s=n(/*! @sillytavern/scripts/i18n */"@sillytavern/scripts/i18n");function i(){(0,a.registerIframeHandler)("[FrontendVersion][updateFrontendVersion]",(async e=>{const t=await fetch("/api/extensions/update",{method:"POST",headers:(0,r.getRequestHeaders)(),body:JSON.stringify({extensionName:"JS-Slash-Runner"})});if(!t.ok){const n=await t.text();return toastr.error(n||t.statusText,s.t`更新前端助手失败`,{timeOut:5e3}),console.error(`${(0,a.getLogPrefix)(e)}更新前端助手失败: ${n}`),!1}const n=await t.json();return n.isUpToDate?console.info(`${(0,a.getLogPrefix)(e)}前端助手已是最新版本, 无需更新`):(toastr.success(s.t`成功更新前端助手为 ${n.shortCommitHash}`,s.t`请刷新页面`),console.info(`${(0,a.getLogPrefix)(e)}成功更新前端助手为  ${n.shortCommitHash}, 请刷新页面`)),!0}))}},"./src/iframe_server/generate.ts":
/*!***************************************!*\
  !*** ./src/iframe_server/generate.ts ***!
  \***************************************/(e,n,a)=>{a.r(n),a.d(n,{registerIframeGenerateHandler:()=>N});var r=a(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),s=a(/*! @sillytavern/script */"@sillytavern/script"),i=a(/*! @sillytavern/scripts/authors-note */"@sillytavern/scripts/authors-note"),o=a(/*! @sillytavern/scripts/extensions */"@sillytavern/scripts/extensions"),l=a(/*! @sillytavern/scripts/extensions/regex/engine */"@sillytavern/scripts/extensions/regex/engine"),c=a(/*! @sillytavern/scripts/openai */"@sillytavern/scripts/openai"),d=a(/*! @sillytavern/scripts/power-user */"@sillytavern/scripts/power-user"),m=a(/*! @sillytavern/scripts/PromptManager */"@sillytavern/scripts/PromptManager"),p=a(/*! @sillytavern/scripts/utils */"@sillytavern/scripts/utils"),u=a(/*! @sillytavern/scripts/world-info */"@sillytavern/scripts/world-info");let _=new AbortController;function g(e){return{world_info_before:e.world_info_before,persona_description:e.persona_description,char_description:e.char_description,char_personality:e.char_personality,scenario:e.scenario,world_info_after:e.world_info_after,dialogue_examples:e.dialogue_examples,with_depth_entries:e.chat_history?.with_depth_entries,author_note:e.chat_history?.author_note,chat_history:e.chat_history?.prompts}}function f(e){return{role:e.role,content:e.content,position:{before_prompt:"BEFORE_PROMPT",in_chat:"IN_CHAT",after_prompt:"IN_PROMPT",none:"NONE"}[e.position],depth:e.depth,scan:e.should_scan}}const h="quiet",v=!1,y={NONE:-1,DEFAULT:0,COMPLETION:1,CONTENT:2},b={system:s.extension_prompt_roles.SYSTEM,user:s.extension_prompt_roles.USER,assistant:s.extension_prompt_roles.ASSISTANT},w=["world_info_before","persona_description","char_description","char_personality","scenario","world_info_after","dialogue_examples","chat_history","user_input"];class x{generator;stoppingStrings;result;isStopped;isFinished;abortController;messageBuffer;constructor(){this.result="",this.messageBuffer="",this.isStopped=!1,this.isFinished=!1,this.generator=this.nullStreamingGeneration,this.abortController=new AbortController}onProgressStreaming(e,t){const n=e.slice(this.messageBuffer.length);this.messageBuffer=e;let a=(0,s.cleanUpMessage)(n,!1,!1,!t,this.stoppingStrings);const r=["*",'"',"```"];for(const e of r)if(!t&&(0,s.isOdd)((0,s.countOccurrences)(a,e))){const t=e.length>1?"\n":"";a=a.trimEnd()+t+e}if(s.eventSource.emit("js_stream_token_received_fully",e),s.eventSource.emit("js_stream_token_received_incrementally",a),t){const t=(0,s.cleanUpMessage)(e,!1,!1,!1,this.stoppingStrings);s.eventSource.emit("js_generation_ended",t)}}onErrorStreaming(){this.abortController&&this.abortController.abort(),this.isStopped=!0,C(),(0,s.saveChatConditional)()}async*nullStreamingGeneration(){throw Error("Generation function for streaming is not hooked up")}async generate(){try{const e=new p.Stopwatch(1e3/d.power_user.streaming_fps),t=[];for await(const{text:n}of this.generator()){if(t.push(Date.now()),this.isStopped)return void(this.messageBuffer="");this.result=n,await e.tick((()=>this.onProgressStreaming(n,!1)))}this.isStopped?this.messageBuffer="":this.onProgressStreaming(this.result,!0);const n=(t[t.length-1]-t[0])/1e3;console.warn(`Stream stats: ${t.length} tokens, ${n.toFixed(2)} seconds, rate: ${Number(t.length/n).toFixed(2)} TPS`)}catch(e){if(!this.isFinished)throw this.onErrorStreaming(),Error(`Generate method error: ${e}`);return this.messageBuffer="",this.result}return this.isFinished=!0,this.result}}async function E({user_input:e="",use_preset:n=!0,image:a=null,overrides:r,max_chat_history:p,inject:g=[],order:f,stream:E=!1}={}){_=new AbortController;const N=function(e,t){""===e&&(e=t.send_if_empty.trim());return(0,l.getRegexedString)(e,l.regex_placement.USER_INPUT,{isPrompt:!0,depth:0})}((0,s.substituteParams)(e),c.oai_settings)||"",M=await async function(e,t){const n=t=>{if(e.overrides)return e.overrides[t]};I("chat_history",e)||function(){const e=(0,s.baseChatReplace)(s.characters[s.this_chid]?.data?.extensions?.depth_prompt?.prompt?.trim(),s.name1,s.name2)||"",t=s.characters[s.this_chid]?.data?.extensions?.depth_prompt?.depth??"4",n=(0,s.getExtensionPromptRoleByName)(s.characters[s.this_chid]?.data?.extensions?.depth_prompt?.role??"system");(0,s.setExtensionPrompt)("DEPTH_PROMPT",e,s.extension_prompt_types.IN_CHAT,t,o.extension_settings.note.allowWIScan,n)}();I("chat_history",e)||I("author_note",e)||function(e){const t=e?.overrides?.author_note;let n=t??$("#extension_floating_prompt").val();(0,s.setExtensionPrompt)(i.NOTE_MODULE_NAME,n,s.chat_metadata[i.metadata_keys.position],s.chat_metadata[i.metadata_keys.depth],o.extension_settings.note.allowWIScan,s.chat_metadata[i.metadata_keys.role])}(e);I("chat_history",e)||I("persona_description",e)||function(){const e=d.power_user.persona_description,t="PERSONA_DESCRIPTION";if((0,s.setExtensionPrompt)(t,"",s.extension_prompt_types.IN_PROMPT,0),!e||d.power_user.persona_description_position===d.persona_description_positions.NONE)return;if([d.persona_description_positions.BOTTOM_AN,d.persona_description_positions.TOP_AN].includes(d.power_user.persona_description_position)&&i.shouldWIAddPrompt){const t=(0,o.getContext)().extensionPrompts[i.NOTE_MODULE_NAME].value,n=d.power_user.persona_description_position===d.persona_description_positions.TOP_AN?`${e}\n${t}`:`${t}\n${e}`;(0,s.setExtensionPrompt)(i.NOTE_MODULE_NAME,n,s.chat_metadata[i.metadata_keys.position],s.chat_metadata[i.metadata_keys.depth],o.extension_settings.note.allowWIScan,s.chat_metadata[i.metadata_keys.role])}d.power_user.persona_description_position===d.persona_description_positions.AT_DEPTH&&(0,s.setExtensionPrompt)(t,e,s.extension_prompt_types.IN_CHAT,d.power_user.persona_description_depth,!0,d.power_user.persona_description_role)}();const{description:a,personality:r,persona:m,scenario:p,mesExamples:_,system:g,jailbreak:f}=(0,s.getCharacterCardFields)(),y=I("char_description",e)?"":n("char_description")??a,w=I("char_personality",e)?"":n("char_personality")??r,x=I("persona_description",e)?"":n("persona_description")??m,E=I("scenario",e)?"":n("scenario")??p;let A=S(I("dialogue_examples",e)?"":n("dialogue_examples")??_),C=[];C=(0,c.setOpenAIMessageExamples)(A);const{promptBias:T}=(0,s.getBiasStrings)(t,h);e.inject&&await async function(e){if(!e||!Array.isArray(e.inject))return;const t=e.inject,n={IN_PROMPT:s.extension_prompt_types.IN_PROMPT,IN_CHAT:s.extension_prompt_types.IN_CHAT,BEFORE_PROMPT:s.extension_prompt_types.BEFORE_PROMPT,NONE:s.extension_prompt_types.NONE};for(const e of t){const t={role:b[e.role]??s.extension_prompt_roles.SYSTEM,content:e.content||"",depth:Number(e.depth)||0,scan:Boolean(e.scan)||!0,position:n[e.position]??s.extension_prompt_types.IN_CHAT};(0,s.setExtensionPrompt)(`INJECTION-${e.depth}-${e.role}`,t.content,t.position,t.depth,t.scan,t.role)}}(e);let N=[];e.overrides?.chat_history?N=[...e.overrides.chat_history].reverse():(N=(0,c.setOpenAIMessages)(await async function(e){let t=e.filter((e=>!e.is_system));return await Promise.all(t.map((async(e,n)=>{let a=e.mes,r=e.is_user?l.regex_placement.USER_INPUT:l.regex_placement.AI_OUTPUT,s=(0,l.getRegexedString)(a,r,{isPrompt:!0,depth:t.length-n-1});return{...e,mes:s,index:n}})))}(s.chat)),void 0!==e.max_chat_history&&(N=N.slice(0,e.max_chat_history)));M=t,(0,s.setExtensionPrompt)("TEMP_USER_MESSAGE",M,s.extension_prompt_types.IN_PROMPT,0,!0,1);var M;const R=await async function(e,t){const n=e.filter((e=>"system"!==e.role)).map((e=>{const t="user"===e.role?s.name1:s.name2;return u.world_info_include_names?`${t}: ${e.content}`:e.content})).reverse(),a=(0,s.getMaxContextSize)(),{worldInfoString:r,worldInfoBefore:i,worldInfoAfter:o,worldInfoExamples:l,worldInfoDepth:c}=await(0,u.getWorldInfoPrompt)(n,a,v);await k(["customDepthWI"]),I("with_depth_entries",t)||function(e){Array.isArray(e)&&e.forEach((e=>{const t=e.entries.join("\n");(0,s.setExtensionPrompt)(`customDepthWI-${e.depth}-${e.role}`,t,s.extension_prompt_types.IN_CHAT,e.depth,!1,e.role)}))}(c);const d=I("world_info_before",t)?null:void 0!==t.overrides?.world_info_before?t.overrides.world_info_before:i,m=I("world_info_after",t)?null:void 0!==t.overrides?.world_info_after?t.overrides.world_info_after:o;return{worldInfoString:r,worldInfoBefore:d,worldInfoAfter:m,worldInfoExamples:l,worldInfoDepth:I("with_depth_entries",t)?null:c}}(N,e);return function(){(0,s.setExtensionPrompt)("TEMP_USER_MESSAGE","",s.extension_prompt_types.IN_PROMPT,0,!0,1)}(),A=I("dialogue_examples",e)?[]:await async function(e,t){for(const n of t){if(!n.content.length)continue;const t=S((0,s.baseChatReplace)(n.content,s.name1,s.name2));n.position===u.wi_anchor_position.before?e.unshift(...t):e.push(...t)}return e}(A,R.worldInfoExamples),{characterInfo:{description:y,personality:w,persona:x,scenario:E,system:g,jailbreak:f},chatContext:{oaiMessages:N,oaiMessageExamples:C,promptBias:T},worldInfo:R}}({overrides:r,max_chat_history:p,inject:g,order:f},N),R=n?await async function(e,t,n){let a=null;try{const r=n?.overrides?.scenario;r&&s.characters&&s.characters[s.this_chid]&&(a=s.characters[s.this_chid].scenario||null,s.characters[s.this_chid].scenario=r);const i={role:"user",content:t};n.image&&(i.image=await T(n.image)),e.chatContext.oaiMessages.unshift(i);const l={name2:s.name2,charDescription:e.characterInfo.description,charPersonality:e.characterInfo.personality,Scenario:e.characterInfo.scenario,worldInfoBefore:e.worldInfo.worldInfoBefore,worldInfoAfter:e.worldInfo.worldInfoAfter,extensionPrompts:(0,o.getContext)().extensionPrompts,bias:e.chatContext.promptBias,type:"normal",quietPrompt:"",quietImage:null,cyclePrompt:"",systemPromptOverride:e.characterInfo.system,jailbreakPromptOverride:e.characterInfo.jailbreak,personaDescription:e.characterInfo.persona,messages:e.chatContext.oaiMessages,messageExamples:e.chatContext.oaiMessageExamples},[d]=await(0,c.prepareOpenAIMessages)(l,v);return{prompt:d}}finally{null!==a&&s.characters&&s.characters[s.this_chid]&&(s.characters[s.this_chid].scenario=a)}}(M,N,{image:a,overrides:r,max_chat_history:p,inject:g,order:f}):await async function(e,t,n){const a=new c.ChatCompletion;a.setTokenBudget(c.oai_settings.openai_max_context,c.oai_settings.openai_max_tokens),a.reserveBudget(3);const r=t.order||w,l=r.reduce(((e,t,n)=>("string"==typeof t?e[t.toLowerCase()]=n:"object"==typeof t&&(e[`custom_prompt_${n}`]=n),e)),{}),{systemPrompts:p,dialogue_examples:u}=await async function(e,t){const n=new m.PromptCollection,a=new c.MessageCollection("dialogue_examples"),r=(t.order||w).map(((e,t)=>{if("object"==typeof e&&e.role&&e.content){return{identifier:`custom_prompt_${t}`,role:e.role,content:e.content}}return null})).filter((e=>null!==e));for(const e of r)n.add(new m.Prompt({identifier:e.identifier,role:e.role,content:e.content,system_prompt:"system"===e.role}));const s=[{id:"char_description",content:e.characterInfo.description,role:"system"},{id:"char_personality",content:e.characterInfo.personality,role:"system"},{id:"scenario",content:e.characterInfo.scenario,role:"system"}];s.forEach((e=>{e.content&&n.add(new m.Prompt({identifier:e.id,role:e.role,content:e.content,system_prompt:!0}))})),d.power_user.persona_description&&d.power_user.persona_description_position===d.persona_description_positions.IN_PROMPT&&n.add(new m.Prompt({identifier:"persona_description",role:"system",content:e.characterInfo.persona,system_prompt:!0}));e.worldInfo.world_info_before&&n.add(new m.Prompt({identifier:"world_info_before",role:"system",content:e.worldInfo.world_info_before,system_prompt:!0}));e.worldInfo.world_info_after&&n.add(new m.Prompt({identifier:"world_info_after",role:"system",content:e.worldInfo.world_info_after,system_prompt:!0}));if(e.chatContext.oaiMessageExamples.length>0)for(const t of[...e.chatContext.oaiMessageExamples]){const n=e.chatContext.oaiMessageExamples.indexOf(t),r=[];for(let e=0;e<t.length;e++){const a=t[e],s="system",i=a.content||"",o=`dialogue_examples ${n}-${e}`,l=await c.Message.createAsync(s,i,o);await l.setName(a.name),r.push(l)}for(const e of r)a.add(e)}return{systemPrompts:n,dialogue_examples:a}}(e,t),_=async(e,t)=>{if("object"==typeof e){const n=new c.MessageCollection(`custom_prompt_${t}`),r=await c.Message.createAsync(e.role,e.content,`custom_prompt_${t}`);n.add(r),a.add(n,t)}else if(p.has(e)){const t=p.get(e),n=new c.MessageCollection(e),r=await c.Message.fromPromptAsync(t);n.add(r),a.add(n,l[e])}};for(const[e,n]of r.entries())"string"==typeof n?I(n,t)||await _(n,e):"object"==typeof n&&n.role&&n.content&&await _(n,e);const g=r.findIndex((e=>"string"==typeof e&&"dialogue_examples"===e.toLowerCase()));-1===g||I("dialogue_examples",t)||a.add(u,g);const f=await c.Message.createAsync("user",n,"user_input");a.reserveBudget(f),await async function(e,t,n,a){const r=t.order||w,l=r.findIndex((e=>"string"==typeof e&&"chat_history"===e.toLowerCase())),p=r.findIndex((e=>"string"==typeof e&&"user_input"===e.toLowerCase())),u=-1!==p,_=-1!==l,g=I("chat_history",t),f=await c.Message.createAsync("user",a,"user_input");t.image&&u&&await f.addImage(await T(t.image));if(g||!_){const e=u?p:r.length;return void n.add(new c.MessageCollection("user_input",f),e)}const h=new c.MessageCollection("chat_history"),v=c.oai_settings.new_chat_prompt,b=await c.Message.createAsync("system",(0,s.substituteParams)(v),"newMainChat");n.reserveBudget(b),h.add(b);const x=e.chatContext.oaiMessages[e.chatContext.oaiMessages.length-1],E=await c.Message.createAsync("user",c.oai_settings.send_if_empty,"emptyUserMessageReplacement");x&&"assistant"===x.role&&c.oai_settings.send_if_empty&&n.canAfford(E)&&h.add(E);if(!u){const n={role:"user",content:a,identifier:"user_input",image:t.image?await T(t.image):void 0};e.chatContext.oaiMessages.unshift(n)}const $=(await async function(e,t=[]){let n=[...e],a=0;const r=[],l=(0,o.getContext)().extensionPrompts[i.NOTE_MODULE_NAME];l&&l.value&&r.push({role:A(l.role),content:l.value,identifier:"authorsNote",injection_depth:l.depth,injected:!0});d.power_user.persona_description&&d.power_user.persona_description_position===d.persona_description_positions.AT_DEPTH&&r.push({role:"system",content:d.power_user.persona_description,identifier:"persona_description",injection_depth:d.power_user.persona_description_depth,injected:!0});if(Array.isArray(t))for(const e of t)r.push({identifier:`INJECTION-${e.role}-${e.depth}`,role:e.role,content:e.content,injection_depth:e.depth||0,injected:!0});for(let e=0;e<=s.MAX_INJECTION_DEPTH;e++){const t=r.filter((t=>t.injection_depth===e&&t.content)),s=["system","user","assistant"],i=[],o="\n";for(const e of s){const n=t.filter((t=>t.role===e)).map((e=>e.content.trim())).join(o);n&&i.push({role:e,content:n,injected:!0})}if(i.length){const t=e+a;n.splice(t,0,...i),a+=i.length}}return n}(e.chatContext.oaiMessages,t.inject)).reverse(),S=(0,c.isImageInliningSupported)(),C=[...$];for(const e of C){const t=new m.Prompt(e);t.identifier="chat_history-"+($.length-C.indexOf(e)),t.content=(0,s.substituteParams)(t.content);const a=await c.Message.fromPromptAsync(t),r=(0,c.setupChatCompletionPromptManager)();if(r.serviceSettings.names_behavior===y.COMPLETION&&t.name){const e=r.isValidName(t.name)?t.name:r.sanitizeName(t.name);await a.setName(e)}if(S&&e.image&&await a.addImage(e.image),!n.canAfford(a))break;h.add(a)}n.freeBudget(b),u?(n.add(h,l),n.add(new c.MessageCollection("user_input",f),p)):n.add(h,l)}(e,t,a,n),a.freeBudget(f),c.oai_settings.squash_system_messages&&await a.squashSystemMessages();return{prompt:a.getChat()}}(M,{image:a,overrides:r,max_chat_history:p,inject:g,order:f},N);return console.log("[Generate:发送提示词]",R),await async function(e,n=!1){let a="";try{if((0,s.deactivateSendButtons)(),n){let t=c.oai_settings.stream_openai;t||(c.oai_settings.stream_openai=!0,(0,s.saveSettingsDebounced)());const n=new x;n.generator=await(0,c.sendOpenAIRequest)("normal",e.prompt,_.signal),a=await n.generate(),t!==c.oai_settings.stream_openai&&(c.oai_settings.stream_openai=t,(0,s.saveSettingsDebounced)())}else{s.eventSource.emit("js_generation_started");const n=await(0,c.sendOpenAIRequest)(h,e.prompt,_.signal);a=await async function(e){if(!e)throw Error("未得到响应");if(e.error)throw e?.response&&toastr.error(e.response,t`API Error`,{preventDuplicates:!0}),Error(e?.response);const n=function(e){if("string"==typeof e)return e;return e?.choices?.[0]?.message?.content??e?.choices?.[0]?.text??e?.text??e?.message?.content?.[0]?.text??e?.message?.tool_plan??""}(e);return s.eventSource.emit("js_generation_ended",n),n}(n)}}catch(e){throw e}finally{C(),await k(["INJECTION"])}return a}(R,E)}function S(e){if(0===e.length||"<START>"===e)return[];e.startsWith("<START>")||(e="<START>\n"+e.trim());return e.split(/<START>/gi).slice(1).map((e=>`<START>\n${e.trim()}\n`))}function A(e){switch(e){case s.extension_prompt_roles.SYSTEM:return"system";case s.extension_prompt_roles.USER:return"user";case s.extension_prompt_roles.ASSISTANT:return"assistant";default:return"system"}}function C(){(0,s.activateSendButtons)(),(0,s.showSwipeButtons)(),(0,s.setGenerationProgress)(0),(0,d.flushEphemeralStoppingStrings)()}async function k(e){const t=(0,o.getContext)().extensionPrompts;Object.keys(t).filter((t=>e.some((e=>t.startsWith(e))))).forEach((e=>delete t[e])),await(0,s.saveChatConditional)()}async function T(e){return e instanceof File?await(0,p.getBase64Async)(e):e}function I(e,t){if(!t.overrides)return!1;if("with_depth_entries"===e)return!1===t.overrides.with_depth_entries;if("chat_history"===e){const e=t.overrides.chat_history;return void 0!==e&&0===e.length}const n=t.overrides[e];return void 0!==n&&""===n}function N(){(0,r.registerIframeHandler)("[Generate][generate]",(async e=>{const t=(0,r.getIframeName)(e),n=e.data.config;console.info(`${(0,r.getLogPrefix)(e)}(${t}) 发送生成请求: ${n}`);const a=function(e){return{user_input:e.user_input,use_preset:!0,image:e.image,stream:e.should_stream??!1,overrides:void 0!==e.overrides?g(e.overrides):void 0,inject:void 0!==e.injects?e.injects.map(f):void 0,max_chat_history:"number"==typeof e.max_chat_history?e.max_chat_history:void 0}}(n);return await E(a)})),(0,r.registerIframeHandler)("[Generate][generateRaw]",(async e=>{const t=(0,r.getIframeName)(e),n=e.data.config;console.info(`${(0,r.getLogPrefix)(e)}(${t}) 发送生成请求: ${n}`);const a=function(e){return{user_input:e.user_input,use_preset:!1,image:e.image,stream:e.should_stream??!1,max_chat_history:"number"==typeof e.max_chat_history?e.max_chat_history:void 0,overrides:e.overrides?g(e.overrides):void 0,inject:e.injects?e.injects.map(f):void 0,order:e.ordered_prompts}}(n);return await E(a)}))}$(document).on("click","#mes_stop",(function(){(0,s.stopGeneration)()&&(_&&_.abort("Clicked stop button"),C())}))},"./src/iframe_server/index.ts":
/*!************************************!*\
  !*** ./src/iframe_server/index.ts ***!
  \************************************/(e,t,n)=>{n.r(t),n.d(t,{handleIframe:()=>h});var a=n(/*! @/iframe_server/audio */"./src/iframe_server/audio.ts"),r=n(/*! @/iframe_server/character */"./src/iframe_server/character.ts"),s=n(/*! @/iframe_server/chat_message */"./src/iframe_server/chat_message.ts"),i=n(/*! @/iframe_server/displayed_message */"./src/iframe_server/displayed_message.ts"),o=n(/*! @/iframe_server/frontend_version */"./src/iframe_server/frontend_version.ts"),l=n(/*! @/iframe_server/generate */"./src/iframe_server/generate.ts"),c=n(/*! @/iframe_server/lorebook */"./src/iframe_server/lorebook.ts"),d=n(/*! @/iframe_server/lorebook_entry */"./src/iframe_server/lorebook_entry.ts"),m=n(/*! @/iframe_server/slash */"./src/iframe_server/slash.ts"),p=n(/*! @/iframe_server/tavern_regex */"./src/iframe_server/tavern_regex.ts"),u=n(/*! @/iframe_server/util */"./src/iframe_server/util.ts"),_=n(/*! @/iframe_server/variables */"./src/iframe_server/variables.ts"),g=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),f=n(/*! @sillytavern/scripts/i18n */"@sillytavern/scripts/i18n");async function h(e){if(!e.data)return;const t=g.iframe_handlers[e.data.request];if(!t)return;let n;try{n=await t(e)}catch(t){const n=t;toastr.error(f.t`${(0,g.getLogPrefix)(e)}${n.name+": "+n.message}${n.stack?n.stack:""}`),console.error((0,g.getLogPrefix)(e),n)}finally{e.source.postMessage({request:e.data.request+"_callback",uid:e.data.uid,result:n},{targetOrigin:"*"})}}(0,s.registerIframeChatMessageHandler)(),(0,i.registerIframeDisplayedMessageHandler)(),(0,o.registerIframeFrontendVersionHandler)(),(0,l.registerIframeGenerateHandler)(),(0,d.registerIframeLorebookEntryHandler)(),(0,c.registerIframeLorebookHandler)(),(0,m.registerIframeSlashHandler)(),(0,p.registerIframeTavernRegexHandler)(),(0,u.registerIframeUtilHandler)(),(0,_.registerIframeVariableHandler)(),(0,r.registerIframeCharacterHandler)(),(0,a.registerIframeAudioHandler)()},"./src/iframe_server/lorebook.ts":
/*!***************************************!*\
  !*** ./src/iframe_server/lorebook.ts ***!
  \***************************************/(e,t,n)=>{n.r(t),n.d(t,{registerIframeLorebookHandler:()=>c});var a=n(/*! @/compatibility */"./src/compatibility.ts"),r=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),s=n(/*! @sillytavern/script */"@sillytavern/script"),i=n(/*! @sillytavern/scripts/group-chats */"@sillytavern/scripts/group-chats"),o=n(/*! @sillytavern/scripts/utils */"@sillytavern/scripts/utils"),l=n(/*! @sillytavern/scripts/world-info */"@sillytavern/scripts/world-info");function c(){(0,r.registerIframeHandler)("[Lorebook][getLorebookSettings]",(async e=>{const t={selected_global_lorebooks:(n=(0,l.getWorldInfoSettings)()).world_info.globalSelect,scan_depth:n.world_info_depth,context_percentage:n.world_info_budget,budget_cap:n.world_info_budget_cap,min_activations:n.world_info_min_activations,max_depth:n.world_info_min_activations_depth_max,max_recursion_steps:n.world_info_max_recursion_steps,insertion_strategy:{0:"evenly",1:"character_first",2:"global_first"}[n.world_info_character_strategy],include_names:n.world_info_include_names,recursive:n.world_info_recursive,case_sensitive:n.world_info_case_sensitive,match_whole_words:n.world_info_match_whole_words,use_group_scoring:n.world_info_use_group_scoring,overflow_alert:n.world_info_overflow_alert};var n;return console.info(`${(0,r.getLogPrefix)(e)}获取世界书全局设置:\n${JSON.stringify(t,void 0,2)}`),t})),(0,r.registerIframeHandler)("[Lorebook][setLorebookSettings]",(async e=>{const t=e.data.settings;if(t.selected_global_lorebooks){const e=t.selected_global_lorebooks.filter((e=>!l.world_names.includes(e)));if(e.length>0)throw Error(`尝试修改要全局启用的世界书, 但未找到以下世界书: ${JSON.stringify(e)}`)}!function(e){const t={selected_global_lorebooks:e=>{$("#world_info").find('option[value!=""]').remove(),l.world_names.forEach(((t,n)=>$("#world_info").append(`<option value='${n}'${e.includes(t)?" selected":""}>${t}</option>`))),l.selected_world_info.length=0,l.selected_world_info.push(...e),(0,s.saveSettings)()},scan_depth:e=>{$("#world_info_depth").val(e).trigger("input")},context_percentage:e=>{$("#world_info_budget").val(e).trigger("input")},budget_cap:e=>{$("#world_info_budget_cap").val(e).trigger("input")},min_activations:e=>{$("#world_info_min_activations").val(e).trigger("input")},max_depth:e=>{$("#world_info_min_activations_depth_max").val(e).trigger("input")},max_recursion_steps:e=>{$("#world_info_max_recursion_steps").val(e).trigger("input")},insertion_strategy:e=>{const t={evenly:0,character_first:1,global_first:2}[e];$(`#world_info_character_strategy option[value='${t}']`).prop("selected",!0),$("#world_info_character_strategy").val(t).trigger("change")},include_names:e=>{$("#world_info_include_names").prop("checked",e).trigger("input")},recursive:e=>{$("#world_info_recursive").prop("checked",e).trigger("input")},case_sensitive:e=>{$("#world_info_case_sensitive").prop("checked",e).trigger("input")},match_whole_words:e=>{$("#world_info_match_whole_words").prop("checked",e).trigger("input")},use_group_scoring:e=>{$("#world_info_use_group_scoring").prop("checked",e).trigger("change")},overflow_alert:e=>{$("#world_info_overflow_alert").prop("checked",e).trigger("change")}};Object.entries(e).filter((([e,t])=>void 0!==t)).forEach((([e,n])=>{t[e]?.(n)}))}(t),console.info(`${(0,r.getLogPrefix)(e)}修改世界书全局设置:\n${JSON.stringify(t,void 0,2)}`)})),(0,r.registerIframeHandler)("[Lorebook][getCharLorebooks]",(async e=>{const t=e.data.option;if(i.selected_group&&!t.name)throw Error("不要在群组中调用这个功能");const n=t.name??s.characters[s.this_chid]?.avatar??null,o=(0,a.findChar)({name:n});if(!o)throw Error(`未找到名为 '${n}' 的角色卡`);let c={primary:null,additional:[]};o.data?.extensions?.world&&(c.primary=o.data?.extensions?.world);const d=l.world_info.charLore?.find((e=>e.name===n));return d&&Array.isArray(d.extraBooks)&&(c.additional=d.extraBooks),console.info(`${(0,r.getLogPrefix)(e)}获取角色卡绑定的世界书, 选项: ${JSON.stringify(t)}, 获取结果: ${JSON.stringify(c)}`),c})),(0,r.registerIframeHandler)("[Lorebook][setCurrentCharLorebooks]",(async e=>{const t=e.data.lorebooks;if(i.selected_group&&!option.name)throw Error("不要在群组中调用这个功能");const n=(0,o.getCharaFilename)(s.this_chid);if(!n)throw Error("未打开任何角色卡");const a=[...t.primary&&!l.world_names.includes(t.primary)?[t.primary]:[],...t.additional?t.additional.filter((e=>!l.world_names.includes(e))):[]];if(a.length>0)throw Error(`尝试修改 '${n}' 绑定的世界书, 但未找到以下世界书: ${a}`);if(void 0!==t.primary){const e=String($("#character_world").val());if($("#character_world").val(t.primary?t.primary:""),$(".character_world_info_selector").find("option:selected").val(t.primary?l.world_names.indexOf(t.primary):""),e&&!t.primary){const e=JSON.parse(String($("#character_json_data").val()));e?.data?.character_book&&(e.data.character_book=void 0),$("#character_json_data").val(JSON.stringify(e))}if(!await async function(){$("#rm_info_avatar").html("");const e=new FormData($("#form_create").get(0)),t=e.get("avatar");if(t instanceof File){const n=await(0,o.ensureImageFormatSupported)(t);e.set("avatar",n)}const n=(0,s.getRequestHeaders)();delete n["Content-Type"],e.delete("alternate_greetings");const a=$(".open_alternate_greetings").data("chid");if(a&&Array.isArray(s.characters[a]?.data?.alternate_greetings))for(const t of s.characters[a].data.alternate_greetings)e.append("alternate_greetings",t);return!!(await fetch("/api/characters/edit",{method:"POST",headers:n,body:e,cache:"no-cache"})).ok&&(await(0,s.getOneCharacter)(e.get("avatar_url")),$("#add_avatar_button").replaceWith($("#add_avatar_button").val("").clone(!0)),$("#create_button").attr("value","Save"),!0)}())throw Error(`尝试为 '${n}' 绑定主要世界书, 但在访问酒馆后端时出错`);(0,l.setWorldInfoButtonClass)(void 0,!!t.primary)}if(void 0!==t.additional){let e=l.world_info.charLore??[];const a=e.findIndex((e=>e.name===n));-1===a?e.push({name:n,extraBooks:t.additional}):0===t.additional.length?e.splice(a,1):e[a].extraBooks=t.additional,Object.assign(l.world_info,{charLore:e})}(0,s.saveCharacterDebounced)(),(0,s.saveSettingsDebounced)(),console.info(`${(0,r.getLogPrefix)(e)}修改角色卡绑定的世界书, 要修改的部分: ${JSON.stringify(t)}${void 0===t.primary?", 主要世界书保持不变":""}${void 0===t.additional?", 附加世界书保持不变":""}`)})),(0,r.registerIframeHandler)("[Lorebook][getLorebooks]",(async e=>(console.info(`${(0,r.getLogPrefix)(e)}获取世界书列表: ${JSON.stringify(l.world_names)}`),l.world_names))),(0,r.registerIframeHandler)("[Lorebook][deleteLorebook]",(async e=>{const t=e.data.lorebook,n=await(0,l.deleteWorldInfo)(t);return console.info(`${(0,r.getLogPrefix)(e)}移除世界书 '${t}' ${n?"成功":"失败"}`),n})),(0,r.registerIframeHandler)("[Lorebook][createLorebook]",(async e=>{const t=e.data.lorebook,n=await(0,l.createNewWorldInfo)(t,{interactive:!1});return console.info(`${(0,r.getLogPrefix)(e)}新建世界书 '${t}' ${n?"成功":"失败"}`),n}))}},"./src/iframe_server/lorebook_entry.ts":
/*!*********************************************!*\
  !*** ./src/iframe_server/lorebook_entry.ts ***!
  \*********************************************/(e,t,n)=>{n.r(t),n.d(t,{registerIframeLorebookEntryHandler:()=>d});var a=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),r=n(/*! @sillytavern/scripts/utils */"@sillytavern/scripts/utils"),s=n(/*! @sillytavern/scripts/world-info */"@sillytavern/scripts/world-info");function i(e){return{uid:e.uid,display_index:e.displayIndex,comment:e.comment,enabled:!e.disable,type:e.constant?"constant":e.vectorized?"vectorized":"selective",position:{0:"before_character_definition",1:"after_character_definition",5:"before_example_messages",6:"after_example_messages",2:"before_author_note",3:"after_author_note"}[e.position]??(0===e.role?"at_depth_as_system":1===e.role?"at_depth_as_user":"at_depth_as_assistant"),depth:4===e.position?e.depth:null,order:e.order,probability:e.probability,key:e.key,logic:{0:"and_any",1:"and_all",2:"not_any",3:"not_all"}[e.selectiveLogic],filter:e.keysecondary,scan_depth:e.scanDepth??"same_as_global",case_sensitive:e.caseSensitive??"same_as_global",match_whole_words:e.matchWholeWords??"same_as_global",use_group_scoring:e.useGroupScoring??"same_as_global",automation_id:e.automationId||null,exclude_recursion:e.excludeRecursion,prevent_recursion:e.preventRecursion,delay_until_recursion:e.delayUntilRecursion,content:e.content,group:e.group,group_prioritized:e.groupOverride,group_weight:e.groupWeight,sticky:e.sticky||null,cooldown:e.cooldown||null,delay:e.delay||null}}function o(e){const t={uid:e=>({uid:e}),display_index:e=>({displayIndex:e}),comment:e=>({comment:e}),enabled:e=>({disable:!e}),type:e=>({constant:"constant"===e,vectorized:"vectorized"===e}),position:e=>({position:{before_character_definition:0,after_character_definition:1,before_example_messages:5,after_example_messages:6,before_author_note:2,after_author_note:3,at_depth_as_system:4,at_depth_as_user:4,at_depth_as_assistant:4}[e],role:{at_depth_as_system:0,at_depth_as_user:1,at_depth_as_assistant:2}[e]??null}),depth:e=>({depth:null===e?4:e}),order:e=>({order:e}),probability:e=>({probability:e}),key:e=>({key:e}),logic:e=>({selectiveLogic:{and_any:0,and_all:1,not_any:2,not_all:3}[e]}),filter:e=>({keysecondary:e}),scan_depth:e=>({scanDepth:"same_as_global"===e?null:e}),case_sensitive:e=>({caseSensitive:"same_as_global"===e?null:e}),match_whole_words:e=>({matchWholeWords:"same_as_global"===e?null:e}),use_group_scoring:e=>({useGroupScoring:"same_as_global"===e?null:e}),automation_id:e=>({automationId:null===e?"":e}),exclude_recursion:e=>({excludeRecursion:e}),prevent_recursion:e=>({preventRecursion:e}),delay_until_recursion:e=>({delayUntilRecursion:e}),content:e=>({content:e}),group:e=>({group:e}),group_prioritized:e=>({groupOverride:e}),group_weight:e=>({groupWeight:e}),sticky:e=>({sticky:null===e?0:e}),cooldown:e=>({cooldown:null===e?0:e}),delay:e=>({delay:null===e?0:e})};return Object.entries(e).filter((([e,t])=>void 0!==t)).reduce(((e,[n,a])=>({...e,...t[n]?.(a)})),{})}function l(e,t,n){Object.entries(n).forEach((([n,a])=>{t[n]=a;const r=s.originalWIDataKeyMap[n];r&&(0,s.setWIOriginalDataValue)(e,t.uid,r,a)}))}const c=(0,r.debounce)((function(e){const t=Number($("#world_editor_select").val()),n=s.world_names.indexOf(e);-1!==n&&t===n&&$("#world_editor_select").val(n).trigger("change")}));function d(){(0,a.registerIframeHandler)("[LorebookEntry][getLorebookEntries]",(async e=>{const t=e.data.lorebook,n=e.data.option;if(!s.world_names.includes(t))throw Error(`未能找到世界书 '${t}'`);let r=Object.values((await(0,s.loadWorldInfo)(t)).entries).map(i);return"none"!==n.filter&&(r=r.filter((e=>Object.entries(n.filter).every((([t,n])=>{const a=e[t];return Array.isArray(a)?n.every((e=>a.includes(e))):"string"==typeof a?a.includes(n):a===n}))))),console.info(`${(0,a.getLogPrefix)(e)}获取世界书 '${t}' 中的条目, 选项: ${JSON.stringify(n)}`),r})),(0,a.registerIframeHandler)("[LorebookEntry][setLorebookEntries]",(async e=>{const t=e.data.lorebook,n=e.data.entries;if(!s.world_names.includes(t))throw Error(`未能找到世界书 '${t}'`);const r=await(0,s.loadWorldInfo)(t);await Promise.all(n.map((async e=>{const n=r.entries[e.uid];if(!n)throw Error(`未能在世界书 '${t}' 中找到 uid=${e.uid} 的条目`);l(r,n,o(e))}))),await(0,s.saveWorldInfo)(t,r),c(t),console.info(`${(0,a.getLogPrefix)(e)}修改世界书 '${t}' 中以下条目的以下字段:\n${JSON.stringify(n,void 0,2)}`)})),(0,a.registerIframeHandler)("[LorebookEntry][createLorebookEntry]",(async e=>{const t=e.data.lorebook,n=e.data.field_values;if(!s.world_names.includes(t))throw Error(`未能找到世界书 '${t}'`);const r=await(0,s.loadWorldInfo)(t),i=(0,s.createWorldInfoEntry)(t,r),d=o(n);return d.uid&&delete d.uid,l(r,i,d),await(0,s.saveWorldInfo)(t,r),c(t),console.info(`${(0,a.getLogPrefix)(e)}在世界书 '${t}' 中新建 uid='${i.uid}' 条目, 并设置内容:\n${JSON.stringify(n,void 0,2)}`),i.uid})),(0,a.registerIframeHandler)("[LorebookEntry][deleteLorebookEntry]",(async e=>{const t=e.data.lorebook,n=e.data.lorebook_uid,r=await(0,s.loadWorldInfo)(t);let i=!1;return r.entries[n]&&(delete r.entries[n],i=!0),i&&((0,s.deleteWIOriginalDataValue)(r,n),await(0,s.saveWorldInfo)(t,r),c(t)),console.info(`${(0,a.getLogPrefix)(e)}删除世界书 '${t}' 中的 uid='${n}' 条目${i?"成功":"失败"}`),i}))}},"./src/iframe_server/slash.ts":
/*!************************************!*\
  !*** ./src/iframe_server/slash.ts ***!
  \************************************/(e,t,n)=>{n.r(t),n.d(t,{registerIframeSlashHandler:()=>s});var a=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),r=n(/*! @sillytavern/scripts/slash-commands */"@sillytavern/scripts/slash-commands");function s(){(0,a.registerIframeHandler)("[Slash][triggerSlash]",(async e=>{const t=e.data.command,n=await(0,r.executeSlashCommandsWithOptions)(t);if(n.isError)throw Error(`运行 Slash 命令 '${t}' 时出错: ${n.errorMessage}`);console.info(`${(0,a.getLogPrefix)(e)}运行 Slash 命令: ${t}`)})),(0,a.registerIframeHandler)("[Slash][triggerSlashWithResult]",(async e=>{const t=e.data.command,n=await(0,r.executeSlashCommandsWithOptions)(t);if(n.isError)throw Error(`运行 Slash 命令 '${t}' 时出错: ${n.errorMessage}`);return console.info(`${(0,a.getLogPrefix)(e)}运行 Slash 命令 '${t}', 结果: ${n.pipe}`),n.pipe}))}},"./src/iframe_server/tavern_regex.ts":
/*!*******************************************!*\
  !*** ./src/iframe_server/tavern_regex.ts ***!
  \*******************************************/(e,t,n)=>{n.r(t),n.d(t,{getCharacterRegexes:()=>d,getGlobalRegexes:()=>c,isCharacterTavernRegexEnabled:()=>l,registerIframeTavernRegexHandler:()=>u});var a=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),r=n(/*! @/util/helper */"./src/util/helper.ts"),s=n(/*! @sillytavern/script */"@sillytavern/script"),i=n(/*! @sillytavern/scripts/extensions */"@sillytavern/scripts/extensions"),o=n(/*! @sillytavern/scripts/extensions/regex/engine */"@sillytavern/scripts/extensions/regex/engine");function l(){return i.extension_settings?.character_allowed_regex?.includes(s.characters?.[s.this_chid]?.avatar)}function c(){return i.extension_settings.regex??[]}function d(){return s.characters[s.this_chid]?.data?.extensions?.regex_scripts??[]}function m(e,t){return{id:e.id,script_name:e.scriptName,enabled:!e.disabled,run_on_edit:e.runOnEdit,scope:t,find_regex:e.findRegex,replace_string:e.replaceString,source:{user_input:e.placement.includes(o.regex_placement.USER_INPUT),ai_output:e.placement.includes(o.regex_placement.AI_OUTPUT),slash_command:e.placement.includes(o.regex_placement.SLASH_COMMAND),world_info:e.placement.includes(o.regex_placement.WORLD_INFO)},destination:{display:e.markdownOnly,prompt:e.promptOnly},min_depth:"number"==typeof e.minDepth?e.minDepth:null,max_depth:"number"==typeof e.maxDepth?e.maxDepth:null}}function p(e){return{id:e.id,scriptName:e.script_name,disabled:!e.enabled,runOnEdit:e.run_on_edit,findRegex:e.find_regex,replaceString:e.replace_string,trimStrings:[],placement:[...e.source.user_input?[o.regex_placement.USER_INPUT]:[],...e.source.ai_output?[o.regex_placement.AI_OUTPUT]:[],...e.source.slash_command?[o.regex_placement.SLASH_COMMAND]:[],...e.source.world_info?[o.regex_placement.WORLD_INFO]:[]],substituteRegex:0,minDepth:e.min_depth,maxDepth:e.max_depth,markdownOnly:e.destination.display,promptOnly:e.destination.prompt}}function u(){(0,a.registerIframeHandler)("[TavernRegex][isCharacterTavernRegexesEnabled]",(async e=>{const t=l();return console.info(`${(0,a.getLogPrefix)(e)}查询到局部正则${t?"被启用":"被禁用"}`),t})),(0,a.registerIframeHandler)("[TavernRegex][getTavernRegexes]",(async e=>{const t=e.data.option;if(!["all","enabled","disabled"].includes(t.enable_state))throw Error(`提供的 enable_state 无效, 请提供 'all', 'enabled' 或 'disabled', 你提供的是: ${t.enable_state}`);if(!["all","global","character"].includes(t.scope))throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${t.scope}`);let n=[];return"all"!==t.scope&&"global"!==t.scope||(n=[...n,...c().map((e=>m(e,"global")))]),"all"!==t.scope&&"character"!==t.scope||(n=[...n,...d().map((e=>m(e,"character")))]),"all"!==t.enable_state&&(n=n.filter((e=>e.enabled===("enabled"===t.enable_state)))),console.info(`${(0,a.getLogPrefix)(e)}获取酒馆正则数据, 选项: ${JSON.stringify(t)}`),n})),(0,a.registerIframeHandler)("[TavernRegex][replaceTavernRegexes]",(async e=>{const t=e.data.regexes,n=e.data.option;if(!["all","global","character"].includes(n.scope))throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${n.scope}`);const o=t.filter((e=>""==e.script_name));if(o.length>0)throw Error(`不能将酒馆正则的名称设置为空字符串:\n${JSON.stringify(o.map((e=>e.id)))}`);const[l,c]=(0,r.partition)(t,(e=>"global"===e.scope)).map((e=>e.map(p))),d=s.characters[s.this_chid];"all"!==n.scope&&"global"!==n.scope||(i.extension_settings.regex=l),"all"!==n.scope&&"character"!==n.scope||d&&(s.characters[s.this_chid].data.extensions.regex_scripts=c,await(0,i.writeExtensionField)(s.this_chid,"regex_scripts",c)),await(0,s.saveSettings)(),d&&await(0,s.saveChatConditional)(),await(0,s.reloadCurrentChat)(),console.info(`${(0,a.getLogPrefix)(e)}替换酒馆正则${"all"===n.scope||"global"===n.scope?`, 全局正则:\n${JSON.stringify(l,void 0,2)}`:""}${"all"===n.scope||"character"===n.scope?`, 局部正则:\n${JSON.stringify(c,void 0,2)}`:""}`)}))}},"./src/iframe_server/util.ts":
/*!***********************************!*\
  !*** ./src/iframe_server/util.ts ***!
  \***********************************/(e,t,n)=>{n.r(t),n.d(t,{registerIframeUtilHandler:()=>s});var a=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),r=n(/*! @sillytavern/script */"@sillytavern/script");function s(){(0,a.registerIframeHandler)("[Utils][substitudeMacros]",(async e=>{const t=e.data.text,n=(0,r.substituteParamsExtended)(t);return console.info(`${(0,a.getLogPrefix)(e)}替换字符串中的宏, 字符串: '${t}', 结果: '${n}'`),n}))}},"./src/iframe_server/variables.ts":
/*!****************************************!*\
  !*** ./src/iframe_server/variables.ts ***!
  \****************************************/(e,t,n)=>{n.r(t),n.d(t,{checkVariablesEvents:()=>d,clearTempVariables:()=>l,registerIframeVariableHandler:()=>o,shouldUpdateVariables:()=>c});var a=n(/*! @/iframe_server/_impl */"./src/iframe_server/_impl.ts"),r=n(/*! @sillytavern/script */"@sillytavern/script"),s=n(/*! @sillytavern/scripts/extensions */"@sillytavern/scripts/extensions");let i=null;function o(){(0,a.registerIframeHandler)("[Variables][getVariables]",(async e=>{const t=e.data.option,n=function(e){switch(e){case"chat":const e=r.chat_metadata;return e.variables||(e.variables={}),e.variables;case"global":return s.extension_settings.variables.global}}(t.type);return console.info(`${(0,a.getLogPrefix)(e)}获取${"chat"==t.type?"聊天":"全局"}变量表:\n${JSON.stringify(n,void 0,2)}`),n})),(0,a.registerIframeHandler)("[Variables][replaceVariables]",(async e=>{const t=e.data.variables,n=e.data.option;switch(n.type){case"chat":await r.eventSource.emit("variables_updated",n.type,r.chat_metadata.variables,t),r.chat_metadata.variables=t,(0,s.saveMetadataDebounced)();break;case"global":await r.eventSource.emit("variables_updated",n.type,s.extension_settings.variables.global,t),s.extension_settings.variables.global=t,(0,r.saveSettingsDebounced)()}console.info(`${(0,a.getLogPrefix)(e)}将${"chat"==n.type?"聊天":"全局"}变量表替换为:\n${JSON.stringify(t,void 0,2)}`)})),(0,a.registerIframeHandler)("[Variables][setVariables]",(async e=>{const t=e.data.variables,n=e.data.message_id;if(isNaN(n))return;const o=(0,s.getContext)().chat.length-1;if(n!==o)return void console.info(`因为 ${n} 楼不是最新楼层 ${o} 楼, 取消设置聊天变量. 原本要设置的变量:\n${JSON.stringify(t,void 0,2)} `);i=n,r.chat_metadata.variables&&"object"==typeof r.chat_metadata.variables||(r.chat_metadata.variables={}),r.chat_metadata.variables.tempVariables&&"object"==typeof r.chat_metadata.variables.tempVariables||(r.chat_metadata.variables.tempVariables={}),t.hasOwnProperty("tempVariables")&&delete t.tempVariables;const l=r.chat_metadata.variables.tempVariables,c=r.chat_metadata.variables;Object.keys(t).forEach((e=>{const n=t[e];n!==c[e]&&(l[e]=n)})),r.chat_metadata.variables.tempVariables=l,(0,s.saveMetadataDebounced)(),console.info(`${(0,a.getLogPrefix)(e)}设置聊天变量, 要设置的变量:\n${JSON.stringify(t,void 0,2)} `)}))}function l(){r.chat_metadata.variables&&r.chat_metadata.variables.tempVariables&&Object.keys(r.chat_metadata.variables.tempVariables).length>0&&(console.log("[Var]Clearing tempVariables."),r.chat_metadata.variables.tempVariables={},(0,s.saveMetadataDebounced)())}function c(e){if(r.chat_metadata.variables&&r.chat_metadata.variables.tempVariables&&0!==Object.keys(r.chat_metadata.variables.tempVariables).length)if(e!==i)if(null!==i&&e>i){console.log("[Var]Event mesId is newer than setVariables mesId, updating ST variables.");!function(e){r.chat_metadata.variables||(r.chat_metadata.variables={});const t=r.chat_metadata.variables;for(let n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);r.chat_metadata.variables=t,(0,s.saveMetadataDebounced)()}({...r.chat_metadata.variables.tempVariables}),r.chat_metadata.variables.tempVariables={},console.log("[Var]TempVariables cleared.")}else console.log("[Var]Event mesId is older than setVariables mesId, ignoring.");else console.log("[Var]MesId matches the latest setVariables, skipping ST variable update.")}const d=[r.event_types.CHARACTER_MESSAGE_RENDERED,r.event_types.USER_MESSAGE_RENDERED]},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/(e,t,n)=>{n.r(t),n.d(t,{extensionFolderPath:()=>y,extensionName:()=>v,getSettingValue:()=>T});var a=n(/*! @/component/audio */"./src/component/audio.ts"),r=n(/*! @/component/character_level/index */"./src/component/character_level/index.ts"),s=n(/*! @/component/macro */"./src/component/macro.ts"),i=n(/*! @/component/message_iframe */"./src/component/message_iframe.ts"),o=n(/*! @/component/script_repository */"./src/component/script_repository.ts"),l=n(/*! @/iframe_client/index */"./src/iframe_client/index.ts"),c=n(/*! @/iframe_server/index */"./src/iframe_server/index.ts"),d=n(/*! @/iframe_server/variables */"./src/iframe_server/variables.ts"),m=n(/*! @/script_url */"./src/script_url.ts"),p=n(/*! @/slash_command/event */"./src/slash_command/event.ts"),u=n(/*! @/third_party.html */"./src/third_party.html"),_=n(/*! @sillytavern/script */"@sillytavern/script"),g=n(/*! @sillytavern/scripts/extensions */"@sillytavern/scripts/extensions"),f=n(/*! @sillytavern/scripts/slash-commands */"@sillytavern/scripts/slash-commands"),h=n(/*! @sillytavern/scripts/slash-commands/SlashCommandParser */"@sillytavern/scripts/slash-commands/SlashCommandParser");const v="JS-Slash-Runner",y=`third-party/${v}`;let b=!1;const w={activate_setting:!0,render:{...i.defaultIframeSettings},audio:{...a.defaultAudioSettings}},x=()=>{(0,i.renderAllIframes)(),T("render.rendering_optimize")&&(0,i.addCodeToggleButtonsToAllMessages)()},E=e=>{(0,i.renderPartialIframes)(e)},S=e=>{(0,d.clearTempVariables)(),(0,i.renderMessageAfterDelete)(e),T("render.rendering_optimize")&&(0,i.addCodeToggleButtonsToAllMessages)()},A=e=>{(0,d.shouldUpdateVariables)(e)};async function C(e=!0){const t=Boolean($("#activate_setting").prop("checked"));e&&(g.extension_settings[v].activate_setting=t),t?(m.script_url.set("iframe_client",l.iframe_client),m.script_url.set("viewport_adjust_script",i.viewport_adjust_script),m.script_url.set("tampermonkey_script",i.tampermonkey_script),(0,s.registerAllMacros)(),(0,s.initializeMacroOnExtension)(),(0,r.initializeCharacterLevelOnExtension)(),e&&T("render.rendering_optimize")&&(0,i.addRenderingOptimizeSettings)(),window.addEventListener("message",c.handleIframe),_.eventSource.on(_.event_types.CHAT_CHANGED,x),i.partialRenderEvents.forEach((e=>{_.eventSource.on(e,(e=>E(e)))})),d.checkVariablesEvents.forEach((e=>{_.eventSource.on(e,(e=>A(e)))})),_.eventSource.on(_.event_types.MESSAGE_DELETED,(e=>S(e))),e&&await(0,i.renderAllIframes)()):(m.script_url.delete("iframe_client"),m.script_url.delete("viewport_adjust_script"),m.script_url.delete("tampermonkey_script"),(0,s.unregisterAllMacros)(),(0,s.destroyMacroOnExtension)(),(0,r.destroyCharacterLevelOnExtension)(),T("render.rendering_optimize")&&(0,i.removeRenderingOptimizeSettings)(),window.removeEventListener("message",c.handleIframe),_.eventSource.removeListener(_.event_types.CHAT_CHANGED,x),i.partialRenderEvents.forEach((e=>{_.eventSource.removeListener(e,(e=>E(e)))})),d.checkVariablesEvents.forEach((e=>{_.eventSource.removeListener(e,(e=>A(e)))})),_.eventSource.removeListener(_.event_types.MESSAGE_DELETED,(e=>S(e))),e&&void 0!==_.this_chid&&await(0,_.reloadCurrentChat)()),$("#js_slash_runner_text").text(T("activate_setting")?"关闭前端渲染":"开启前端渲染"),(0,_.saveSettingsDebounced)()}function k(){const e=Object.keys(h.SlashCommandParser.commands).filter((e=>h.SlashCommandParser.commands[e].name===e)).sort(((e,t)=>e.toLowerCase().localeCompare(t.toLowerCase()))).map((e=>h.SlashCommandParser.commands[e])),t=e=>{const t={name:e=>({name:e}),isRequired:e=>({is_required:e}),defaultValue:e=>null!==e?{default_value:e}:{},acceptsMultiple:e=>({accepts_multiple:e}),enumList:e=>e.length>0?{enum_list:e.map((e=>e.value))}:{},typeList:e=>e.length>0?{type_list:e}:{}};return Object.entries(e).filter((([e,t])=>void 0!==t)).reduce(((e,[n,a])=>({...e,...t[n]?.(a)})),{})};return e.map((e=>{return{name:e.name,named_args:e.namedArgumentList.map(t)??[],unnamed_args:e.unnamedArgumentList.map(t)??[],return_type:e.returns??"void",help_string:(n=e.helpString,$("<span>").html(n).text().split("\n").map((e=>e.trim())).filter((e=>""!==e)).join(" ")??"NO DETAILS")};var n})).map((e=>`/${e.name}${e.named_args.length>0?" ":""}${e.named_args.map((e=>`[${e.accepts_multiple?"...":""}${e.name}=${e.enum_list?e.enum_list.join("|"):e.type_list.join("|")}]${e.is_required?"":"?"}${e.default_value?`=${e.default_value}`:""}`)).join(" ")}${e.unnamed_args.length>0?" ":""}${e.unnamed_args.map((e=>`(${e.accepts_multiple?"...":""}${e.enum_list?e.enum_list.join("|"):e.type_list.join("|")})${e.is_required?"":"?"}${e.default_value?`=${e.default_value}`:""}`)).join(" ")} // ${e.help_string}`)).join("\n")}function T(e){const t=e.split(".");let n=g.extension_settings[v];for(const e of t){if(null==n)return;n=n[e]}return n}jQuery((async()=>{const e=await(0,g.renderExtensionTemplateAsync)(`${y}`,"settings");$(document.getElementById("extensions_settings")).append(e),g.extension_settings[v]=g.extension_settings[v]||{},g.extension_settings[v]&&g.extension_settings[v].render&&g.extension_settings[v].audio||(Object.assign(g.extension_settings[v],w),(0,_.saveSettingsDebounced)()),$("#activate_setting").prop("checked",T("activate_setting")),$("#activate_setting").on("click",(()=>C(!0))),T("activate_setting")&&C(!1),function(){const e=$(`\n  <div id="js_slash_runner_container" class="list-group-item flex-container flexGap5 interactable">\n      <div class="fa-solid fa-puzzle-piece extensionsMenuExtensionButton" /></div>\n      <span id="js_slash_runner_text">${T("activate_setting")?"关闭前端渲染":"开启前端渲染"}</span>\n  </div>`);e.css("display","flex"),$("#extensionsMenu").append(e),$("#js_slash_runner_container").on("click",(function(){const e=$("#activate_setting").prop("checked");$("#activate_setting").prop("checked",!e),C(!0)}))}(),$("#scriptLibraryButton").off("click").on("click",(function(){b=!b,$("#scriptLibraryPopup").slideToggle(200,"swing")})),$(document).on("mousedown touchstart",(function(e){const t=$(e.target);b&&0===t.closest("#scriptLibraryButton").length&&0===t.closest("#scriptLibraryPopup").length&&($("#scriptLibraryPopup").slideUp(200,"swing"),b=!1)})),$("#copy_third_party_installation").on("pointerup",(function(){navigator.clipboard.writeText("npm install --save-dev @types/file-saver @types/jquery @types/jqueryui @types/lodash @types/yamljs"),(0,f.executeSlashCommandsWithOptions)("/echo severity=success 已复制到剪贴板!")})),$("#copy_third_party_tag").on("pointerup",(function(){navigator.clipboard.writeText(u.default),(0,f.executeSlashCommandsWithOptions)("/echo severity=success 已复制到剪贴板!")})),$("#download_slash_commands").on("click",(function(){const e=URL.createObjectURL(new Blob([k()],{type:"text/plain"}));$(this).attr("href",e),$(this).attr("download","slash_command.txt"),setTimeout((()=>URL.revokeObjectURL(e)),0)})),(0,o.initAutoSettings)(),(0,a.initAudioComponents)(),(0,p.initSlashEventEmit)(),(0,i.initIframePanel)()}))},"./src/script_url.ts":
/*!***************************!*\
  !*** ./src/script_url.ts ***!
  \***************************/(e,t,n)=>{n.r(t),n.d(t,{script_url:()=>r});var a=n(/*! @/util/helper */"./src/util/helper.ts");let r=new class{map=new Map;get(e){return this.map.get(e)}set(e,t){this.map.set(e,function(e){return URL.createObjectURL(new Blob([e],{type:"application/javascript"}))}(t))}delete(e){const t=(0,a.extract)(this.map,e);return t?(URL.revokeObjectURL(t),t):t}}},"./src/slash_command/audio.ts":
/*!************************************!*\
  !*** ./src/slash_command/audio.ts ***!
  \************************************/(e,t,n)=>{n.r(t),n.d(t,{audioEnable:()=>u,audioImport:()=>g,audioMode:()=>p,audioPlay:()=>_,audioSelect:()=>f,initAudioSlashCommands:()=>h});var a=n(/*! @/component/audio */"./src/component/audio.ts"),r=n(/*! @/index */"./src/index.ts"),s=n(/*! @sillytavern/script */"@sillytavern/script"),i=n(/*! @sillytavern/scripts/extensions */"@sillytavern/scripts/extensions"),o=n(/*! @sillytavern/scripts/slash-commands/SlashCommand */"@sillytavern/scripts/slash-commands/SlashCommand"),l=n(/*! @sillytavern/scripts/slash-commands/SlashCommandArgument */"@sillytavern/scripts/slash-commands/SlashCommandArgument"),c=n(/*! @sillytavern/scripts/slash-commands/SlashCommandCommonEnumsProvider */"@sillytavern/scripts/slash-commands/SlashCommandCommonEnumsProvider"),d=n(/*! @sillytavern/scripts/slash-commands/SlashCommandEnumValue */"@sillytavern/scripts/slash-commands/SlashCommandEnumValue"),m=n(/*! @sillytavern/scripts/slash-commands/SlashCommandParser */"@sillytavern/scripts/slash-commands/SlashCommandParser");async function p(e){const t=e.type.toLowerCase(),n=e.mode.toLowerCase();if(["bgm","ambient"].includes(t)&&["repeat","random","single","stop"].includes(n)||console.warn("WARN: Invalid arguments for /audiomode command"),"bgm"===t){i.extension_settings[r.extensionName].audio.bgm_mode=n;const e={repeat:"fa-repeat",random:"fa-random",single:"fa-redo-alt",stop:"fa-cancel"};$("#audio_bgm_mode_icon").removeClass("fa-repeat fa-random fa-redo-alt fa-cancel"),$("#audio_bgm_mode_icon").addClass(e[n])}else if("ambient"===t){i.extension_settings[r.extensionName].audio.ambient_mode=n;const e={repeat:"fa-repeat",random:"fa-random",single:"fa-redo-alt",stop:"fa-cancel"};$("#audio_ambient_mode_icon").removeClass("fa-repeat fa-random fa-redo-alt fa-cancel"),$("#audio_ambient_mode_icon").addClass(e[n])}(0,s.saveSettingsDebounced)()}async function u(e){const t=e.type.toLowerCase(),n=(e.state||"true").toLowerCase();t||console.warn("WARN: Missing arguments for /audioenable command"),"bgm"===t?"true"===n?($("#enable_bgm").prop("checked",!0),await(0,a.onAudioEnabledClick)("bgm")):"false"===n&&($("#enable_bgm").prop("checked",!1),await(0,a.onAudioEnabledClick)("bgm")):"ambient"===t&&("true"===n?($("#enable_ambient").prop("checked",!0),await(0,a.onAudioEnabledClick)("ambient")):"false"===n&&($("#enable_ambient").prop("checked",!1),await(0,a.onAudioEnabledClick)("ambient")))}async function _(e){const t=e.type.toLowerCase(),n=(e.play||"true").toLowerCase();if(t||console.warn("WARN: Missing arguments for /audioplaypause command"),"bgm"===t){if("true"===n)await(0,a.playAudio)("bgm");else if("false"===n){$("#audio_bgm")[0].pause()}}else if("ambient"===t)if("true"===n)await(0,a.playAudio)("ambient");else if("false"===n){$("#audio_ambient")[0].pause()}}async function g(e,t){const n=e.type.toLowerCase(),o=(e.play||"true").toLowerCase();n&&t||console.warn("WARN: Missing arguments for /audioimport command");const l=t.split(",").map((e=>e.trim())).filter((e=>""!==e)).filter(((e,t,n)=>n.indexOf(e)===t));0===l.length&&console.warn("WARN: Invalid or empty URLs provided."),s.chat_metadata.variables||(s.chat_metadata.variables={});const c="bgm"===n?"bgmurl":"ambienturl",d=s.chat_metadata.variables[c]||[],m=[...new Set([...l,...d])];if(s.chat_metadata.variables[c]=m,(0,i.saveMetadataDebounced)(),"bgm"===n?(0,a.updateAudioSelect)("bgm"):"ambient"===n&&(0,a.updateAudioSelect)("ambient"),"true"===o&&l[0]){const e=l[0];"bgm"===n?(i.extension_settings[r.extensionName].audio.bgm_selected=e,await(0,a.updateAudio)("bgm",!0)):"ambient"===n&&(i.extension_settings[r.extensionName].audio.ambient_selected=e,await(0,a.updateAudio)("ambient",!0))}}async function f(e,t){const n=e.type.toLowerCase();t||console.warn("WARN: Missing URL for /audioselect command"),s.chat_metadata.variables||(s.chat_metadata.variables={});let o="bgm"===n?a.list_BGMS:a.list_ambients;const l="bgm"===n?"bgmurl":"ambienturl";o&&o.includes(t)&&("bgm"===n?(i.extension_settings[r.extensionName].audio.bgm_selected=t,await(0,a.updateAudio)("bgm",!0)):"ambient"===n&&(i.extension_settings[r.extensionName].audio.ambient_selected=t,await(0,a.updateAudio)("ambient",!0)));const c=s.chat_metadata.variables[l]||[],d=[...new Set([t,...c])];s.chat_metadata.variables[l]=d,(0,i.saveMetadataDebounced)(),"bgm"===n?((0,a.updateAudioSelect)("bgm"),i.extension_settings[r.extensionName].audio.bgm_selected=t,await(0,a.updateAudio)("bgm",!0)):"ambient"===n&&((0,a.updateAudioSelect)("ambient"),i.extension_settings[r.extensionName].audio.ambient_selected=t,await(0,a.updateAudio)("ambient",!0))}function h(){m.SlashCommandParser.addCommandObject(o.SlashCommand.fromProps({name:"audioselect",callback:f,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择播放器类型 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0})],unnamedArgumentList:[new l.SlashCommandArgument("url",[l.ARGUMENT_TYPE.STRING],!0)],helpString:"\n        <div>\n            选择并播放音频。如果音频链接不存在，则先导入再播放。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioselect type=bgm https://example.com/song.mp3</code></pre>\n                    选择并播放指定的音乐。\n                </li>\n                <li>\n                    <pre><code>/audioselect type=ambient https://example.com/sound.mp3</code></pre>\n                    选择并播放指定的音效。\n                </li>\n            </ul>\n        </div>\n      "})),m.SlashCommandParser.addCommandObject(o.SlashCommand.fromProps({name:"audioimport",callback:g,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择导入类型 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0}),l.SlashCommandNamedArgument.fromProps({name:"play",description:"导入后是否立即播放第一个链接",typeList:[l.ARGUMENT_TYPE.BOOLEAN],defaultValue:"true",isRequired:!1})],unnamedArgumentList:[new l.SlashCommandArgument("url",[l.ARGUMENT_TYPE.STRING],!0)],helpString:"\n        <div>\n            导入音频或音乐链接，并决定是否立即播放，默认为自动播放。可批量导入链接，使用英文逗号分隔。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioimport type=bgm https://example.com/song1.mp3,https://example.com/song2.mp3</code></pre>\n                    导入 BGM 音乐并立即播放第一个链接。\n                </li>\n                <li>\n                    <pre><code>/audioimport type=ambient play=false url=https://example.com/sound1.mp3,https://example.com/sound2.mp3 </code></pre>\n                    导入音效链接 (不自动播放)。\n                </li>\n            </ul>\n        </div>\n      "})),m.SlashCommandParser.addCommandObject(o.SlashCommand.fromProps({name:"audioplay",callback:_,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择控制的播放器 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0}),new l.SlashCommandNamedArgument("play","播放或暂停",[l.ARGUMENT_TYPE.STRING],!0,!1,"true",c.commonEnumProviders.boolean("trueFalse")())],helpString:"\n        <div>\n            控制音乐播放器或音效播放器的播放与暂停。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioplay type=bgm</code></pre>\n                    播放当前音乐。\n                </li>\n                <li>\n                    <pre><code>/audioplay type=ambient play=false</code></pre>\n                    暂停当前音效。\n                </li>\n            </ul>\n        </div>\n      "})),m.SlashCommandParser.addCommandObject(o.SlashCommand.fromProps({name:"audioenable",callback:u,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择控制的播放器 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0}),new l.SlashCommandNamedArgument("state","打开或关闭播放器",[l.ARGUMENT_TYPE.STRING],!1,!1,"true",c.commonEnumProviders.boolean("trueFalse")())],helpString:"\n        <div>\n            控制音乐播放器或音效播放器的开启与关闭。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioenable type=bgm state=true</code></pre>\n                    打开音乐播放器。\n                </li>\n                <li>\n                    <pre><code>/audioenable type=ambient state=false</code></pre>\n                    关闭音效播放器。\n                </li>\n            </ul>\n        </div>\n    "})),m.SlashCommandParser.addCommandObject(o.SlashCommand.fromProps({name:"audiomode",callback:p,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择控制的播放器 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0}),l.SlashCommandNamedArgument.fromProps({name:"mode",description:"选择播放模式",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("repeat",null,d.enumTypes.enum,c.enumIcons.loop),new d.SlashCommandEnumValue("random",null,d.enumTypes.enum,c.enumIcons.shuffle),new d.SlashCommandEnumValue("single",null,d.enumTypes.enum,c.enumIcons.redo),new d.SlashCommandEnumValue("stop",null,d.enumTypes.enum,c.enumIcons.stop)],isRequired:!0})],helpString:"\n        <div>\n            设置音频播放模式。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=repeat</code></pre>\n                    设置音乐为循环播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=random</code></pre>\n                    设置音效为随机播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=single</code></pre>\n                    设置音乐为单曲循环模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=stop</code></pre>\n                    设置音效为停止播放模式。\n                </li>\n            </ul>\n        </div>\n    "}))}},"./src/slash_command/event.ts":
/*!************************************!*\
  !*** ./src/slash_command/event.ts ***!
  \************************************/(e,t,n)=>{n.r(t),n.d(t,{initSlashEventEmit:()=>l,slashEventEmit:()=>o});var a=n(/*! @sillytavern/script */"@sillytavern/script"),r=n(/*! @sillytavern/scripts/slash-commands/SlashCommand */"@sillytavern/scripts/slash-commands/SlashCommand"),s=n(/*! @sillytavern/scripts/slash-commands/SlashCommandArgument */"@sillytavern/scripts/slash-commands/SlashCommandArgument"),i=n(/*! @sillytavern/scripts/slash-commands/SlashCommandParser */"@sillytavern/scripts/slash-commands/SlashCommandParser");async function o(e){const t=e.event,n=e.data??[];return a.eventSource.emit(t,...n),console.info(`[Event][/event-emit] 发送 '${t}' 事件, 携带数据: ${JSON.stringify(n)}`),t}function l(){i.SlashCommandParser.addCommandObject(r.SlashCommand.fromProps({name:"event-emit",callback:o,returns:"发送的事件名称",namedArgumentList:[s.SlashCommandNamedArgument.fromProps({name:"event",description:"事件名称",typeList:[s.ARGUMENT_TYPE.STRING],isRequired:!0}),s.SlashCommandNamedArgument.fromProps({name:"data",description:"要传输的数据",typeList:[s.ARGUMENT_TYPE.STRING],isRequired:!1,acceptsMultiple:!0})],unnamedArgumentList:[],helpString:'\n    <div>\n        发送 `event` 事件, 同时可以发送一些数据.\n        所有正在监听该消息频道的 listener 函数都会自动运行, 并能用函数参数接收发送来的数据.\n        由于酒馆 STScript 输入方式的局限性, 所有数据将会以字符串 string 类型接收; 如果需要 number 等类型, 请自行转换.\n    </div>\n    <div>\n        <strong>Example:</strong>\n        <ul>\n            <li>\n                <pre><code class="language-stscript">/event-emit event="读档"</code></pre>\n            </li>\n            <li>\n                <pre><code class="language-stscript">/event-emit event="存档" data={{getvar::数据}} data=8 data=你好 {{user}}</code></pre>\n            </li>\n            <li>\n                <pre><code class="language-stscript">/event-emit event="随便什么名称" data="这是一个 数据" data={{user}}</code></pre>\n            </li>\n        </ul>\n    </div>\n  '}))}},"./src/third_party.html":
/*!******************************!*\
  !*** ./src/third_party.html ***!
  \******************************/(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});const a='<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"\n    integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="\n    crossorigin="anonymous" referrerpolicy="no-referrer" />\n<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/themes/base/jquery-ui.min.css"\n    integrity="sha512-TFee0335YRJoyiqz8hA8KV3P0tXa5CpRBSoM0Wnkn7JoJx1kaq1yXL/rb8YFpWXkMOjRcv5txv+C6UluttluCQ=="\n    crossorigin="anonymous" referrerpolicy="no-referrer" />\n<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"\n    integrity="sha512-Qlv6VSKh1gDKGoJbnyA5RMXYcvnpIqhO++MhIM2fStMcGT9i2T//tSwYFlcyoRRDcDZ+TYHpH8azBBCyhpSeqw=="\n    crossorigin="anonymous" referrerpolicy="no-referrer"><\/script>\n<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"\n    integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="\n    crossorigin="anonymous" referrerpolicy="no-referrer"><\/script>\n<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js"\n    integrity="sha512-MSOo1aY+3pXCOCdGAYoBZ6YGI0aragoQsg1mKKBHXCYPIWxamwOE7Drh+N5CPgGI5SA9IEKJiPjdfqWFWmZtRA=="\n    crossorigin="anonymous" referrerpolicy="no-referrer"><\/script>\n<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"\n    integrity="sha512-WFN04846sdKMIP5LKNphMaWzU7YpMyCU245etK3g/2ARYbPK9Ub18eG+ljU96qKRCWh+quCY7yefSmlkQw1ANQ=="\n    crossorigin="anonymous" referrerpolicy="no-referrer"><\/script>\n<script src="https://cdnjs.cloudflare.com/ajax/libs/yamljs/0.3.0/yaml.min.js"\n    integrity="sha512-f/K0Q5lZ1SrdNdjc2BO2I5kTx8E5Uw1EU3PhSUB9fYPohap5rPWEmQRCjtpDxNmQB4/+MMI/Cf+nvh1VSiwrTA=="\n    crossorigin="anonymous" referrerpolicy="no-referrer"><\/script>\n'},"./src/util/helper.ts":
/*!****************************!*\
  !*** ./src/util/helper.ts ***!
  \****************************/(e,t,n)=>{n.r(t),n.d(t,{extract:()=>l,get_or_set:()=>o,partition:()=>r,set_or_add:()=>s,try_set:()=>i,with_fallback:()=>c});var a=n(/*! @/util/multimap */"./src/util/multimap.ts");function r(e,t){return e.reduce((([e,n],a)=>(t(a)?e.push(a):n.push(a),[e,n])),[[],[]])}function s(e,t,n,r){return e.has(t)?(e.get(t).put(n,r),!1):(e.set(t,new a.SetMultimap([[n,r]])),!0)}function i(e,t,n){return!e.has(t)&&(e.set(t,n),!0)}function o(e,t,n){const a=e.get(t);if(a)return a;const r=n();return e.set(t,r),r}function l(e,t){const n=e.get(t);if(n)return e.delete(t),n}function c(e,t){const n={...t};for(const t in e)void 0!==e[t]&&(n[t]=e[t]);return n}},"./src/util/load_script.ts":
/*!*********************************!*\
  !*** ./src/util/load_script.ts ***!
  \*********************************/(e,t,n)=>{n.r(t),n.d(t,{is_equal_scripts:()=>s,loadScripts:()=>r});var a=n(/*! @/iframe_server/tavern_regex */"./src/iframe_server/tavern_regex.ts");function r(e){const t=t=>t.scriptName.replace(/^【.*】/,"").startsWith(e),n=e=>!e.disabled,r=t=>t.scriptName.replace(/^【.*】/,"").replace(e,"");let s=[];const i=(0,a.getGlobalRegexes)().filter(t).filter(n);s.push(...i);const o=(0,a.getCharacterRegexes)().filter(t).filter(n).filter((e=>!!(0,a.isCharacterTavernRegexEnabled)()||e.runOnEdit));s.push(...o);return s.map((e=>({name:r(e),code:e.replaceString})))}function s(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n].name!==t[n].name&&e[n].code!==t[n].code)return!1;return!0}},"./src/util/multimap.ts":
/*!******************************!*\
  !*** ./src/util/multimap.ts ***!
  \******************************/(e,t,n)=>{n.r(t),n.d(t,{ArrayMultimap:()=>r,SetMultimap:()=>i});class a{size_=0;map=new Map;operator;constructor(e,t){if(this.operator=e,t)for(const[e,n]of t)this.put(e,n);return this}get size(){return this.size_}get(e){const t=this.map.get(e);return t?this.operator.clone(t):this.operator.create()}put(e,t){let n=this.map.get(e);return n||(n=this.operator.create()),!!this.operator.add(t,n)&&(this.map.set(e,n),this.size_++,!0)}putAll(e,t){let n=0;if(t){const a=e,r=t;for(const e of r)this.put(a,e),n++}else{if(!(e instanceof a))throw new TypeError("unexpected arguments");for(const[t,a]of e.entries())this.put(t,a),n++}return n>0}has(e){return this.map.has(e)}hasEntry(e,t){return this.operator.has(t,this.get(e))}delete(e){return this.size_-=this.operator.size(this.get(e)),this.map.delete(e)}deleteEntry(e,t){const n=this.get(e);return!!this.operator.delete(t,n)&&(this.map.set(e,n),this.size_--,!0)}clear(){this.map.clear(),this.size_=0}keys(){return this.map.keys()}entries(){const e=this;return function*(){for(const[t,n]of e.map.entries())for(const e of n)yield[t,e]}()}values(){const e=this;return function*(){for(const[,t]of e.entries())yield t}()}forEach(e,t){for(const[n,a]of this.entries())e.call(void 0===t?this:t,a,n,this)}[Symbol.iterator](){return this.entries()}asMap(){const e=new Map;for(const t of this.keys())e.set(t,this.operator.clone(this.get(t)));return e}}class r extends a{constructor(e){super(new s,e)}get[Symbol.toStringTag](){return"ArrayMultimap"}}class s{create(){return[]}clone(e){return e.slice()}add(e,t){return t.push(e),!0}size(e){return e.length}delete(e,t){const n=t.indexOf(e);return n>-1&&(t.splice(n,1),!0)}has(e,t){return t.includes(e)}}class i extends a{constructor(e){super(new o,e)}get[Symbol.toStringTag](){return"SetMultimap"}}class o{create(){return new Set}clone(e){return new Set(e)}add(e,t){const n=t.size;return t.add(e),n!==t.size}size(e){return e.size}delete(e,t){return t.delete(e)}has(e,t){return t.has(e)}}},"@sillytavern/script":
/*!*******************************************!*\
  !*** external "../../../../../script.js" ***!
  \*******************************************/t=>{t.exports=e},"@sillytavern/scripts/PromptManager":
/*!**********************************************************!*\
  !*** external "../../../../../scripts/PromptManager.js" ***!
  \**********************************************************/e=>{e.exports=n},"@sillytavern/scripts/RossAscends-mods":
/*!*************************************************************!*\
  !*** external "../../../../../scripts/RossAscends-mods.js" ***!
  \*************************************************************/e=>{e.exports=a},"@sillytavern/scripts/authors-note":
/*!*********************************************************!*\
  !*** external "../../../../../scripts/authors-note.js" ***!
  \*********************************************************/e=>{e.exports=r},"@sillytavern/scripts/extensions":
/*!*******************************************************!*\
  !*** external "../../../../../scripts/extensions.js" ***!
  \*******************************************************/e=>{e.exports=s},"@sillytavern/scripts/extensions/regex/engine":
/*!********************************************************************!*\
  !*** external "../../../../../scripts/extensions/regex/engine.js" ***!
  \********************************************************************/e=>{e.exports=i},"@sillytavern/scripts/group-chats":
/*!********************************************************!*\
  !*** external "../../../../../scripts/group-chats.js" ***!
  \********************************************************/e=>{e.exports=o},"@sillytavern/scripts/i18n":
/*!*************************************************!*\
  !*** external "../../../../../scripts/i18n.js" ***!
  \*************************************************/e=>{e.exports=l},"@sillytavern/scripts/macros":
/*!***************************************************!*\
  !*** external "../../../../../scripts/macros.js" ***!
  \***************************************************/e=>{e.exports=c},"@sillytavern/scripts/openai":
/*!***************************************************!*\
  !*** external "../../../../../scripts/openai.js" ***!
  \***************************************************/e=>{e.exports=d},"@sillytavern/scripts/popup":
/*!**************************************************!*\
  !*** external "../../../../../scripts/popup.js" ***!
  \**************************************************/e=>{e.exports=m},"@sillytavern/scripts/power-user":
/*!*******************************************************!*\
  !*** external "../../../../../scripts/power-user.js" ***!
  \*******************************************************/e=>{e.exports=p},"@sillytavern/scripts/slash-commands":
/*!***********************************************************!*\
  !*** external "../../../../../scripts/slash-commands.js" ***!
  \***********************************************************/e=>{e.exports=u},"@sillytavern/scripts/slash-commands/SlashCommand":
/*!************************************************************************!*\
  !*** external "../../../../../scripts/slash-commands/SlashCommand.js" ***!
  \************************************************************************/e=>{e.exports=g},"@sillytavern/scripts/slash-commands/SlashCommandArgument":
/*!********************************************************************************!*\
  !*** external "../../../../../scripts/slash-commands/SlashCommandArgument.js" ***!
  \********************************************************************************/e=>{e.exports=f},"@sillytavern/scripts/slash-commands/SlashCommandCommonEnumsProvider":
/*!*******************************************************************************************!*\
  !*** external "../../../../../scripts/slash-commands/SlashCommandCommonEnumsProvider.js" ***!
  \*******************************************************************************************/e=>{e.exports=h},"@sillytavern/scripts/slash-commands/SlashCommandEnumValue":
/*!*********************************************************************************!*\
  !*** external "../../../../../scripts/slash-commands/SlashCommandEnumValue.js" ***!
  \*********************************************************************************/e=>{e.exports=v},"@sillytavern/scripts/slash-commands/SlashCommandParser":
/*!******************************************************************************!*\
  !*** external "../../../../../scripts/slash-commands/SlashCommandParser.js" ***!
  \******************************************************************************/e=>{e.exports=y},"@sillytavern/scripts/tags":
/*!*************************************************!*\
  !*** external "../../../../../scripts/tags.js" ***!
  \*************************************************/e=>{e.exports=b},"@sillytavern/scripts/utils":
/*!**************************************************!*\
  !*** external "../../../../../scripts/utils.js" ***!
  \**************************************************/e=>{e.exports=w},"@sillytavern/scripts/world-info":
/*!*******************************************************!*\
  !*** external "../../../../../scripts/world-info.js" ***!
  \*******************************************************/e=>{e.exports=x}},S={};function A(e){var t=S[e];if(void 0!==t)return t.exports;var n=S[e]={exports:{}};return E[e](n,n.exports,A),n.exports}A.d=(e,t)=>{for(var n in t)A.o(t,n)&&!A.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},A.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),A.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var C=A("./src/index.ts"),k=C.extensionFolderPath,T=C.extensionName,I=C.getSettingValue;export{k as extensionFolderPath,T as extensionName,I as getSettingValue};
//# sourceMappingURL=index.js.map